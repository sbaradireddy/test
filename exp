WITH EXPTRANS AS (
    -- Writing query for expression function
    SELECT 
        SQ_S10_NJ_DMV_EXTRACT.source_record_id,
        SQ_S10_NJ_DMV_EXTRACT.POL_PK,
        SQ_S10_NJ_DMV_EXTRACT.PRIME_CONV_FLG,
        NULL AS REINST_RSN,
        SUBSTR(PSTL_CD, 1, 5) AS ZIP_FIRST5_CD,
        SUBSTR(PSTL_CD, 7, 4) AS ZIP_PLUS_CD,
        REGEXP_REPLACE('{{BATCH_START_DT}}', CHR(39), NULL, 1, 0, 'c') AS v_BATCH_START_DT,
        REGEXP_REPLACE('{{BATCH_END_DT}}', CHR(39), NULL, 1, 0, 'c') AS v_BATCH_END_DT,
        REGEXP_REPLACE('{{RPRTG_PERIOD_START_DT}}', CHR(39), NULL, 1, 0, 'c') AS v_RPRTG_PERIOD_START_DT,
        REGEXP_REPLACE('{{RPRTG_PERIOD_END_DT}}', CHR(39), NULL, 1, 0, 'c') AS v_RPRTG_PERIOD_END_DT,
        IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'RN' AND PRIME_CONV_FLG = 'Y' AND CO_CD = 'ALN_PSIA' AND PRE_CONV_CO_CD = 'PIC', 'NB', 
            IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'RN' AND PRIME_CONV_FLG = 'Y' AND CO_CD = 'ALN_PIC', 'NB', 
                IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'NB', 'NB', 
                    IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'CN', 'CN', 
                        IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'RN', 'RN', 
                            IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'EN', 'AV', 
                                IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'RS', 'RS', '')))))))) AS DMV_TRANS_TYPE,
        UPPER(MK) AS MK_caps,
        RPAD(UPPER(LTRIM(RTRIM(VIN))), 19, ' ') AS DMV_VIN,
        IFF(DRVR_LIC_NUM IS NULL OR DRVR_LIC_STATE != 'NJ', '               ', RPAD(UPPER(LTRIM(RTRIM(DRVR_LIC_NUM))), 15, ' ')) AS DMV_DRIVER_LICENSE_NUMBER,
        RPAD(UPPER(LTRIM(RTRIM(STAT_MAKE_CD))), 5, ' ') AS DMV_MAKE_OF_CAR,
        IFF(MODEL_YR IS NULL OR MODEL_YR = 0, '     ', RPAD(LTRIM(RTRIM(TO_CHAR(MODEL_YR))), 4, ' ')) AS DMV_YEAR_OF_CAR,
        '     ' AS DMV_MODEL_OF_CAR,
        DECODE(RTRIM(LTRIM(CO_CD)), 'PIC', '4895', 'PSIA', '4840', 'HPPREF', '4808', 'HPSIC', '4875', 'HPPROP', '4876', 'HPPROP2', '4876', 'TCTIPU', '4946', 'TCTIPU2', '4946', 'PAIPTWIN', '4927', 'ALN_HPCIC', '4876', 'ALN_TEACH', '4946', 'ALN_PSIA', '4840', 'ALN_PIC', '4895', 'XXXX') AS DMV_INS_COMPANY_CD,
        RPAD(UPPER(LTRIM(RTRIM(HSE_NUM))) || ' ' || UPPER(LTRIM(RTRIM(ADDRESS1))), 30, ' ') AS DMV_POLICY_OWNER_STREET_ADDR,
        RPAD(UPPER(LTRIM(RTRIM(CITY))), 20, ' ') AS DMV_POLICY_OWNER_CITY,
        RPAD(UPPER(LTRIM(RTRIM(STATE))), 2, ' ') AS DMV_POLICY_OWNER_STATE,
        RPAD(LTRIM(RTRIM(ZIP_FIRST5_CD)), 9, ' ') AS DMV_POLICY_OWNER_ZIP_CODE,
        IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 1) = 'C', 'C', 'N') AS DMV_TRANSACTION_TYPE_CODE,
        IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 2) = 'CN', '00000000', TO_CHAR(POL_STATE_EFF_DT, 'MMDDYYYY')) AS DMV_POLICY_EFFECTIVE_DATE,
        IFF(SUBSTR(POL_VRSN_TXN_TYP, 1, 1) = 'C', TO_CHAR(POL_STATE_EFF_DT, 'MMDDYYYY'), '00000000') AS DMV_POLICY_CANCELLATION_DATE,
        TO_CHAR(SYSDATE(), 'MMDDYYYY') AS DMV_DATE_STAMP,
        RPAD(LTRIM(RTRIM(POL_NUM)), 30, ' ') AS DMV_POLICY_NUMBER,
        RPAD(' ', 31) AS DMV_RESERVED,
        TO_VARCHAR(v_BATCH_START_DT, 'YYYY-MM-DD') AS BATCH_START_DT,
        TO_VARCHAR(v_BATCH_END_DT, 'YYYY-MM-DD') AS BATCH_END_DT,
        TO_VARCHAR(v_RPRTG_PERIOD_START_DT, 'YYYY-MM-DD') AS RPRTG_PERIOD_START_DT,
        TO_VARCHAR(v_RPRTG_PERIOD_END_DT, 'YYYY-MM-DD') AS RPRTG_PERIOD_END_DT,
        LKP_ALT_LIC_NUM.INSD_PTY_PK AS lkp_INSD_PTY_PK,
        LKP_ALT_LIC_NUM.SRC_PTY_ID AS lkp_SRC_PTY_ID,
        LKP_ALT_LIC_NUM.NAM_FST AS lkp_NAM_FST,
        LKP_ALT_LIC_NUM.NAM_LST AS lkp_NAM_LST,
        LKP_ALT_LIC_NUM.NAM_MDL AS lkp_NAM_MDL,
        LKP_ALT_LIC_NUM.NAM_SFX AS lkp_NAM_SFX,
        LKP_ALT_LIC_NUM.PMRY_NAMD_INSD_FLG AS lkp_PMRY_NAMD_INSD_FLG,
        LKP_ALT_LIC_NUM.DRVR_FLG AS lkp_DRVR_FLG,
        LKP_ALT_LIC_NUM.DRVR_LIC_NUM AS lkp_DRVR_LIC_NUM,
        LKP_ALT_LIC_NUM.DRVR_LIC_STATE AS lkp_DRVR_LIC_STATE,
        LKP_NCIC_VEH_MAKE_CODE.NCIC_VAL
    FROM SQ_S10_NJ_DMV_EXTRACT
    LEFT JOIN (
        -- Writing query for lookup function
        SELECT 
            T_POL_PTY_DIM_HST.INSD_PTY_PK,
            T_POL_PTY_DIM_HST.SRC_PTY_ID,
            T_POL_PTY_DIM_HST.NAM_FST,
            T_POL_PTY_DIM_HST.NAM_LST,
            T_POL_PTY_DIM_HST.NAM_MDL,
            T_POL_PTY_DIM_HST.NAM_SFX,
            T_POL_PTY_DIM_HST.PMRY_NAMD_INSD_FLG,
            T_POL_PTY_DIM_HST.NAMD_INSD_FLG,
            T_POL_PTY_DIM_HST.DRVR_FLG,
            T_POL_PTY_DIM_HST.DRVR_LIC_NUM,
            T_POL_PTY_DIM_HST.DRVR_LIC_STATE,
            T_POL_PTY_DIM_HST.POL_PK,
            ROW_NUMBER() OVER (PARTITION BY POL_PK ORDER BY POL_PK) AS rn
        FROM T_POL_PTY_DIM_HST
        QUALIFY rn = 1
    ) LKP_ALT_LIC_NUM ON LKP_ALT_LIC_NUM.POL_PK = SQ_S10_NJ_DMV_EXTRACT.POL_PK
    LEFT JOIN (
        -- Writing query for lookup function
        SELECT 
            NCIC_VAL,
            VEH_MAKE_CD,
            ROW_NUMBER() OVER (PARTITION BY VEH_MAKE_CD ORDER BY VEH_MAKE_CD) AS rn
        FROM NCIC_CODES_XREF
        QUALIFY rn = 1
    ) LKP_NCIC_VEH_MAKE_CODE ON LKP_NCIC_VEH_MAKE_CODE.VEH_MAKE_CD = UPPER(SQ_S10_NJ_DMV_EXTRACT.MK)
),
WITH EXP_PRIMARY_DRIVER AS (
    -- Writing query for expression function
    SELECT 
        source_record_id,
        lkp_INSD_PTY_PK AS INSD_PTY_PK_PRMRY_DRVR,
        lkp_SRC_PTY_ID AS SRC_PTY_ID_PRMRY_DRVR,
        lkp_NAM_FST AS NAM_FST_PRMRY_DRVR,
        lkp_NAM_LST AS NAM_LST_PRMRY_DRVR,
        lkp_NAM_MDL AS NAM_MDL_PRMRY_DRVR,
        lkp_NAM_SFX AS NAM_SFX_PRMRY_DRVR,
        lkp_PMRY_NAMD_INSD_FLG AS NAMD_INSD_FLG_PRMRY_DRVR,
        lkp_DRVR_FLG AS DRVR_FLG_PRMRY_DRVR,
        lkp_DRVR_LIC_NUM AS DRVR_LIC_NUM_PRMRY_DRVR,
        lkp_DRVR_LIC_STATE AS DRVR_LIC_STATE_PRMRY_DRVR
    FROM EXPTRANS
)
,
WITH EXPTRANS1 AS (
    -- Writing query for expression function
    SELECT 
        source_record_id,
        NEXTVAL -- (Use the sequence created in Snowflake) 
            AS NJ_DMV_UMIS_MTH_BUILD_ID,
        EXPTRANS.POL_PK,
        EXPTRANS.POL_NUM,
        EXPTRANS.POL_SEQ_NUM,
        NULL AS ORIG_POL_PK,
        EXPTRANS.POL_STATE_VRSN,
        EXPTRANS.POL_STATE_EFF_DT,
        EXPTRANS.ACCTG_DT,
        EXPTRANS.POL_STATE_STAT,
        EXPTRANS.ROW_XPTN_DT,
        EXPTRANS.POL_VRSN_TXN_TYP,
        EXPTRANS.ROW_STAT,
        EXPTRANS.RCD_ACTN_TYP AS RCD_ACTN_TYP_POL,
        EXPTRANS.DATA_DT,
        EXPTRANS.CORP_CD,
        EXPTRANS.CO_CD,
        EXPTRANS.SRC_PROD_ID,
        EXPTRANS.SRC_CD,
        EXPTRANS.SRC_POL_ID,
        EXPTRANS.CO_ID,
        EXPTRANS.PROD_ID,
        EXPTRANS.CUR_TERM_EFF_DT,
        EXPTRANS.CUR_TERM_XPTN_DT,
        EXPTRANS.CNCL_RSN,
        EXPTRANS.CNCL_TYP,
        EXPTRANS.CNCL_EFF_DT,
        EXPTRANS.REINST_EFF_DT,
        EXPTRANS.REINST_RSN,
        EXPTRANS.LAPSE_BEGIN_DT,
        EXPTRANS.LAPSE_END_DT,
        EXPTRANS.PLN_CD,
        EXPTRANS.PRIME_CONV_FLG,
        EXPTRANS.DMV_TRANS_TYPE,
        EXPTRANS.VEH_UNIT_PK,
        EXPTRANS.RCD_ACTN_TYP_VEH AS RCD_ACTN_TYP_VEH,
        EXPTRANS.ORGL_EFF_DT,
        EXPTRANS.VEH_TYP_CD,
        EXPTRANS.VIN,
        EXPTRANS.MODEL_YR,
        EXPTRANS.MK,
        EXPTRANS.STAT_MAKE_CD,
        EXPTRANS.NCIC_VAL AS NCIC_VEH_MAKE,
        EXPTRANS.ADDR_PK,
        EXPTRANS.PMRY_ADDR_FLG,
        EXPTRANS.HSE_NUM,
        EXPTRANS.ADDRESS1,
        EXPTRANS.ADDRESS2,
        EXPTRANS.ADDRESS3,
        EXPTRANS.ADDRESS4,
        EXPTRANS.CITY,
        EXPTRANS.STATE,
        EXPTRANS.CNTY,
        EXPTRANS.PSTL_CD,
        EXPTRANS.INSD_PTY_PK AS INSD_PTY_PK_POL_OWNER,
        EXPTRANS.SRC_PTY_ID AS SRC_PTY_ID_POL_OWNER,
        EXPTRANS.NAM_FST AS NAM_FST_POL_OWNER,
        EXPTRANS.NAM_LST AS NAM_LST_POL_OWNER,
        EXPTRANS.NAM_MDL AS NAM_MDL_POL_OWNER,
        EXPTRANS.NAM_SFX AS NAM_SFX_POL_OWNER,
        EXPTRANS.BUS_NAM AS BUS_NAM_POL_OWNER,
        EXPTRANS.PMRY_NAMD_INSD_FLG AS PMRY_NAMD_INSD_FLG_POL_OWNER,
        EXPTRANS.NAMD_INSD_FLG AS NAMD_INSD_FLG_POL_OWNER,
        EXPTRANS.DRVR_FLG AS DRVR_FLG_POL_OWNER,
        EXPTRANS.DRVR_LIC_NUM AS DRVR_LIC_NUM_POL_OWNER,
        EXPTRANS.DRVR_LIC_STATE AS DRVR_LIC_STATE_POL_OWNER,
        NULL AS ASSOCN_TYP_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.INSD_PTY_PK_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.SRC_PTY_ID_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.NAM_FST_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.NAM_LST_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.NAM_MDL_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.NAM_SFX_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.NAMD_INSD_FLG_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.DRVR_FLG_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.DRVR_LIC_NUM_PRMRY_DRVR,
        EXP_PRIMARY_DRIVER.DRVR_LIC_STATE_PRMRY_DRVR,
        NULL AS BATCH_ID,
        EXPTRANS.BATCH_START_DT,
        EXPTRANS.BATCH_END_DT,
        EXPTRANS.RPRTG_PERIOD_START_DT,
        EXPTRANS.RPRTG_PERIOD_END_DT,
        EXPTRANS.DMV_VIN,
        EXPTRANS.DMV_MAKE_OF_CAR,
        EXPTRANS.DMV_YEAR_OF_CAR,
        EXPTRANS.DMV_MODEL_OF_CAR,
        EXPTRANS.DMV_INS_COMPANY_CD,
        EXPTRANS.DMV_POLICY_OWNER_STREET_ADDR,
        EXPTRANS.DMV_POLICY_OWNER_CITY,
        EXPTRANS.DMV_POLICY_OWNER_STATE,
        EXPTRANS.DMV_POLICY_OWNER_ZIP_CODE,
        EXPTRANS.DMV_TRANSACTION_TYPE_CODE,
        EXPTRANS.DMV_POLICY_EFFECTIVE_DATE,
        EXPTRANS.DMV_POLICY_CANCELLATION_DATE,
        EXPTRANS.DMV_DATE_STAMP,
        EXPTRANS.DMV_POLICY_NUMBER,
        EXPTRANS.DMV_RESERVED,
        EXPTRANS.PRCSG_GRP_CD,
        EXPTRANS.PROD_CD,
        EXPTRANS.REINST_TYP,
        EXPTRANS.SRC_CORP_ID,
        EXPTRANS.SRC_CO_ID,
        EXPTRANS.PRIME_POL_FLG,
        EXPTRANS.PRE_CONV_CO_CD,
        IFF(LENGTH(DRVR_LIC_NUM_POL_OWNER) >= 15 
            AND UPPER(SUBSTR(DRVR_LIC_NUM_POL_OWNER,1,1)) IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'), 'Y','N') AS POL_OWNER_LIC_LIKELY_NJ_IND,
        IFF(LENGTH(DRVR_LIC_NUM_PRMRY_DRVR) >= 15 
            AND UPPER(SUBSTR(DRVR_LIC_NUM_PRMRY_DRVR,1,1)) IN ('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'), 'Y','N') AS PRMRY_DRVR_LIC_LIKELY_NJ_IND,
        SUBSTR(PSTL_CD,1,5) AS ZIP_FIRST5_CD,
        SUBSTR(PSTL_CD,7,4) AS ZIP_LAST4_CD,
        SYSDATE() AS CREATE_DT,
        'M_S10_NJ_DMV_EXTRACT' AS CREATED_BY,
        IFF(DRVR_LIC_NUM_POL_OWNER IS NULL AND DRVR_LIC_NUM_PRMRY_DRVR IS NULL, 
            '               ', 
            IFF(DRVR_LIC_STATE_POL_OWNER = 'NJ' 
                AND DRVR_LIC_NUM_PRMRY_DRVR IS NULL, 
                RPAD(UPPER(DRVR_LIC_NUM_POL_OWNER), 15, ' '), 
                IFF(DRVR_LIC_STATE_PRMRY_DRVR = 'NJ', 
                    RPAD(UPPER(DRVR_LIC_NUM_PRMRY_DRVR), 15, ' '), 
                    IFF(POL_OWNER_LIC_LIKELY_NJ_IND = 'Y', 
                        RPAD(UPPER(DRVR_LIC_NUM_POL_OWNER), 15, ' '), 
                        IFF(PRMRY_DRVR_LIC_LIKELY_NJ_IND = 'Y', 
                            RPAD(UPPER(DRVR_LIC_NUM_PRMRY_DRVR), 15, ' '), 
                            '               ')
                    )
                )
            )
        ) AS DMV_DRIVER_LICENSE_NUMBER,
        IFF(DMV_MAKE_OF_CAR IS NULL 
            AND NCIC_VEH_MAKE IS NULL 
            AND MK IS NULL, 
            '     ', 
            IFF(DMV_MAKE_OF_CAR IS NULL 
                AND NCIC_VEH_MAKE IS NULL,
                RPAD(UPPER(SUBSTR(RTRIM(LTRIM(MK)),1,5)),5,' '), 
                IFF(DMV_MAKE_OF_CAR IS NULL, 
                    RPAD(SUBSTR(RTRIM(LTRIM(NCIC_VEH_MAKE)),1,5),5,' '), 
                    UPPER(DMV_MAKE_OF_CAR)
                )
            )
        ) AS DMV_MAKE_OF_CAR_out
    FROM 
        EXPTRANS
    INNER JOIN 
        EXP_PRIMARY_DRIVER ON EXPTRANS.source_record_id = EXP_PRIMARY_DRIVER.source_record_id
)
,
WITH UPDTRANS AS (
    -- Writing query for update strategy function
    SELECT 
        EXPTRANS1.source_record_id,
        ADDR_PK,
        PMRY_ADDR_FLG,
        HSE_NUM,
        ADDRESS1,
        ADDRESS2,
        ADDRESS3,
        ADDRESS4,
        BATCH_START_DT,
        RPRTG_PERIOD_END_DT,
        DMV_VIN,
        BATCH_END_DT,
        RPRTG_PERIOD_START_DT,
        DMV_POLICY_EFFECTIVE_DATE,
        CNCL_RSN,
        DRVR_LIC_STATE_POL_OWNER,
        NAM_FST_POL_OWNER,
        NAMD_INSD_FLG_POL_OWNER,
        ZIP_FIRST5_CD,
        REINST_TYP,
        CO_CD,
        SRC_PROD_ID,
        SRC_CD,
        SRC_POL_ID,
        PSTL_CD,
        CITY,
        STATE,
        CNTY,
        RCD_ACTN_TYP_POL,
        DATA_DT,
        CORP_CD,
        DRVR_FLG_POL_OWNER,
        DRVR_LIC_NUM_POL_OWNER,
        DMV_DATE_STAMP,
        DMV_POLICY_NUMBER,
        DMV_RESERVED,
        PRCSG_GRP_CD,
        PROD_CD,
        SRC_CORP_ID,
        SRC_CO_ID,
        DMV_POLICY_OWNER_ZIP_CODE,
        DMV_TRANSACTION_TYPE_CODE,
        DMV_POLICY_OWNER_STATE,
        CREATED_BY,
        CUR_TERM_EFF_DT,
        CUR_TERM_XPTN_DT,
        DMV_POLICY_OWNER_CITY,
        VEH_UNIT_PK,
        RCD_ACTN_TYP_VEH,
        ORGL_EFF_DT,
        REINST_EFF_DT,
        REINST_RSN,
        LAPSE_BEGIN_DT,
        LAPSE_END_DT,
        PLN_CD,
        DMV_TRANS_TYPE,
        INSD_PTY_PK_POL_OWNER,
        SRC_PTY_ID_POL_OWNER,
        ACCTG_DT,
        POL_STATE_STAT,
        ROW_XPTN_DT,
        POL_VRSN_TXN_TYP,
        ROW_STAT,
        CO_ID,
        PROD_ID,
        NAM_LST_POL_OWNER,
        NAM_MDL_POL_OWNER,
        NAM_SFX_POL_OWNER,
        BUS_NAM_POL_OWNER,
        PMRY_NAMD_INSD_FLG_POL_OWNER,
        DMV_MAKE_OF_CAR_out AS DMV_MAKE_OF_CAR,
        NJ_DMV_UMIS_MTH_BUILD_ID,
        POL_PK,
        POL_NUM,
        POL_SEQ_NUM,
        ORIG_POL_PK,
        POL_STATE_VRSN,
        POL_STATE_EFF_DT,
        DMV_POLICY_CANCELLATION_DATE,
        NAM_FST_PRMRY_DRVR,
        NAM_LST_PRMRY_DRVR,
        NAM_MDL__PRMRY_DRVR,
        NAM_SFX_PRMRY_DRVR,
        NAMD_INSD_FLG_PRMRY_DRVR,
        DRVR_FLG_PRMRY_DRVR,
        DRVR_LIC_NUM_PRMRY_DRVR,
        DRVR_LIC_STATE__PRMRY_DRVR,
        VEH_TYP_CD,
        VIN,
        MODEL_YR,
        MK,
        STAT_MAKE_CD,
        CNCL_TYP,
        ZIP_LAST4_CD,
        ASSOCN_TYP_PRMRY_DRVR,
        INSD_PTY_PK_PRMRY_DRVR,
        SRC_PTY_ID_PRMRY_DRVR,
        CNCL_EFF_DT,
        BATCH_ID,
        CREATE_DT,
        DMV_DRIVER_LICENSE_NUMBER,
        DMV_YEAR_OF_CAR,
        DMV_MODEL_OF_CAR,
        DMV_INS_COMPANY_CD,
        DMV_POLICY_OWNER_STREET_ADDR,
        PRE_CONV_CO_CD
    FROM 
        EXPTRANS1
)
,
WITH FINAL_SELECT_S10_NJ_DMV_MTHLY_EXTRACT AS (
    -- Writing query for target definition
    SELECT 
        NJ_DMV_UMIS_MTH_BUILD_ID :: INTEGER AS NJ_DMV_UMIS_MTH_BUILD_ID,
        POL_PK :: INTEGER AS POL_PK,
        TRIM(POL_NUM) :: VARCHAR(25) AS POL_NUM,
        POL_SEQ_NUM :: INTEGER AS POL_SEQ_NUM,
        ORIG_POL_PK :: INTEGER AS ORIG_POL_PK,
        POL_STATE_VRSN :: INTEGER AS POL_STATE_VRSN,
        POL_STATE_EFF_DT :: DATE AS POL_STATE_EFF_DT,
        ACCTG_DT :: DATE AS ACCTG_DT,
        TRIM(POL_STATE_STAT) :: VARCHAR(10) AS POL_STATE_STAT,
        ROW_XPTN_DT :: DATE AS ROW_XPTN_DT,
        TRIM(POL_VRSN_TXN_TYP) :: VARCHAR(3) AS POL_VRSN_TXN_TYP,
        TRIM(ROW_STAT) :: VARCHAR(10) AS ROW_STAT,
        TRIM(RCD_ACTN_TYP_POL) :: VARCHAR(1) AS RCD_ACTN_TYP_POL,
        DATA_DT :: DATE AS DATA_DT,
        TRIM(CORP_CD) :: VARCHAR(10) AS CORP_CD,
        TRIM(CO_CD) :: VARCHAR(10) AS CO_CD,
        SRC_PROD_ID :: INTEGER AS SRC_PROD_ID,
        TRIM(SRC_CD) :: VARCHAR(10) AS SRC_CD,
        SRC_POL_ID :: INTEGER AS SRC_POL_ID,
        CO_ID :: INTEGER AS CO_ID,
        PROD_ID :: INTEGER AS PROD_ID,
        SRC_CORP_ID :: INTEGER AS SRC_CORP_ID,
        SRC_CO_ID :: INTEGER AS SRC_CO_ID,
        TRIM(PRCSG_GRP_CD) :: VARCHAR(10) AS PRCSG_GRP_CD,
        TRIM(PROD_CD) :: VARCHAR(10) AS PROD_CD,
        CUR_TERM_EFF_DT :: DATE AS CUR_TERM_EFF_DT,
        CUR_TERM_XPTN_DT :: DATE AS CUR_TERM_XPTN_DT,
        TRIM(CNCL_RSN) :: VARCHAR(15) AS CNCL_RSN,
        TRIM(CNCL_TYP) :: VARCHAR(2) AS CNCL_TYP,
        CNCL_EFF_DT :: DATE AS CNCL_EFF_DT,
        TRIM(REINST_TYP) :: VARCHAR(10) AS REINST_TYP,
        REINST_EFF_DT :: DATE AS REINST_EFF_DT,
        TRIM(REINST_RSN) :: VARCHAR(50) AS REINST_RSN,
        LAPSE_BEGIN_DT :: DATE AS LAPSE_BEGIN_DT,
        LAPSE_END_DT :: DATE AS LAPSE_END_DT,
        TRIM(PLN_CD) :: VARCHAR(10) AS PLN_CD,
        TRIM(DMV_TRANS_TYPE) :: VARCHAR(2) AS DMV_TRANS_TYPE,
        VEH_UNIT_PK :: INTEGER AS VEH_UNIT_PK,
        TRIM(RCD_ACTN_TYP_VEH) :: VARCHAR(1) AS RCD_ACTN_TYP_VEH,
        ORGL_EFF_DT :: DATE AS ORGL_EFF_DT,
        TRIM(VEH_TYP_CD) :: VARCHAR(10) AS VEH_TYP_CD,
        TRIM(VIN) :: VARCHAR(30) AS VIN,
        MODEL_YR :: INTEGER AS MODEL_YR,
        TRIM(MK) :: VARCHAR(25) AS MK,
        TRIM(STAT_MAKE_CD) :: VARCHAR(20) AS STAT_MAKE_CD,
        ADDR_PK :: INTEGER AS ADDR_PK,
        TRIM(PMRY_ADDR_FLG) :: VARCHAR(1) AS PMRY_ADDR_FLG,
        TRIM(HSE_NUM) :: VARCHAR(10) AS HSE_NUM,
        TRIM(ADDRESS1) :: VARCHAR(50) AS ADDRESS1,
        TRIM(ADDRESS2) :: VARCHAR(50) AS ADDRESS2,
        TRIM(ADDRESS3) :: VARCHAR(50) AS ADDRESS3,
        TRIM(ADDRESS4) :: VARCHAR(50) AS ADDRESS4,
        TRIM(CITY) :: VARCHAR(120) AS CITY,
        TRIM(STATE) :: VARCHAR(2) AS STATE,
        TRIM(CNTY) :: VARCHAR(60) AS CNTY,
        TRIM(PSTL_CD) :: VARCHAR(13) AS PSTL_CD,
        TRIM(ZIP_FIRST5_CD) :: VARCHAR(5) AS ZIP_FIRST5_CD,
        TRIM(ZIP_LAST4_CD) :: VARCHAR(4) AS ZIP_LAST4_CD,
        INSD_PTY_PK_POL_OWNER :: INTEGER AS INSD_PTY_PK_POL_OWNER,
        SRC_PTY_ID_POL_OWNER :: INTEGER AS SRC_PTY_ID_POL_OWNER,
        TRIM(NAM_FST_POL_OWNER) :: VARCHAR(40) AS NAM_FST_POL_OWNER,
        TRIM(NAM_LST_POL_OWNER) :: VARCHAR(40) AS NAM_LST_POL_OWNER,
        TRIM(NAM_MDL_POL_OWNER) :: VARCHAR(40) AS NAM_MDL_POL_OWNER,
        TRIM(NAM_SFX_POL_OWNER) :: VARCHAR(10) AS NAM_SFX_POL_OWNER,
        TRIM(BUS_NAM_POL_OWNER) :: VARCHAR(255) AS BUS_NAM_POL_OWNER,
        TRIM(PMRY_NAMD_INSD_FLG_POL_OWNER) :: VARCHAR(1) AS PMRY_NAMD_INSD_FLG_POL_OWNER,
        TRIM(NAMD_INSD_FLG_POL_OWNER) :: VARCHAR(1) AS NAMD_INSD_FLG_POL_OWNER,
        TRIM(DRVR_FLG_POL_OWNER) :: VARCHAR(1) AS DRVR_FLG_POL_OWNER,
        TRIM(DRVR_LIC_NUM_POL_OWNER) :: VARCHAR(25) AS DRVR_LIC_NUM_POL_OWNER,
        TRIM(DRVR_LIC_STATE_POL_OWNER) :: VARCHAR(2) AS DRVR_LIC_STATE_POL_OWNER,
        TRIM(ASSOCN_TYP_PRMRY_DRVR) :: VARCHAR(10) AS ASSOCN_TYP_PRMRY_DRVR,
        INSD_PTY_PK_PRMRY_DRVR :: INTEGER AS INSD_PTY_PK_PRMRY_DRVR,
        SRC_PTY_ID_PRMRY_DRVR :: INTEGER AS SRC_PTY_ID_PRMRY_DRVR,
        TRIM(NAM_FST_PRMRY_DRVR) :: VARCHAR(40) AS NAM_FST_PRMRY_DRVR,
        TRIM(NAM_LST_PRMRY_DRVR) :: VARCHAR(40) AS NAM_LST_PRMRY_DRVR,
        TRIM(NAM_MDL__PRMRY_DRVR) :: VARCHAR(40) AS NAM_MDL__PRMRY_DRVR,
        TRIM(NAM_SFX_PRMRY_DRVR) :: VARCHAR(10) AS NAM_SFX_PRMRY_DRVR,
        TRIM(NAMD_INSD_FLG_PRMRY_DRVR) :: VARCHAR(1) AS NAMD_INSD_FLG_PRMRY_DRVR,
        TRIM(DRVR_FLG_PRMRY_DRVR) :: VARCHAR(1) AS DRVR_FLG_PRMRY_DRVR,
        TRIM(DRVR_LIC_NUM_PRMRY_DRVR) :: VARCHAR(25) AS DRVR_LIC_NUM_PRMRY_DRVR,
        TRIM(DRVR_LIC_STATE__PRMRY_DRVR) :: VARCHAR(2) AS DRVR_LIC_STATE__PRMRY_DRVR,
        BATCH_ID :: INTEGER AS BATCH_ID,
        CREATE_DT :: DATE AS CREATE_DT,
        TRIM(CREATED_BY) :: VARCHAR(55) AS CREATED_BY,
        BATCH_START_DT :: DATE AS BATCH_START_DT,
        BATCH_END_DT :: DATE AS BATCH_END_DT,
        RPRTG_PERIOD_START_DT :: DATE AS RPRTG_PERIOD_START_DT,
        RPRTG_PERIOD_END_DT :: DATE AS RPRTG_PERIOD_END_DT,
        TRIM(DMV_VIN) :: VARCHAR(19) AS DMV_VIN,
        TRIM(DMV_DRIVER_LICENSE_NUMBER) :: VARCHAR(15) AS DMV_DRIVER_LICENSE_NUMBER,
        TRIM(DMV_MAKE_OF_CAR) :: VARCHAR(5) AS DMV_MAKE_OF_CAR,
        TRIM(DMV_YEAR_OF_CAR) :: VARCHAR(4) AS DMV_YEAR_OF_CAR,
        TRIM(DMV_MODEL_OF_CAR) :: VARCHAR(5) AS DMV_MODEL_OF_CAR,
        TRIM(DMV_INS_COMPANY_CD) :: VARCHAR(4) AS DMV_INS_COMPANY_CD,
        TRIM(DMV_POLICY_OWNER_STREET_ADDR) :: VARCHAR(30) AS DMV_POLICY_OWNER_STREET_ADDR,
        TRIM(DMV_POLICY_OWNER_CITY) :: VARCHAR(20) AS DMV_POLICY_OWNER_CITY,
        TRIM(DMV_POLICY_OWNER_STATE) :: VARCHAR(2) AS DMV_POLICY_OWNER_STATE,
        TRIM(DMV_POLICY_OWNER_ZIP_CODE) :: VARCHAR(9) AS DMV_POLICY_OWNER_ZIP_CODE,
        TRIM(DMV_TRANSACTION_TYPE_CODE) :: VARCHAR(1) AS DMV_TRANSACTION_TYPE_CODE,
        TRIM(DMV_POLICY_EFFECTIVE_DATE) :: VARCHAR(8) AS DMV_POLICY_EFFECTIVE_DATE,
        TRIM(DMV_POLICY_CANCELLATION_DATE) :: VARCHAR(8) AS DMV_POLICY_CANCELLATION_DATE,
        TRIM(DMV_DATE_STAMP) :: VARCHAR(8) AS DMV_DATE_STAMP,
        TRIM(DMV_POLICY_NUMBER) :: VARCHAR(30) AS DMV_POLICY_NUMBER,
        TRIM(DMV_RESERVED) :: VARCHAR(32) AS DMV_RESERVED,
        TRIM(PRE_CONV_CO_CD) :: VARCHAR(10) AS PRE_CONV_CO_CD
    FROM 
        UPDTRANS
)
SELECT * 


