WITH SQ_NJ_DMV_MTHLY_MERGE_HEADER_temp AS (
    -- Writing query for Source_qualifier override query
 SELECT 
    DMV_INS_COMPANY_CD, 
    REPLACE(
        TO_VARCHAR(
            MAX(
                TRY_TO_DATE(
                    SUBSTR(DMV_ORIG_CYCLE_DUE_DATE, 1, 2) || '-' || 
                    SUBSTR(DMV_ORIG_CYCLE_DUE_DATE, 3, 2) || '-' || 
                    SUBSTR(DMV_ORIG_CYCLE_DUE_DATE, 5, 4), 
                    'MM-DD-YYYY'
                  
                )
            )
        ), 
        '-', ''
    ) AS DMV_ORIG_CYCLE_DUE_DATE, 
    ROW_ORIGIN 
FROM 
    BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW
WHERE 
    DMV_INS_COMPANY_CD IN (4840, 4876, 4875, 4895, 4946, 4927)
GROUP BY 
    DMV_INS_COMPANY_CD, ROW_ORIGIN
),

SQ_NJ_DMV_MTHLY_MERGE_HEADER AS (
    -- Writing query for Source_qualifier function
    SELECT 
        ROW_NUMBER() OVER(ORDER BY DMV_INS_COMPANY_CD) AS source_record_id,
        DMV_INS_COMPANY_CD,
        DMV_ORIG_CYCLE_DUE_DATE,
        ROW_ORIGIN
    FROM 
        BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW
)
--select * from SQ_NJ_DMV_MTHLY_MERGE_HEADER
,
SQ_NJ_DMV_MTHLY_MERGE_DATA_DW_temp AS (
    -- Writing query for Source_qualifier override query
    SELECT 
        DMV_ORIG_DUE_DATE, 
        DMV_REC_TYPE_SORT_ORDER, 
        ROW_ORIGIN, 
        VERSION_NBR, 
        DMV_VIN, 
        DMV_DRIVER_LICENSE_NUMBER, 
        DMV_MAKE_OF_CAR, 
        DMV_YEAR_OF_CAR, 
        DMV_MODEL_OF_CAR, 
        DMV_INS_COMPANY_CD, 
        DMV_POLICY_OWNER_STREET_ADDR,
        DMV_POICY_OWNER_CITY, 
        DMV_POLICY_OWNER_STATE, 
        DMV_POLICY_OWNER_ZIP_CODE, 
        DMV_TRANSACTION_TYPE_CODE, 
        DMV_POLICY_EFFECTIVE_DATE, 
        DMV_POLICY_CANCELLATION_DATE, 
        DMV_DATE_STAMP, 
        DMV_POLICY_NUMBER, 
        DMV_RESERVED, 
        CREATE_DATE, 
        MAPPING_NAME 
    FROM 
        BURRPT.NJ_DMV_MTHLY_MERGE_DATA_DW
    WHERE 
        DMV_INS_COMPANY_CD IN (4840, 4876, 4875, 4895, 4946, 4927)
    ORDER BY 
        DMV_TRANSACTION_TYPE_CODE DESC, DMV_VIN ASC
)
--select * from SQ_NJ_DMV_MTHLY_MERGE_DATA_DW_temp
,

SQ_NJ_DMV_MTHLY_MERGE_DATA_DW AS (
    -- Writing query for Source_qualifier function
    SELECT 
        ROW_NUMBER() OVER(ORDER BY DMV_ORIG_DUE_DATE) AS source_record_id,
        DMV_ORIG_DUE_DATE,
        DMV_REC_TYPE_SORT_ORDER,
        ROW_ORIGIN,
        VERSION_NBR,
        DMV_VIN,
        DMV_DRIVER_LICENSE_NUMBER,
        DMV_MAKE_OF_CAR,
        DMV_YEAR_OF_CAR,
        DMV_MODEL_OF_CAR,
        DMV_INS_COMPANY_CD,
        DMV_POLICY_OWNER_STREET_ADDR,
        DMV_POICY_OWNER_CITY,
        DMV_POLICY_OWNER_STATE,
        DMV_POLICY_OWNER_ZIP_CODE,
        DMV_TRANSACTION_TYPE_CODE,
        DMV_POLICY_EFFECTIVE_DATE,
        DMV_POLICY_CANCELLATION_DATE,
        DMV_DATE_STAMP,
        DMV_POLICY_NUMBER,
        DMV_RESERVED,
        CREATE_DATE,
        MAPPING_NAME
    FROM 
        SQ_NJ_DMV_MTHLY_MERGE_DATA_DW_temp
)
--select * from SQ_NJ_DMV_MTHLY_MERGE_DATA_DW
,

exp_CHANGE_DATE_FORMAT AS (
    -- Writing query for expression function
    SELECT 
        HEADER.DMV_ORIG_CYCLE_DUE_DATE,
        HEADER.source_record_id,
        HEADER.DMV_INS_COMPANY_CD,
        HEADER.ROW_ORIGIN,
        SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 5, 2) || SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 7, 2) || SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 1, 4) AS out_DMV_ORIG_CYCLE_DUE_DATE,
        lkp_VERSION_NBR.VERSION_NBR
    FROM 
        SQ_NJ_DMV_MTHLY_MERGE_HEADER AS HEADER 
     
    LEFT JOIN (
        SELECT 
            VERSION_NBR,
            DMV_INS_COMPANY_CD,
            DMV_ORIG_CYCLE_DUE_DATE,
            ROW_ORIGIN,
            ROW_NUMBER() OVER(PARTITION BY DMV_INS_COMPANY_CD, DMV_ORIG_CYCLE_DUE_DATE, ROW_ORIGIN ORDER BY DMV_INS_COMPANY_CD, DMV_ORIG_CYCLE_DUE_DATE, ROW_ORIGIN, VERSION_NBR ASC) AS rn
        FROM 
            BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW 
        QUALIFY 
            rn = 1
    ) AS lkp_VERSION_NBR
      ON 
        lkp_VERSION_NBR.DMV_INS_COMPANY_CD = HEADER.DMV_INS_COMPANY_CD
        AND TRY_TO_DATE(lkp_VERSION_NBR.DMV_ORIG_CYCLE_DUE_DATE,'MMDDYYYY') =  TRY_TO_DATE(HEADER.DMV_ORIG_CYCLE_DUE_DATE,'MMDDYYYY')   
        -- TRY_TO_DATE(
        --             SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 5, 2) || '-' || 
        --             SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 7, 2) || '-' || 
        --             SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 1, 4), 
        --             'MM-DD-YYYY'
       
      --  SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 5, 2) || SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 7, 2) || SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE, 1, 4)
  
        AND lkp_VERSION_NBR.ROW_ORIGIN = HEADER.ROW_ORIGIN
)
--select * from exp_CHANGE_DATE_FORMAT
,

EXP_DETAIL AS (
    -- Writing query for expression function
    SELECT 
        source_record_id,
        DMV_ORIG_DUE_DATE,
        DMV_REC_TYPE_SORT_ORDER,
        ROW_ORIGIN,
        VERSION_NBR,
        DMV_VIN,
        DMV_DRIVER_LICENSE_NUMBER,
        DMV_MAKE_OF_CAR,
        DMV_YEAR_OF_CAR,
        DMV_MODEL_OF_CAR,
        DMV_INS_COMPANY_CD,
        DMV_POLICY_OWNER_STREET_ADDR,
        DMV_POICY_OWNER_CITY,
        DMV_POLICY_OWNER_STATE,
        DMV_POLICY_OWNER_ZIP_CODE,
        DMV_TRANSACTION_TYPE_CODE,
        DMV_POLICY_EFFECTIVE_DATE,
        DMV_POLICY_CANCELLATION_DATE,
        DMV_DATE_STAMP,
        DMV_POLICY_NUMBER,
        DMV_RESERVED,
        CREATE_DATE,
        MAPPING_NAME,
        TO_CHAR(DMV_ORIG_DUE_DATE, 'MMDDYYYY') AS DMV_ORIG_DUE_DATE_OUT
    FROM 
        SQ_NJ_DMV_MTHLY_MERGE_DATA_DW
)
--select * from EXP_DETAIL
,


EXP_HEADER AS (
    -- Writing query for expression function
    SELECT 
        SQ_NJ_DMV_MTHLY_MERGE_HEADER.source_record_id,
        SQ_NJ_DMV_MTHLY_MERGE_HEADER.DMV_INS_COMPANY_CD,
        SQ_NJ_DMV_MTHLY_MERGE_HEADER.DMV_ORIG_CYCLE_DUE_DATE,
        exp_CHANGE_DATE_FORMAT.VERSION_NBR,
        SQ_NJ_DMV_MTHLY_MERGE_HEADER.ROW_ORIGIN
    FROM 
        SQ_NJ_DMV_MTHLY_MERGE_HEADER
    INNER JOIN 
        exp_CHANGE_DATE_FORMAT 
    ON 
        SQ_NJ_DMV_MTHLY_MERGE_HEADER.source_record_id = exp_CHANGE_DATE_FORMAT.source_record_id
)
--select * from EXP_HEADER
,

JNR_HEADER_DETAIL AS (
    SELECT 
        ROW_NUMBER() OVER(ORDER BY DMV_ORIG_DUE_DATE_OUT) AS source_record_id,
        EXP_DETAIL.DMV_ORIG_DUE_DATE_OUT AS DMV_ORIG_DUE_DATE,
        EXP_DETAIL.DMV_REC_TYPE_SORT_ORDER,
        EXP_DETAIL.ROW_ORIGIN,
        EXP_DETAIL.VERSION_NBR,
        EXP_DETAIL.DMV_VIN,
        EXP_DETAIL.DMV_DRIVER_LICENSE_NUMBER,
        EXP_DETAIL.DMV_MAKE_OF_CAR,
        EXP_DETAIL.DMV_YEAR_OF_CAR,
        EXP_DETAIL.DMV_MODEL_OF_CAR,
        EXP_DETAIL.DMV_INS_COMPANY_CD,
        EXP_DETAIL.DMV_POLICY_OWNER_STREET_ADDR,
        EXP_DETAIL.DMV_POICY_OWNER_CITY,
        EXP_DETAIL.DMV_POLICY_OWNER_STATE,
        EXP_DETAIL.DMV_POLICY_OWNER_ZIP_CODE,
        EXP_DETAIL.DMV_TRANSACTION_TYPE_CODE,
        EXP_DETAIL.DMV_POLICY_EFFECTIVE_DATE,
        EXP_DETAIL.DMV_POLICY_CANCELLATION_DATE,
        EXP_DETAIL.DMV_DATE_STAMP,
        EXP_DETAIL.DMV_POLICY_NUMBER,
        EXP_DETAIL.DMV_RESERVED,
        EXP_DETAIL.CREATE_DATE,
        EXP_DETAIL.MAPPING_NAME,
        EXP_HEADER.DMV_INS_COMPANY_CD AS DMV_INS_COMPANY_CD1,
        EXP_HEADER.DMV_ORIG_CYCLE_DUE_DATE,
        EXP_HEADER.VERSION_NBR AS VERSION_NBR1,
        EXP_HEADER.ROW_ORIGIN AS ROW_ORIGIN1
    FROM 
        EXP_DETAIL
    JOIN 
        EXP_HEADER 
    ON 
        EXP_DETAIL.DMV_INS_COMPANY_CD = EXP_HEADER.DMV_INS_COMPANY_CD
       AND EXP_DETAIL.DMV_ORIG_DUE_DATE_OUT = EXP_HEADER.DMV_ORIG_CYCLE_DUE_DATE
        AND EXP_DETAIL.VERSION_NBR = EXP_HEADER.VERSION_NBR
        AND EXP_DETAIL.ROW_ORIGIN = EXP_HEADER.ROW_ORIGIN
)
--select * from JNR_HEADER_DETAIL
,

EXP_NJ_DMV_MTHLY_MERGE_DATA AS (
    -- Writing query for expression function
    SELECT 
        JNR_HEADER_DETAIL.DMV_VIN,
        JNR_HEADER_DETAIL.DMV_DRIVER_LICENSE_NUMBER,
        JNR_HEADER_DETAIL.DMV_MAKE_OF_CAR,
        JNR_HEADER_DETAIL.DMV_YEAR_OF_CAR,
        JNR_HEADER_DETAIL.DMV_MODEL_OF_CAR,
        JNR_HEADER_DETAIL.DMV_INS_COMPANY_CD,
        JNR_HEADER_DETAIL.DMV_POLICY_OWNER_STREET_ADDR,
        JNR_HEADER_DETAIL.DMV_POICY_OWNER_CITY,
        JNR_HEADER_DETAIL.DMV_POLICY_OWNER_STATE,
        JNR_HEADER_DETAIL.DMV_POLICY_OWNER_ZIP_CODE,
        JNR_HEADER_DETAIL.DMV_TRANSACTION_TYPE_CODE,
        JNR_HEADER_DETAIL.DMV_POLICY_EFFECTIVE_DATE,
        JNR_HEADER_DETAIL.DMV_POLICY_CANCELLATION_DATE,
        JNR_HEADER_DETAIL.DMV_DATE_STAMP,
        JNR_HEADER_DETAIL.DMV_POLICY_NUMBER,
        JNR_HEADER_DETAIL.source_record_id,
        JNR_HEADER_DETAIL.DMV_ORIG_DUE_DATE,
        JNR_HEADER_DETAIL.DMV_REC_TYPE_SORT_ORDER,
        JNR_HEADER_DETAIL.ROW_ORIGIN,
        JNR_HEADER_DETAIL.VERSION_NBR,
        JNR_HEADER_DETAIL.DMV_RESERVED,
        JNR_HEADER_DETAIL.CREATE_DATE,
        JNR_HEADER_DETAIL.MAPPING_NAME,
        UPPER(DMV_VIN) AS DMV_VIN_upper,
        TO_CHAR(TO_DATE(JNR_HEADER_DETAIL.DMV_ORIG_DUE_DATE), 'MMDDYYYY') AS DMV_ORIG_DUE_DATE_OUT,
        RPAD(DMV_VIN_upper, 19, ' ') AS OUT_DMV_VIN,
        RPAD(DMV_DRIVER_LICENSE_NUMBER, 15, ' ') AS OUT_DMV_DRIVER_LICENSE_NUMBER,
        RPAD(DMV_MAKE_OF_CAR, 5, ' ') AS OUT_DMV_MAKE_OF_CAR,
        RPAD(DMV_YEAR_OF_CAR, 4, ' ') AS OUT_DMV_YEAR_OF_CAR,
        RPAD(DMV_MODEL_OF_CAR, 5, ' ') AS OUT_DMV_MODEL_OF_CAR,
        RPAD(DMV_INS_COMPANY_CD, 4, ' ') AS OUT_DMV_INS_COMPANY_CD,
        RPAD(DMV_POLICY_OWNER_STREET_ADDR, 30, ' ') AS OUT_DMV_POLICY_OWNER_STREET_ADDR,
        RPAD(DMV_POICY_OWNER_CITY, 20, ' ') AS OUT_DMV_POICY_OWNER_CITY,
        RPAD(DMV_POLICY_OWNER_STATE, 2, ' ') AS OUT_DMV_POLICY_OWNER_STATE,
        RPAD(DMV_POLICY_OWNER_ZIP_CODE, 9, ' ') AS OUT_DMV_POLICY_OWNER_ZIP_CODE,
        RPAD(DMV_TRANSACTION_TYPE_CODE, 1, ' ') AS OUT_DMV_TRANSACTION_TYPE_CODE,
        RPAD(DMV_POLICY_EFFECTIVE_DATE, 8, ' ') AS OUT_DMV_POLICY_EFFECTIVE_DATE,
        RPAD(DMV_POLICY_CANCELLATION_DATE, 8, ' ') AS OUT_DMV_POLICY_CANCELLATION_DATE,
        RPAD(DMV_DATE_STAMP, 8, ' ') AS OUT_DMV_DATE_STAMP,
        RPAD(DMV_POLICY_NUMBER, 30, ' ') AS OUT_DMV_POLICY_NUMBER,
        TO_CHAR(CURRENT_TIMESTAMP, 'HHMMSS') AS DMV_TIME_STAMP,
        TO_CHAR(CURRENT_TIMESTAMP, 'MMDDYYYY') AS DMV_DATE_STAMP1,
        'NJ_DMV_DW' AS BUREAU_CD,
        'Y' AS CURRENT_BATCH_CYCLE_IND,
        'NJ' AS SRCE_SYS_CD,
        LKP_CYCLE_DUE_DATE.BATCH_END_DT
    FROM 
        JNR_HEADER_DETAIL
    LEFT JOIN (
        SELECT 
            BATCH_END_DT,
            BUREAU_CD,
            CURRENT_BATCH_CYCLE_IND,
            SRCE_SYS_CD,
            ROW_NUMBER() OVER(PARTITION BY BUREAU_CD, CURRENT_BATCH_CYCLE_IND, SRCE_SYS_CD ORDER BY BUREAU_CD, CURRENT_BATCH_CYCLE_IND, SRCE_SYS_CD) AS rn
        FROM 
            BURRPT.BATCH_BUILD_DATE_CTL
        QUALIFY 
            rn = 1
    ) LKP_CYCLE_DUE_DATE
    ON 
        LKP_CYCLE_DUE_DATE.BUREAU_CD = 'NJ_DMV_DW'
        AND LKP_CYCLE_DUE_DATE.CURRENT_BATCH_CYCLE_IND = 'Y'
        AND LKP_CYCLE_DUE_DATE.SRCE_SYS_CD = 'NJ'
),
EXP_NJ_DMV_MTHLY_MERGE_TRAILER_FF as (
        -- writting query for expression function
SELECT source_record_id,
               OUT_DMV_INS_COMPANY_CD AS DMV_INS_COMPANY_CD,
               DMV_TIME_STAMP,
               DMV_DATE_STAMP1 AS DMV_DATE_STAMP,
               OUT_DMV_TRANSACTION_TYPE_CODE, --IFF((V_RECORD_TYPE != 'HEADER' OR V_RECORD_TYPE != 'TRAILE') AND FILE_RECORD_COUNT IS NULL,1,FILE_RECORD_COUNT+1)
 IFF( TOTAL_RECORDS_COUNT_V IS NULL,1,TOTAL_RECORDS_COUNT_V+1) AS TOTAL_RECORDS_COUNT_V,
               IFF(OUT_DMV_TRANSACTION_TYPE_CODE='N', IFF( TOTAL_NEW_POLICIES_V IS NULL,1,TOTAL_NEW_POLICIES_V+1), TOTAL_NEW_POLICIES_V) AS TOTAL_NEW_POLICIES_V,
               IFF(OUT_DMV_TRANSACTION_TYPE_CODE='C', IFF( TOTAL_CANCELLED_POLICIES_V IS NULL,1,TOTAL_CANCELLED_POLICIES_V+1), TOTAL_CANCELLED_POLICIES_V) AS TOTAL_CANCELLED_POLICIES_V,
               RPAD('TRAILER',7,' ') AS DMV_RECORD_NAME,
               LPAD(TOTAL_RECORDS_COUNT_V+2,8,'0') AS TOTAL_RECORDS_COUNT,
               TOTAL_NEW_POLICIES_V AS TOTAL_NEW_POLICIES,
               TOTAL_CANCELLED_POLICIES_V AS TOTAL_CANCELLED_POLICIES,
               RPAD(' ',151,' ') AS FILLER
          FROM EXP_NJ_DMV_MTHLY_MERGE_DATA
       ) ,
EXP_EXP_NJ_DMV_MTHLY_MERGE_DETAIL_FF as (
        -- writting query for expression function
SELECT source_record_id,
               OUT_DMV_VIN,
               OUT_DMV_DRIVER_LICENSE_NUMBER,
               OUT_DMV_MAKE_OF_CAR,
               OUT_DMV_YEAR_OF_CAR,
               OUT_DMV_MODEL_OF_CAR,
               OUT_DMV_INS_COMPANY_CD,
               OUT_DMV_POLICY_OWNER_STREET_ADDR,
               OUT_DMV_POICY_OWNER_CITY,
               OUT_DMV_POLICY_OWNER_STATE,
               OUT_DMV_POLICY_OWNER_ZIP_CODE,
               OUT_DMV_TRANSACTION_TYPE_CODE,
               OUT_DMV_POLICY_EFFECTIVE_DATE,
               OUT_DMV_POLICY_CANCELLATION_DATE,
               OUT_DMV_DATE_STAMP,
               OUT_DMV_POLICY_NUMBER,
               DMV_ORIG_DUE_DATE_OUT AS DMV_ORIG_DUE_DATE,
               RPAD(' ',31) AS FILLER,
               OUT_DMV_VIN||OUT_DMV_DRIVER_LICENSE_NUMBER||OUT_DMV_MAKE_OF_CAR||OUT_DMV_YEAR_OF_CAR||OUT_DMV_MODEL_OF_CAR||OUT_DMV_INS_COMPANY_CD||OUT_DMV_POLICY_OWNER_STREET_ADDR||OUT_DMV_POICY_OWNER_CITY||OUT_DMV_POLICY_OWNER_STATE||OUT_DMV_POLICY_OWNER_ZIP_CODE||OUT_DMV_TRANSACTION_TYPE_CODE||OUT_DMV_POLICY_EFFECTIVE_DATE||OUT_DMV_POLICY_CANCELLATION_DATE||OUT_DMV_DATE_STAMP||OUT_DMV_POLICY_NUMBER||FILLER AS DETAIL,
               2 AS SORT_ORDER
          FROM EXP_NJ_DMV_MTHLY_MERGE_DATA
       ) ,
EXP_NJ_DMV_MTHLY_MERGE_HEADER_FF as (
        -- writting query for expression function
SELECT source_record_id,
               OUT_DMV_INS_COMPANY_CD AS DMV_INS_COMPANY_CD,
               DMV_TIME_STAMP,
               DMV_DATE_STAMP1 AS DMV_DATE_STAMP,
               BATCH_END_DT,
               RPAD('HEADER',6,' ') AS DMV_RECORD_NAME,
               'N' AS DMV_FILE_TYPE,
               TO_CHAR(DATEADD('D', 7, LAST_DAY(BATCH_END_DT)),'MMDDYYYY') AS DMV_ORIG_CYCLE_DUE_DATE_V,
               RPAD(' ',167,' ') AS FILLER,
               DMV_RECORD_NAME||DMV_FILE_TYPE||DMV_INS_COMPANY_CD||DMV_TIME_STAMP||DMV_DATE_STAMP||DMV_ORIG_CYCLE_DUE_DATE_V||FILLER AS HEADER
          FROM EXP_NJ_DMV_MTHLY_MERGE_DATA
       ) ,
AGG_NJ_DMV_MTHLY_MERGE_TRAILER_FF as ( -- writting query for Aggregator function
 SELECT TOTAL_NEW_POLICIES,
       OUT_DMV_TRANSACTION_TYPE_CODE,
       DMV_INS_COMPANY_CD,
       DMV_TIME_STAMP,
       DMV_DATE_STAMP,
       FILLER,
       source_record_id,
       TOTAL_CANCELLED_POLICIES,
       TOTAL_RECORDS_COUNT,
       DMV_RECORD_NAME,
       COALESCE(MAX(CASE WHEN OUT_DMV_TRANSACTION_TYPE_CODE = 'N' THEN TOTAL_NEW_POLICIES END), 0) Over(partition by DMV_RECORD_NAME) AS TOTAL_NEW_POLICIES_OUT,
	   COALESCE(MAX(CASE WHEN OUT_DMV_TRANSACTION_TYPE_CODE = 'C' THEN TOTAL_CANCELLED_POLICIES END), 0) Over(partition by DMV_RECORD_NAME) AS TOTAL_CANCELLED_POLICIES_OUT,
	   MAX(TOTAL_RECORDS_COUNT) Over(partition by DMV_RECORD_NAME) AS TOTAL_RECORDS_COUNT_OUT, row_number() Over(partition by DMV_RECORD_NAME order by TOTAL_NEW_POLICIES desc,OUT_DMV_TRANSACTION_TYPE_CODE desc,DMV_INS_COMPANY_CD desc,DMV_TIME_STAMP desc,DMV_DATE_STAMP desc,FILLER desc) rn FROM EXP_NJ_DMV_MTHLY_MERGE_TRAILER_FF qualify rn=1
)	   ,
AGG_NJ_DMV_MTHLY_MERGE_HEADER_FF as (
        -- writting query for Aggregator function
 SELECT source_record_id,
               HEADER,
               1 AS SORT_ORDER
          FROM EXP_NJ_DMV_MTHLY_MERGE_HEADER_FF
         GROUP BY HEADER
       ) ,
EXP_TRAILER as (
        -- writting query for expression function
SELECT source_record_id,
               TOTAL_NEW_POLICIES,
               TOTAL_NEW_POLICIES_OUT AS TOTAL_NEW_POLICIES_V,
               OUT_DMV_TRANSACTION_TYPE_CODE,
               TOTAL_CANCELLED_POLICIES_OUT AS in_TOTAL_CANCELLED_POLICIES,
               DMV_INS_COMPANY_CD,
               DMV_TIME_STAMP,
               DMV_DATE_STAMP,
               FILLER,
               DMV_RECORD_NAME,
               TOTAL_RECORDS_COUNT_OUT,
               IFF( in_TOTAL_CANCELLED_POLICIES IS NULL,0,in_TOTAL_CANCELLED_POLICIES) AS TOTAL_CANCELLED_POLICIES,
               DMV_RECORD_NAME||DMV_INS_COMPANY_CD||DMV_TIME_STAMP||DMV_DATE_STAMP||LPAD(TOTAL_RECORDS_COUNT_OUT,8,'0')||LPAD(TOTAL_NEW_POLICIES_V,8,'0')||LPAD(TOTAL_CANCELLED_POLICIES,8,'0')||FILLER AS TRAILER,
               3 AS SORT_ORDER
          FROM AGG_NJ_DMV_MTHLY_MERGE_TRAILER_FF
       ) ,
UNI_NJ_DMV_GENERIC_MTHLY_MERGE_DATA_FF AS (
        -- writting query for union
select source_record_id,
               AGG_NJ_DMV_MTHLY_MERGE_HEADER_FF.HEADER AS INPUT_RECORD
          from AGG_NJ_DMV_MTHLY_MERGE_HEADER_FF
         UNION select source_record_id,
               EXP_EXP_NJ_DMV_MTHLY_MERGE_DETAIL_FF.DETAIL AS INPUT_RECORD
          from EXP_EXP_NJ_DMV_MTHLY_MERGE_DETAIL_FF
         UNION select source_record_id,
               EXP_TRAILER.TRAILER AS INPUT_RECORD
          from EXP_TRAILER
       ),
EXP_SORT as (
        -- writting query for expression function
SELECT source_record_id,
               INPUT_RECORD,
               DECODE(SUBSTR(INPUT_RECORD,1,6), 'HEADER',1, 'TRAILE',3, 2) AS SORT_ORDER
          FROM UNI_NJ_DMV_GENERIC_MTHLY_MERGE_DATA_FF
       ) ,
SRT_HDR_DTL_TRLR as (
        select EXP_SORT.source_record_id,
               INPUT_RECORD,
               SORT_ORDER
          from EXP_SORT
         order by SORT_ORDER
       ) ,
	   
FINAL_SELECT_NJ_DMV_GENERIC_MTHLY_MERGE_DATA_FF AS(
        -- writing query for target definition
SELECT trim(INPUT_RECORD) :: varchar(200) AS DMV_RECORD
          FROM SRT_HDR_DTL_TRLR
       ) SELECT *
  FROM FINAL_SELECT_NJ_DMV_GENERIC_MTHLY_MERGE_DATA_FF;
