With SQ_NJ_DMV_MTHLY_MERGE_HEADER_temp as ( 
 -- writting query for Source_qualifier override query 
SELECT DMV_INS_COMPANY_CD, replace(TO_VARCHAR(MAX(TO_DATE(
SUBSTR(DMV_ORIG_CYCLE_DUE_DATE,1,2)||'-'||SUBSTR(DMV_ORIG_CYCLE_DUE_DATE,3,2)||'-'||SUBSTR(DMV_ORIG_CYCLE_DUE_DATE,5,4)
))),'-','') DMV_ORIG_CYCLE_DUE_DATE, ROW_ORIGIN 
FROM
 BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW ,
WHERE DMV_INS_COMPANY_CD IN  (4840,4876,4875,4895,4946,4927)
GROUP BY DMV_INS_COMPANY_CD,   ROW_ORIGIN
 )
 --select * from SQ_NJ_DMV_MTHLY_MERGE_HEADER_temp
 , 
 SQ_NJ_DMV_MTHLY_MERGE_HEADER as ( 
 -- writting query for Source_qualifier function 
SELECT row_number() over(order by DMV_INS_COMPANY_CD) AS source_record_id,
DMV_INS_COMPANY_CD,
DMV_ORIG_CYCLE_DUE_DATE,
ROW_ORIGIN
FROM BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW
 )
 --select * from SQ_NJ_DMV_MTHLY_MERGE_HEADER_temp
 , 
SQ_NJ_DMV_MTHLY_MERGE_DATA_DW_temp as ( 
 -- writting query for Source_qualifier override query 
SELECT 
DMV_ORIG_DUE_DATE, 
DMV_REC_TYPE_SORT_ORDER, 
ROW_ORIGIN, 
VERSION_NBR, 
DMV_VIN, 
DMV_DRIVER_LICENSE_NUMBER, 
DMV_MAKE_OF_CAR, 
DMV_YEAR_OF_CAR, 
DMV_MODEL_OF_CAR, 
DMV_INS_COMPANY_CD, 
DMV_POLICY_OWNER_STREET_ADDR,
DMV_POICY_OWNER_CITY, 
DMV_POLICY_OWNER_STATE, 
DMV_POLICY_OWNER_ZIP_CODE, 
DMV_TRANSACTION_TYPE_CODE, 
DMV_POLICY_EFFECTIVE_DATE, 
DMV_POLICY_CANCELLATION_DATE, 
DMV_DATE_STAMP, 
DMV_POLICY_NUMBER, 
DMV_RESERVED, 
CREATE_DATE, 
MAPPING_NAME 
FROM
 burrpt.NJ_DMV_MTHLY_MERGE_DATA_DW
WHERE NJ_DMV_MTHLY_MERGE_DATA_DW.DMV_INS_COMPANY_CD  IN  (4840,4876,4875,4895,4946,4927)
ORDER BY DMV_TRANSACTION_TYPE_CODE DESC , DMV_VIN ASC
 )
-- select * from SQ_NJ_DMV_MTHLY_MERGE_DATA_DW_temp
 , 
 SQ_NJ_DMV_MTHLY_MERGE_DATA_DW as ( 
 -- writting query for Source_qualifier function 
SELECT row_number() over(order by DMV_ORIG_DUE_DATE) AS source_record_id,
DMV_ORIG_DUE_DATE,
DMV_REC_TYPE_SORT_ORDER,
ROW_ORIGIN,
VERSION_NBR,
DMV_VIN,
DMV_DRIVER_LICENSE_NUMBER,
DMV_MAKE_OF_CAR,
DMV_YEAR_OF_CAR,
DMV_MODEL_OF_CAR,
DMV_INS_COMPANY_CD,
DMV_POLICY_OWNER_STREET_ADDR,
DMV_POICY_OWNER_CITY,
DMV_POLICY_OWNER_STATE,
DMV_POLICY_OWNER_ZIP_CODE,
DMV_TRANSACTION_TYPE_CODE,
DMV_POLICY_EFFECTIVE_DATE,
DMV_POLICY_CANCELLATION_DATE,
DMV_DATE_STAMP,
DMV_POLICY_NUMBER,
DMV_RESERVED,
CREATE_DATE,
MAPPING_NAME
FROM SQ_NJ_DMV_MTHLY_MERGE_DATA_DW_temp
 ) 
--select * from SQ_NJ_DMV_MTHLY_MERGE_HEADER_temp
 , 
exp_CHANGE_DATE_FORMAT as (
        -- writting query for expression function
SELECT HEADER.DMV_ORIG_CYCLE_DUE_DATE,
             -- NJ_DMV_MTHLY_MERGE_HEADER_DW.source_record_id,
               HEADER.DMV_INS_COMPANY_CD,
               HEADER.ROW_ORIGIN,
               SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE,5,2)||SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE,7,2)||SUBSTR(HEADER.DMV_ORIG_CYCLE_DUE_DATE,1,4) AS out_DMV_ORIG_CYCLE_DUE_DATE,
               lkp_VERSION_NBR.VERSION_NBR
          FROM BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW as HEADER, BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW
          left join -- writting query for lookup function
 (
                SELECT VERSION_NBR as VERSION_NBR,
                       DMV_INS_COMPANY_CD as DMV_INS_COMPANY_CD,
                       DMV_ORIG_CYCLE_DUE_DATE, --as DMV_ORIG_CYCLE_DUE_DATE,
                       ROW_ORIGIN as ROW_ORIGIN,
                      row_number() over(partition by DMV_INS_COMPANY_CD, DMV_ORIG_CYCLE_DUE_DATE, ROW_ORIGIN order by DMV_INS_COMPANY_CD, dmv_orig_cycle_due_date, row_origin,VERSION_NBR ASC) as rn
                  FROM BURRPT.NJ_DMV_MTHLY_MERGE_HEADER_DW qualify rn = 1
                 ORDER BY DMV_INS_COMPANY_CD,
                          dmv_orig_cycle_due_date,
                          row_origin,
                          VERSION_NBR ASC
               ) lkp_VERSION_NBR
            on lkp_VERSION_NBR.DMV_INS_COMPANY_CD= NJ_DMV_MTHLY_MERGE_HEADER_DW.DMV_INS_COMPANY_CD
           AND lkp_VERSION_NBR.DMV_ORIG_CYCLE_DUE_DATE=SUBSTR(NJ_DMV_MTHLY_MERGE_HEADER_DW.DMV_ORIG_CYCLE_DUE_DATE,5,2)||SUBSTR(NJ_DMV_MTHLY_MERGE_HEADER_DW.DMV_ORIG_CYCLE_DUE_DATE,7,2)||SUBSTR(NJ_DMV_MTHLY_MERGE_HEADER_DW.DMV_ORIG_CYCLE_DUE_DATE,1,4)
           AND lkp_VERSION_NBR.ROW_ORIGIN=NJ_DMV_MTHLY_MERGE_HEADER_DW.ROW_ORIGIN
       ) 
    -- select * from exp_CHANGE_DATE_FORMAT
       ,
EXP_DETAIL as (
        -- writting query for expression function
SELECT source_record_id,
               DMV_ORIG_DUE_DATE,
               DMV_REC_TYPE_SORT_ORDER,
               ROW_ORIGIN,
               VERSION_NBR,
               DMV_VIN,
               DMV_DRIVER_LICENSE_NUMBER,
               DMV_MAKE_OF_CAR,
               DMV_YEAR_OF_CAR,
               DMV_MODEL_OF_CAR,
               DMV_INS_COMPANY_CD,
               DMV_POLICY_OWNER_STREET_ADDR,
               DMV_POICY_OWNER_CITY,
               DMV_POLICY_OWNER_STATE,
               DMV_POLICY_OWNER_ZIP_CODE,
               DMV_TRANSACTION_TYPE_CODE,
               DMV_POLICY_EFFECTIVE_DATE,
               DMV_POLICY_CANCELLATION_DATE,
               DMV_DATE_STAMP,
               DMV_POLICY_NUMBER,
               DMV_RESERVED,
               CREATE_DATE,
               MAPPING_NAME,
               TO_CHAR(DMV_ORIG_DUE_DATE,'YYYYMMDD') AS DMV_ORIG_DUE_DATE_OUT
          FROM SQ_NJ_DMV_MTHLY_MERGE_DATA_DW
       )
     --  select * from EXP_DETAIL
       ,
EXP_HEADER as (
        -- writting query for expression function
SELECT   -- source_record_id,
               NJ_DMV_MTHLY_MERGE_HEADER.DMV_INS_COMPANY_CD,
               NJ_DMV_MTHLY_MERGE_HEADER.DMV_ORIG_CYCLE_DUE_DATE,
               exp_CHANGE_DATE_FORMAT.VERSION_NBR,
               NJ_DMV_MTHLY_MERGE_HEADER.ROW_ORIGIN
          FROM BURRPT.NJ_DMV_MTHLY_MERGE_HEADER
         INNER JOIN exp_CHANGE_DATE_FORMAT
         -- ON NJ_DMV_MTHLY_MERGE_HEADER.source_record_id = exp_CHANGE_DATE_FORMAT.source_record_id
       )
     --  select * from EXP_HEADER
       ,
JNR_HEADER_DETAIL as (
        select row_number() over(order by DMV_ORIG_DUE_DATE_OUT) AS source_record_id,
               EXP_DETAIL.DMV_ORIG_DUE_DATE_OUT AS DMV_ORIG_DUE_DATE,
               EXP_DETAIL.DMV_REC_TYPE_SORT_ORDER,
               EXP_DETAIL.ROW_ORIGIN,
               EXP_DETAIL.VERSION_NBR,
               EXP_DETAIL.DMV_VIN,
               EXP_DETAIL.DMV_DRIVER_LICENSE_NUMBER,
               EXP_DETAIL.DMV_MAKE_OF_CAR,
               EXP_DETAIL.DMV_YEAR_OF_CAR,
               EXP_DETAIL.DMV_MODEL_OF_CAR,
               EXP_DETAIL.DMV_INS_COMPANY_CD,
               EXP_DETAIL.DMV_POLICY_OWNER_STREET_ADDR,
               EXP_DETAIL.DMV_POICY_OWNER_CITY,
               EXP_DETAIL.DMV_POLICY_OWNER_STATE,
               EXP_DETAIL.DMV_POLICY_OWNER_ZIP_CODE,
               EXP_DETAIL.DMV_TRANSACTION_TYPE_CODE,
               EXP_DETAIL.DMV_POLICY_EFFECTIVE_DATE,
               EXP_DETAIL.DMV_POLICY_CANCELLATION_DATE,
               EXP_DETAIL.DMV_DATE_STAMP,
               EXP_DETAIL.DMV_POLICY_NUMBER,
               EXP_DETAIL.DMV_RESERVED,
               EXP_DETAIL.CREATE_DATE,
               EXP_DETAIL.MAPPING_NAME,
               EXP_HEADER.DMV_INS_COMPANY_CD AS DMV_INS_COMPANY_CD1,
               EXP_HEADER.DMV_ORIG_CYCLE_DUE_DATE,
               EXP_HEADER.VERSION_NBR AS VERSION_NBR1,
               EXP_HEADER.ROW_ORIGIN AS ROW_ORIGIN1
          from EXP_DETAIL EXP_DETAIL
          JOIN EXP_HEADER EXP_HEADER
            on EXP_DETAIL.DMV_INS_COMPANY_CD = EXP_HEADER.DMV_INS_COMPANY_CD
           AND EXP_DETAIL.DMV_ORIG_DUE_DATE_OUT = EXP_HEADER.DMV_ORIG_CYCLE_DUE_DATE
           AND EXP_DETAIL.VERSION_NBR = EXP_HEADER.VERSION_NBR
           AND EXP_DETAIL.ROW_ORIGIN = EXP_HEADER.ROW_ORIGIN
       )
      -- select * from JNR_HEADER_DETAIL
       ,
EXP_NJ_DMV_MTHLY_MERGE_DATA as (
        -- writting query for expression function
SELECT JNR_HEADER_DETAIL.DMV_VIN,
               JNR_HEADER_DETAIL.DMV_DRIVER_LICENSE_NUMBER,
               JNR_HEADER_DETAIL.DMV_MAKE_OF_CAR,
               JNR_HEADER_DETAIL.DMV_YEAR_OF_CAR,
               JNR_HEADER_DETAIL.DMV_MODEL_OF_CAR,
               JNR_HEADER_DETAIL.DMV_INS_COMPANY_CD,
               JNR_HEADER_DETAIL.DMV_POLICY_OWNER_STREET_ADDR,
               JNR_HEADER_DETAIL.DMV_POICY_OWNER_CITY,
               JNR_HEADER_DETAIL.DMV_POLICY_OWNER_STATE,
               JNR_HEADER_DETAIL.DMV_POLICY_OWNER_ZIP_CODE,
               JNR_HEADER_DETAIL.DMV_TRANSACTION_TYPE_CODE,
               JNR_HEADER_DETAIL.DMV_POLICY_EFFECTIVE_DATE,
               JNR_HEADER_DETAIL.DMV_POLICY_CANCELLATION_DATE,
               JNR_HEADER_DETAIL.DMV_DATE_STAMP,
               JNR_HEADER_DETAIL.DMV_POLICY_NUMBER,
               JNR_HEADER_DETAIL.source_record_id,
               JNR_HEADER_DETAIL.DMV_ORIG_DUE_DATE,
               JNR_HEADER_DETAIL.DMV_REC_TYPE_SORT_ORDER,
               JNR_HEADER_DETAIL.ROW_ORIGIN,
               JNR_HEADER_DETAIL.VERSION_NBR,
               JNR_HEADER_DETAIL.DMV_RESERVED,
               JNR_HEADER_DETAIL.CREATE_DATE,
               JNR_HEADER_DETAIL.MAPPING_NAME,              
               UPPER(DMV_VIN) AS DMV_VIN_upper,      
            --  TO_VARCHAR(DMV_ORIG_DUE_DATE, 'YYYYMMDD') AS DMV_ORIG_DUE_DATE_OUT,
              -- DMV_ORIG_DUE_DATE AS DMV_ORIG_DUE_DATE_OUT,
               RPAD(DMV_VIN_upper,19,' ') AS OUT_DMV_VIN,
               RPAD(DMV_DRIVER_LICENSE_NUMBER,15,' ') AS OUT_DMV_DRIVER_LICENSE_NUMBER,
               RPAD(DMV_MAKE_OF_CAR,5,' ') AS OUT_DMV_MAKE_OF_CAR,
               RPAD(DMV_YEAR_OF_CAR,4,' ') AS OUT_DMV_YEAR_OF_CAR,
               RPAD(DMV_MODEL_OF_CAR,5,' ') AS OUT_DMV_MODEL_OF_CAR,
               RPAD(DMV_INS_COMPANY_CD,4,' ') AS OUT_DMV_INS_COMPANY_CD,
               RPAD(DMV_POLICY_OWNER_STREET_ADDR,30,' ') AS OUT_DMV_POLICY_OWNER_STREET_ADDR,
               RPAD(DMV_POICY_OWNER_CITY,20,' ') AS OUT_DMV_POICY_OWNER_CITY,
               RPAD(DMV_POLICY_OWNER_STATE,2,' ') AS OUT_DMV_POLICY_OWNER_STATE,
               RPAD(DMV_POLICY_OWNER_ZIP_CODE,9,' ') AS OUT_DMV_POLICY_OWNER_ZIP_CODE,
               RPAD(DMV_TRANSACTION_TYPE_CODE,1,' ') AS OUT_DMV_TRANSACTION_TYPE_CODE,
               RPAD(DMV_POLICY_EFFECTIVE_DATE,8,' ') AS OUT_DMV_POLICY_EFFECTIVE_DATE,
               RPAD(DMV_POLICY_CANCELLATION_DATE,8,' ') AS OUT_DMV_POLICY_CANCELLATION_DATE,
               RPAD(DMV_DATE_STAMP,8,' ') AS OUT_DMV_DATE_STAMP,
               RPAD(DMV_POLICY_NUMBER,30,' ') AS OUT_DMV_POLICY_NUMBER,
               TO_CHAR(CURRENT_TIMESTAMP,'HHMMSS') AS DMV_TIME_STAMP,
              --CURRENT_TIMESTAMP AS DMV_TIME_STAMP,
               TO_CHAR(CURRENT_TIMESTAMP,'MMDDYYYY') AS DMV_DATE_STAMP1,
             --CURRENT_TIMESTAMP AS DMV_DATE_STAMP1 ,
               'NJ_DMV_DW' AS BUREAU_CD,
               'Y' AS CURRENT_BATCH_CYCLE_IND,
               'NJ' AS SRCE_SYS_CD,
               LKP_CYCLE_DUE_DATE.BATCH_END_DT
          FROM JNR_HEADER_DETAIL JNR_HEADER_DETAIL
          left join -- writting query for lookup function
 (
                select BATCH_END_DT,
                       BUREAU_CD,
                       CURRENT_BATCH_CYCLE_IND,
                       SRCE_SYS_CD,
                       row_number() over(partition by BUREAU_CD, CURRENT_BATCH_CYCLE_IND, SRCE_SYS_CD order by BUREAU_CD, CURRENT_BATCH_CYCLE_IND, SRCE_SYS_CD) as rn -- Please review the order by columns

                  FROM BURRPT.BATCH_BUILD_DATE_CTL qualify rn = 1
               ) LKP_CYCLE_DUE_DATE
            on LKP_CYCLE_DUE_DATE.BUREAU_CD='NJ_DMV_DW'
           AND LKP_CYCLE_DUE_DATE.CURRENT_BATCH_CYCLE_IND='Y'
           AND LKP_CYCLE_DUE_DATE.SRCE_SYS_CD='NJ'
       ) 
,
EXP_EXP_NJ_DMV_MTHLY_MERGE_DETAIL_FF as (
        -- writting query for expression function
SELECT source_record_id,
               OUT_DMV_VIN,
               OUT_DMV_DRIVER_LICENSE_NUMBER,
               OUT_DMV_MAKE_OF_CAR,
               OUT_DMV_YEAR_OF_CAR,
               OUT_DMV_MODEL_OF_CAR,
               OUT_DMV_INS_COMPANY_CD,
               OUT_DMV_POLICY_OWNER_STREET_ADDR,
               OUT_DMV_POICY_OWNER_CITY,
               OUT_DMV_POLICY_OWNER_STATE,
               OUT_DMV_POLICY_OWNER_ZIP_CODE,
               OUT_DMV_TRANSACTION_TYPE_CODE,
               OUT_DMV_POLICY_EFFECTIVE_DATE,
               OUT_DMV_POLICY_CANCELLATION_DATE,
               OUT_DMV_DATE_STAMP,
               OUT_DMV_POLICY_NUMBER,
            --  DMV_ORIG_DUE_DATE_OUT AS DMV_ORIG_DUE_DATE,
               RPAD(' ',31) AS FILLER, 
 OUT_DMV_VIN||OUT_DMV_DRIVER_LICENSE_NUMBER||OUT_DMV_MAKE_OF_CAR||OUT_DMV_YEAR_OF_CAR||OUT_DMV_MODEL_OF_CAR||OUT_DMV_INS_COMPANY_CD||OUT_DMV_POLICY_OWNER_STREET_ADDR||OUT_DMV_POICY_OWNER_CITY||OUT_DMV_POLICY_OWNER_STATE||OUT_DMV_POLICY_OWNER_ZIP_CODE||OUT_DMV_TRANSACTION_TYPE_CODE||OUT_DMV_POLICY_EFFECTIVE_DATE||OUT_DMV_POLICY_CANCELLATION_DATE||OUT_DMV_DATE_STAMP||OUT_DMV_POLICY_NUMBER||FILLER AS DETAIL,
               2 AS SORT_ORDER
          FROM EXP_NJ_DMV_MTHLY_MERGE_DATA
       )
       --select * from EXP_EXP_NJ_DMV_MTHLY_MERGE_DETAIL_FF
,
FINAL_SELECT_FWF_NJ_DMV_MTHLY_MERGE AS (
        -- writing query for target definition

SELECT 
    trim(OUT_DMV_VIN):: VARCHAR(19) AS DMV_VIN,
	trim(OUT_DMV_DRIVER_LICENSE_NUMBER):: VARCHAR(15) AS DMV_DRIVER_LICENSE_NUMBER,
	trim(OUT_DMV_MAKE_OF_CAR):: VARCHAR(5) AS DMV_MAKE_OF_CAR,
	trim(OUT_DMV_YEAR_OF_CAR):: VARCHAR(4) AS DMV_YEAR_OF_CAR,
	trim(OUT_DMV_MODEL_OF_CAR):: VARCHAR(5) AS DMV_MODEL_OF_CAR,
	trim(OUT_DMV_INS_COMPANY_CD):: VARCHAR(4) AS DMV_INS_COMPANY_CD,
	trim(OUT_DMV_POLICY_OWNER_STREET_ADDR):: VARCHAR(30) AS DMV_POLICY_OWNER_STREET_ADDR,
	trim(OUT_DMV_POICY_OWNER_CITY):: VARCHAR(20) AS DMV_POICY_OWNER_CITY,
	trim(OUT_DMV_POLICY_OWNER_STATE):: VARCHAR(2) AS DMV_POLICY_OWNER_STATE,
	trim(OUT_DMV_POLICY_OWNER_ZIP_CODE):: VARCHAR(9) AS DMV_POLICY_OWNER_ZIP_CODE,
	trim(OUT_DMV_TRANSACTION_TYPE_CODE):: VARCHAR(1) AS DMV_TRANSACTION_TYPE_CODE,
	trim(OUT_DMV_POLICY_EFFECTIVE_DATE):: VARCHAR(8) AS DMV_POLICY_EFFECTIVE_DATE,
	trim(OUT_DMV_POLICY_CANCELLATION_DATE):: VARCHAR(8) AS DMV_POLICY_CANCELLATION_DATE,
	trim(OUT_DMV_DATE_STAMP):: VARCHAR(8) AS DMV_DATE_STAMP,
	trim(OUT_DMV_POLICY_NUMBER):: VARCHAR(30) AS DMV_POLICY_NUMBER
    FROM EXP_EXP_NJ_DMV_MTHLY_MERGE_DETAIL_FF
    )SELECT * FROM FINAL_SELECT_FWF_NJ_DMV_MTHLY_MERGE
