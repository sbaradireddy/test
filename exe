WITH SQ_S10_NJ_DMV_EXTRACT AS (
    SELECT row_number() over(order by POL_PK) AS source_record_id,
           T_POL_ADDR_DIM_HST.STATE,
           T_POL_ADDR_DIM_HST.CNTY,
           T_POL_ADDR_DIM_HST.PSTL_CD,
           T_POL_DIM_HST.PRE_CONV_CO_CD,
           T_POL_ADDR_DIM_HST.ADDR_PK,
           T_POL_ADDR_DIM_HST.PMRY_ADDR_FLG,
           T_POL_ADDR_DIM_HST.HSE_NUM,
           T_POL_DIM_HST.POL_PK,
           T_POL_DIM_HST.POL_NUM,
           T_POL_DIM_HST.POL_SEQ_NUM,
           T_POL_DIM_HST.LAPSE_BEGIN_DT,
           T_POL_DIM_HST.LAPSE_END_DT,
           T_POL_DIM_HST.DATA_DT,
           T_POL_DIM_HST.PROD_CD,
           T_POL_DIM_HST.PLN_CD,
           T_POL_DIM_HST.CNCL_TYP,
           T_POL_DIM_HST.POL_VRSN_TXN_TYP,
           T_POL_DIM_HST.ROW_STAT,
           T_POL_DIM_HST.CUR_TERM_EFF_DT,
           T_POL_DIM_HST.CUR_TERM_XPTN_DT,
           T_POL_DIM_HST.CNCL_RSN,
           T_POL_DIM_HST.RCD_ACTN_TYP,
           T_POL_FLG_DIM_HST.PRIME_CONV_FLG,
           T_POL_FLG_DIM_HST.PRIME_POL_FLG,
           T_POL_CT_DIM_HST.VEH_CT,
           T_POL_DIM_HST.PRCSG_GRP_CD,
           T_POL_DIM_HST.POL_STATE_STAT,
           T_POL_DIM_HST.SRC_POL_ID,
           T_POL_DIM_HST.CO_ID,
           T_POL_DIM_HST.PROD_ID,
           T_POL_DIM_HST.POL_STATE_VRSN,
           T_POL_DIM_HST.POL_STATE_EFF_DT,
           T_POL_DIM_HST.ROW_XPTN_DT,
           T_POL_DIM_HST.CORP_CD,
           T_POL_DIM_HST.CO_CD,
           T_POL_DIM_HST.SRC_PROD_ID,
           T_POL_DIM_HST.SRC_CD,
           T_POL_DIM_HST.CNCL_EFF_DT,
           T_POL_DIM_HST.REINST_EFF_DT,
           T_POL_DIM_HST.ACCTG_DT,
           T_POL_DIM_HST.REINST_TYP,
           T_POL_PTY_DIM_HST.DRVR_LIC_NUM,
           T_POL_PTY_DIM_HST.DRVR_LIC_STATE,
           T_POL_PTY_DIM_HST.INSD_PTY_PK,
           T_POL_PTY_DIM_HST.SRC_PTY_ID,
           T_POL_PTY_DIM_HST.NAM_FST,
           T_POL_PTY_DIM_HST.NAM_LST,
           T_POL_PTY_DIM_HST.NAM_MDL,
           T_POL_PTY_DIM_HST.NAM_SFX,
           T_POL_PTY_DIM_HST.BUS_NAM,
           T_POL_PTY_DIM_HST.PMRY_NAMD_INSD_FLG,
           T_POL_PTY_DIM_HST.NAMD_INSD_FLG,
           T_POL_PTY_DIM_HST.DRVR_FLG,
           T_POL_VEH_UNIT_DIM_HST.STAT_MAKE_CD,
           T_POL_VEH_UNIT_DIM_HST.MODEL_YR,
           T_POL_VEH_UNIT_DIM_HST.MK,
           T_POL_VEH_UNIT_DIM_HST.VEH_UNIT_PK,
           T_POL_VEH_UNIT_DIM_HST.RCD_ACTN_TYP AS RCD_ACTN_TYP_veh,
           T_POL_VEH_UNIT_DIM_HST.ORGL_EFF_DT,
           T_POL_VEH_UNIT_DIM_HST.VEH_TYP_CD,
           T_POL_VEH_UNIT_DIM_HST.VIN,
           T_CO_DIM.SRC_CORP_ID,
           T_CO_DIM.SRC_CO_ID,
           T_POL_ADDR_DIM_HST.ADDRESS1,
           T_POL_ADDR_DIM_HST.ADDRESS2,
           T_POL_ADDR_DIM_HST.ADDRESS3,
           T_POL_ADDR_DIM_HST.ADDRESS4,
           T_POL_ADDR_DIM_HST.CITY
    FROM T_POL_ADDR_DIM_HST
    JOIN T_POL_PTY_DIM_HST ON T_POL_PTY_DIM_HST.POL_PK = T_POL_DIM_HST.POL_PK
    JOIN T_POL_FLG_DIM_HST ON T_POL_FLG_DIM_HST.POL_PK = T_POL_DIM_HST.POL_PK
    JOIN T_POL_CT_DIM_HST ON T_POL_CT_DIM_HST.POL_PK = T_POL_DIM_HST.POL_PK
    JOIN T_POL_VEH_UNIT_DIM_HST ON T_POL_VEH_UNIT_DIM_HST.POL_PK = T_POL_DIM_HST.POL_PK
    JOIN T_POL_DIM_HST ON T_POL_ADDR_DIM_HST.POL_PK = T_POL_DIM_HST.POL_PK
    JOIN T_CO_DIM ON T_POL_DIM_HST.CO_ID = T_CO_DIM.CO_ID
    WHERE RTRIM(T_POL_DIM_HST.PRCSG_GRP_CD) IN ('HP', 'PL')
      AND RTRIM(T_POL_DIM_HST.STATE_CD) = 'NJ'
      AND RTRIM(T_POL_DIM_HST.CO_CD) IN ('HPPREF', 'HPPROP', 'HPPROP2', 'HPSIC', 'PAIPTWIN', 'PIC', 'PSIA', 'TCTIPU', 'TCTIPU2', 'ALN_HPCIC', 'ALN_TEACH', 'ALN_PSIA', 'ALN_PIC')
      AND RTRIM(T_POL_DIM_HST.CORP_CD) IN ('HIGHPOINT', 'Palisades')
      AND ((RTRIM(T_POL_DIM_HST.PROD_CD) IN ('PA', 'PAIP')) OR (RTRIM(T_POL_DIM_HST.PROD_CD) = 'PIC_NEW_CA' AND T_POL_DIM_HST.LEG_ENT_CD = 'A') 
      OR (RTRIM(T_POL_DIM_HST.PROD_CD) = 'PIC_NEW_CA' AND LTRIM(RTRIM(T_POL_VEH_UNIT_DIM_HST.VEH_TYP_CD)) = 'LMO' AND T_POL_CT_DIM_HST.VEH_CT <= 5))
      AND T_POL_DIM_HST.RCD_ACTN_TYP <> 'D'
      AND ((T_POL_DIM_HST.ACCTG_DT <= '{{BATCH_END_DT}}' AND T_POL_DIM_HST.POL_STATE_EFF_DT <= '{{RPRTG_PERIOD_END_DT}}' AND T_POL_DIM_HST.POL_STATE_EFF_DT >= '{{RPRTG_PERIOD_START_DT}}') 
      OR (T_POL_DIM_HST.ACCTG_DT <= '{{BATCH_END_DT}}' AND T_POL_DIM_HST.ACCTG_DT >= '{{BATCH_START_DT}}' AND T_POL_DIM_HST.POL_STATE_EFF_DT < '{{RPRTG_PERIOD_START_DT}}'))
      AND ((T_POL_DIM_HST.POL_VRSN_TXN_TYP = 'NB' AND (T_POL_DIM_HST.CONV_POL = 'N' OR T_POL_DIM_HST.CONV_POL IS NULL)) 
      OR (T_POL_FLG_DIM_HST.PRIME_CONV_FLG = 'Y' AND T_POL_DIM_HST.CO_CD = 'ALN_PIC' AND T_POL_DIM_HST.POL_VRSN_TXN_TYP = 'RN') 
      OR (T_POL_FLG_DIM_HST.PRIME_CONV_FLG = 'Y' AND T_POL_DIM_HST.CO_CD = 'ALN_PSIA' AND T_POL_DIM_HST.POL_VRSN_TXN_TYP = 'RN' AND T_POL_DIM_HST.PRE_CONV_CO_CD = 'PIC') 
      OR (T_POL_DIM_HST.POL_VRSN_TXN_TYP = 'RN' AND T_POL_DIM_HST.ICT_DT = T_POL_DIM_HST.CUR_TERM_EFF_DT AND T_POL_CT_DIM_HST.ICT_CT = 1) 
      OR (SUBSTR(T_POL_DIM_HST.POL_VRSN_TXN_TYP, 1, 2) = 'EN' AND T_POL_VEH_UNIT_DIM_HST.RCD_ACTN_TYP = 'A' AND T_POL_DIM_HST.POL_STATE_EFF_DT >= T_POL_DIM_HST.CUR_TERM_EFF_DT) 
      OR (RTRIM(LTRIM(T_POL_DIM_HST.POL_VRSN_TXN_TYP)) IN ('CN', 'CNX') AND RTRIM(LTRIM(T_POL_DIM_HST.CNCL_RSN)) IN ('NONPAY', 'NP', 'NP_CR', 'NP_PF'))
      OR (SUBSTR(T_POL_DIM_HST.POL_VRSN_TXN_TYP, 1, 2) = 'RS' AND RTRIM(LTRIM(T_POL_DIM_HST.REINST_TYP)) = 'WITH LAPSE' AND RTRIM(LTRIM(T_POL_DIM_HST.CNCL_RSN)) IN ('NONPAY', 'NP', 'NP_CR', 'NP_PF')) 
      OR (SUBSTR(T_POL_DIM_HST.POL_VRSN_TXN_TYP, 1, 2) = 'RS' AND RTRIM(LTRIM(T_POL_DIM_HST.REINST_TYP)) = 'REINSTATE' AND RTRIM(LTRIM(T_POL_DIM_HST.CNCL_RSN)) IN ('NONPAY', 'NP', 'NP_CR', 'NP_PF') AND T_POL_DIM_HST.ROW_STAT = 'C'))
)
SELECT * 
FROM SQ_S10_NJ_DMV_EXTRACT;
WITH EXPTRANS AS (
    -- Creating expression transformation
    SELECT SQ_S10_NJ_DMV_EXTRACT.source_record_id,
           SQ_S10_NJ_DMV_EXTRACT.POL_PK,
           SQ_S10_NJ_DMV_EXTRACT.POL_NUM,
           SQ_S10_NJ_DMV_EXTRACT.POL_SEQ_NUM,
           SQ_S10_NJ_DMV_EXTRACT.POL_STATE_VRSN,
           SQ_S10_NJ_DMV_EXTRACT.POL_STATE_EFF_DT,
           SQ_S10_NJ_DMV_EXTRACT.ROW_XPTN_DT,
           SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP,
           SQ_S10_NJ_DMV_EXTRACT.ROW_STAT,
           SQ_S10_NJ_DMV_EXTRACT.RCD_ACTN_TYP,
           SQ_S10_NJ_DMV_EXTRACT.DATA_DT,
           SQ_S10_NJ_DMV_EXTRACT.PRIME_POL_FLG,
           SQ_S10_NJ_DMV_EXTRACT.PRCSG_GRP_CD,
           SQ_S10_NJ_DMV_EXTRACT.POL_STATE_STAT,
           SQ_S10_NJ_DMV_EXTRACT.SRC_POL_ID,
           SQ_S10_NJ_DMV_EXTRACT.CO_ID,
           SQ_S10_NJ_DMV_EXTRACT.PROD_ID,
           SQ_S10_NJ_DMV_EXTRACT.CORP_CD,
           SQ_S10_NJ_DMV_EXTRACT.CO_CD,
           SQ_S10_NJ_DMV_EXTRACT.SRC_PROD_ID,
           SQ_S10_NJ_DMV_EXTRACT.PROD_CD,
           SQ_S10_NJ_DMV_EXTRACT.PLN_CD,
           SQ_S10_NJ_DMV_EXTRACT.CUR_TERM_EFF_DT,
           SQ_S10_NJ_DMV_EXTRACT.CUR_TERM_XPTN_DT,
           SQ_S10_NJ_DMV_EXTRACT.CNCL_RSN,
           SQ_S10_NJ_DMV_EXTRACT.CNCL_TYP,
           SQ_S10_NJ_DMV_EXTRACT.CNCL_EFF_DT,
           SQ_S10_NJ_DMV_EXTRACT.REINST_EFF_DT,
           SQ_S10_NJ_DMV_EXTRACT.ACCTG_DT,
           SQ_S10_NJ_DMV_EXTRACT.REINST_TYP,
           SQ_S10_NJ_DMV_EXTRACT.LAPSE_BEGIN_DT,
           SQ_S10_NJ_DMV_EXTRACT.LAPSE_END_DT,
           SQ_S10_NJ_DMV_EXTRACT.VEH_UNIT_PK,
           SQ_S10_NJ_DMV_EXTRACT.RCD_ACTN_TYP_veh,
           SQ_S10_NJ_DMV_EXTRACT.ORGL_EFF_DT,
           SQ_S10_NJ_DMV_EXTRACT.VEH_TYP_CD,
           SQ_S10_NJ_DMV_EXTRACT.VIN,
           SQ_S10_NJ_DMV_EXTRACT.MODEL_YR,
           SQ_S10_NJ_DMV_EXTRACT.MK,
           SQ_S10_NJ_DMV_EXTRACT.STAT_MAKE_CD,
           SQ_S10_NJ_DMV_EXTRACT.ADDR_PK,
           SQ_S10_NJ_DMV_EXTRACT.PMRY_ADDR_FLG,
           SQ_S10_NJ_DMV_EXTRACT.HSE_NUM,
           SQ_S10_NJ_DMV_EXTRACT.ADDRESS1,
           SQ_S10_NJ_DMV_EXTRACT.ADDRESS2,
           SQ_S10_NJ_DMV_EXTRACT.ADDRESS3,
           SQ_S10_NJ_DMV_EXTRACT.ADDRESS4,
           SQ_S10_NJ_DMV_EXTRACT.CITY,
           SQ_S10_NJ_DMV_EXTRACT.STATE,
           SQ_S10_NJ_DMV_EXTRACT.CNTY,
           SQ_S10_NJ_DMV_EXTRACT.PSTL_CD,
           SQ_S10_NJ_DMV_EXTRACT.INSD_PTY_PK,
           SQ_S10_NJ_DMV_EXTRACT.SRC_PTY_ID,
           SQ_S10_NJ_DMV_EXTRACT.NAM_FST,
           SQ_S10_NJ_DMV_EXTRACT.NAM_LST,
           SQ_S10_NJ_DMV_EXTRACT.NAM_MDL,
           SQ_S10_NJ_DMV_EXTRACT.NAM_SFX,
           SQ_S10_NJ_DMV_EXTRACT.BUS_NAM,
           SQ_S10_NJ_DMV_EXTRACT.PMRY_NAMD_INSD_FLG,
           SQ_S10_NJ_DMV_EXTRACT.NAMD_INSD_FLG,
           SQ_S10_NJ_DMV_EXTRACT.SRC_CORP_ID,
           SQ_S10_NJ_DMV_EXTRACT.SRC_CO_ID,
           SQ_S10_NJ_DMV_EXTRACT.DRVR_FLG,
           SQ_S10_NJ_DMV_EXTRACT.DRVR_LIC_NUM,
           SQ_S10_NJ_DMV_EXTRACT.DRVR_LIC_STATE,
           SQ_S10_NJ_DMV_EXTRACT.PRE_CONV_CO_CD,
           SQ_S10_NJ_DMV_EXTRACT.SRC_CD,
           SQ_S10_NJ_DMV_EXTRACT.PRIME_CONV_FLG,
           NULL AS REINST_RSN,
           SUBSTR(SQ_S10_NJ_DMV_EXTRACT.PSTL_CD, 1, 5) AS ZIP_FIRST5_CD,
           SUBSTR(SQ_S10_NJ_DMV_EXTRACT.PSTL_CD, 6, 4) AS ZIP_PLUS_CD,
           REGEXP_REPLACE('{{BATCH_START_DT}}', CHR(39) || 'null' || CHR(39), '') AS v_BATCH_START_DT,
           REGEXP_REPLACE('{{BATCH_END_DT}}', CHR(39) || 'null' || CHR(39), '') AS v_BATCH_END_DT,
           REGEXP_REPLACE('{{RPRTG_PERIOD_START_DT}}', CHR(39) || 'null' || CHR(39), '') AS v_RPRTG_PERIOD_START_DT,
           REGEXP_REPLACE('{{RPRTG_PERIOD_END_DT}}', CHR(39) || 'null' || CHR(39), '') AS v_RPRTG_PERIOD_END_DT,
           IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'RN' AND SQ_S10_NJ_DMV_EXTRACT.PRIME_CONV_FLG = 'Y' 
           AND SQ_S10_NJ_DMV_EXTRACT.CO_CD = 'ALN_PSIA' AND SQ_S10_NJ_DMV_EXTRACT.PRE_CONV_CO_CD = 'PIC', 'NB',
           IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'RN' AND SQ_S10_NJ_DMV_EXTRACT.PRIME_CONV_FLG = 'Y' 
           AND SQ_S10_NJ_DMV_EXTRACT.CO_CD = 'ALN_PIC', 'NB',
           IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'NB', 'NB',
           IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'CN', 'CN',
           IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'EN', 'AV', 
           IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'RS', 'RS', '')))))) AS DMV_TRANS_TYPE,
           UPPER(SQ_S10_NJ_DMV_EXTRACT.MK) AS MK_caps,
           RPAD(UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.VIN))), 19, ' ') AS DMV_VIN,
           IFF(SQ_S10_NJ_DMV_EXTRACT.DRVR_LIC_NUM IS NULL OR SQ_S10_NJ_DMV_EXTRACT.DRVR_LIC_STATE != 'NJ', '               ', 
           RPAD(UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.DRVR_LIC_NUM))), 15, ' ')) AS DMV_DRIVER_LICENSE_NUMBER,
           RPAD(UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.STAT_MAKE_CD))), 5, ' ') AS DMV_MAKE_OF_CAR,
           IFF(SQ_S10_NJ_DMV_EXTRACT.MODEL_YR IS NULL OR SQ_S10_NJ_DMV_EXTRACT.MODEL_YR = 0, '     ', 
           RPAD(LTRIM(RTRIM(TO_CHAR(SQ_S10_NJ_DMV_EXTRACT.MODEL_YR))), 4, ' ')) AS DMV_YEAR_OF_CAR,
           '     ' AS DMV_MODEL_OF_CAR,
           DECODE(RTRIM(LTRIM(SQ_S10_NJ_DMV_EXTRACT.CO_CD)), 'PIC', '4895', 'PSIA', '4840', 'HPPREF', '4808', 'HPSIC', '4875', 'HPPROP', '4876', 'HPPROP2', '4876', 'TCTIPU', '4946', 
           'TCTIPU2', '4946', 'PAIPTWIN', '4927', 'ALN_HPCIC', '4876', 'ALN_TEACH', '4946', 'ALN_PSIA', '4840', 'ALN_PIC', '489
    , 'XXXX') AS DMV_INS_COMPANY_CD,
    RPAD(UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.HSE_NUM))) || ' ' || UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.ADDRESS1))), 30, ' ') AS DMV_POLICY_OWNER_STREET_ADDR,
    RPAD(UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.CITY))), 20, ' ') AS DMV_POLICY_OWNER_CITY,
    RPAD(UPPER(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.STATE))), 2, ' ') AS DMV_POLICY_OWNER_STATE,
    RPAD(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.ZIP_FIRST5_CD)), 9, ' ') AS DMV_POLICY_OWNER_ZIP_CODE,
    IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'C', 'C', 'N') AS DMV_TRANSACTION_TYPE_CODE,
    IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'CN', '00000000', TO_CHAR(SQ_S10_NJ_DMV_EXTRACT.POL_STATE_EFF_DT, 'MMDDYYYY')) AS DMV_POLICY_EFFECTIVE_DATE,
    IFF(SUBSTR(SQ_S10_NJ_DMV_EXTRACT.POL_VRSN_TXN_TYP, 1, 2) = 'C', TO_CHAR(SQ_S10_NJ_DMV_EXTRACT.POL_STATE_EFF_DT, 'MMDDYYYY'), '00000000') AS DMV_POLICY_CANCELLATION_DATE,
    TO_CHAR(SYSDATE(), 'MMDDYYYY') AS DMV_DATE_STAMP,
    RPAD(LTRIM(RTRIM(SQ_S10_NJ_DMV_EXTRACT.POL_NUM)), 30, ' ') AS DMV_POLICY_NUMBER,
    RPAD(' ', 31) AS DMV_RESERVED,
    TO_VARCHAR(v_BATCH_START_DT, 'YYYY-MM-DD') AS BATCH_START_DT,
    TO_VARCHAR(v_BATCH_END_DT, 'YYYY-MM-DD') AS BATCH_END_DT,
    TO_VARCHAR(v_RPRTG_PERIOD_START_DT, 'YYYY-MM-DD') AS RPRTG_PERIOD_START_DT,
    TO_VARCHAR(v_RPRTG_PERIOD_END_DT, 'YYYY-MM-DD') AS RPRTG_PERIOD_END_DT
    FROM SQ_S10_NJ_DMV_EXTRACT
)
, EXP_PRIMARY_DRIVER AS (
    -- Creating expression for the primary driver
    SELECT source_record_id,
           lkp_INSD_PTY_PK AS INSD_PTY_PK_PRMRY_DRVR,
           lkp_SRC_PTY_ID AS SRC_PTY_ID_PRMRY_DRVR,
           lkp_NAM_FST AS NAM_FST_PRMRY_DRVR,
           lkp_NAM_LST AS NAM_LST_PRMRY_DRVR,
           lkp_NAM_MDL AS NAM_MDL_PRMRY_DRVR,
           lkp_NAM_SFX AS NAM_SFX_PRMRY_DRVR,
           lkp_PMRY_NAMD_INSD_FLG AS NAMD_INSD_FLG_PRMRY_DRVR,
           lkp_DRVR_FLG AS DRVR_FLG_PRMRY_DRVR,
           lkp_DRVR_LIC_NUM AS DRVR_LIC_NUM_PRMRY_DRVR,
           lkp_DRVR_LIC_STATE AS DRVR_LIC_STATE_PRMRY_DRVR
    FROM EXPTRANS
)
, EXPTRANS1 AS (
    -- Creating another expression transformation
    SELECT EXPTRANS.source_record_id,
           NEXTVAL AS NJ_DMV_UMIS_MTH_BUILD_ID,  -- Snowflake sequence
           EXPTRANS.POL_PK,
           EXPTRANS.POL_NUM,
           EXPTRANS.POL_SEQ_NUM,
           NULL AS ORIG_POL_PK,
           EXPTRANS.POL_STATE_VRSN,
           EXPTRANS.POL_STATE_EFF_DT,
           EXPTRANS.ACCTG_DT,
           EXPTRANS.POL_STATE_STAT,
           EXPTRANS.ROW_XPTN_DT,
           EXPTRANS.POL_VRSN_TXN_TYP,
           EXPTRANS.ROW_STAT,
           EXPTRANS.RCD_ACTN_TYP AS RCD_ACTN_TYP_POL,
           EXPTRANS.DATA_DT,
           EXPTRANS.CORP_CD,
           EXPTRANS.CO_CD,
           EXPTRANS.SRC_PROD_ID,
           EXPTRANS.SRC_CD,
           EXPTRANS.SRC_POL_ID,
           EXPTRANS.CO_ID,
           EXPTRANS.PROD_ID,
           EXPTRANS.CUR_TERM_EFF_DT,
           EXPTRANS.CUR_TERM_XPTN_DT,
           EXPTRANS.CNCL_RSN,
           EXPTRANS.CNCL_TYP,
           EXPTRANS.CNCL_EFF_DT,
           EXPTRANS.REINST_EFF_DT,
           EXPTRANS.REINST_RSN,
           EXPTRANS.LAPSE_BEGIN_DT,
           EXPTRANS.LAPSE_END_DT,
           EXPTRANS.PLN_CD,
           EXPTRANS.PRIME_CONV_FLG,
           EXPTRANS.DMV_TRANS_TYPE,
           EXPTRANS.VEH_UNIT_PK,
           EXPTRANS.RCD_ACTN_TYP_VEH AS RCD_ACTN_TYP_VEH,
           EXPTRANS.ORGL_EFF_DT,
           EXPTRANS.VEH_TYP_CD,
           EXPTRANS.VIN,
           EXPTRANS.MODEL_YR,
           EXPTRANS.MK,
           EXPTRANS.STAT_MAKE_CD,
           EXP_PRIMARY_DRIVER.INSD_PTY_PK_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.SRC_PTY_ID_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.NAM_FST_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.NAM_LST_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.NAM_MDL_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.NAM_SFX_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.DRVR_LIC_NUM_PRMRY_DRVR,
           EXP_PRIMARY_DRIVER.DRVR_LIC_STATE_PRMRY_DRVR,
           SYSDATE() AS CREATE_DT,
           'M_S10_NJ_DMV_EXTRACT' AS CREATED_BY
    FROM EXPTRANS
    INNER JOIN EXP_PRIMARY_DRIVER
    ON EXPTRANS.source_record_id = EXP_PRIMARY_DRIVER.source_record_id
)
, UPDTRANS AS (
    -- Creating the update transformation
    SELECT EXPTRANS1.source_record_id,
           EXPTRANS1.ADDR_PK,
           EXPTRANS1.PMRY_ADDR_FLG,
           EXPTRANS1.HSE_NUM,
           EXPTRANS1.ADDRESS1,
           EXPTRANS1.ADDRESS2,
           EXPTRANS1.ADDRESS3,
           EXPTRANS1.ADDRESS4,
           EXPTRANS1.BATCH_START_DT,
           EXPTRANS1.RPRTG_PERIOD_END_DT,
           EXPTRANS1.DMV_VIN,
           EXPTRANS1.BATCH_END_DT,
           EXPTRANS1.RPRTG_PERIOD_START_DT,
           EXPTRANS1.DMV_POLICY_EFFECTIVE_DATE,
           EXPTRANS1.CNCL_RSN,
           EXPTRANS1.DRVR_LIC_STATE_POL_OWNER,
           EXPTRANS1.NAM_FST_POL_OWNER,
           EXPTRANS1.NAMD_INSD_FLG_POL_OWNER,
           EXPTRANS1.ZIP_FIRST5_CD,
           EXPTRANS1.REINST_TYP,
           EXPTRANS1.CO_CD,
           EXPTRANS1.SRC_PROD_ID,
           EXPTRANS1.SRC_CD,
           EXPTRANS1.SRC_POL_ID,
           EXPTRANS1.PSTL_CD,
           EXPTRANS1.CITY,
           EXPTRANS1.STATE,
           EXPTRANS1.CNTY,
           EXPTRANS1.RCD_ACTN_TYP_POL,
           EXPTRANS1.DATA_DT,
           EXPTRANS1.CORP_CD,
           EXPTRANS1.DRVR_FLG_POL_OWNER,
           EXPTRANS1.DRVR_LIC_NUM_POL_OWNER,
           EXPTRANS1.DMV_DATE_STAMP,
           EXPTRANS1.DMV_POLICY_NUMBER,
           EXPTRANS1.DMV_RESERVED,
           EXPTRANS1.PRCSG_GRP_CD,
           EXPTRANS1.PROD_CD,
           EXPTRANS1.SRC_CORP_ID,
           EXPTRANS1.SRC_CO_ID,
           EXPTRANS1.DMV_POLICY_OWNER_ZIP_CODE,
           EXPTRANS1.DMV_TRANSACTION_TYPE_CODE,
           EXPTRANS1.DMV_POLICY_OWNER_STATE,
           EXPTRANS1.CREATED_BY,
           EXPTRANS1.CUR_TERM_EFF_DT,
           EXPTRANS1.CUR_TERM_XPTN_DT,
           EXPTRANS1.DMV_POLICY_OWNER_CITY,
           EXPTRANS1.VEH_UNIT_PK,
           EXPTRANS1.RCD_ACTN_TYP_VEH,
           EXPTRANS1.ORGL_EFF_DT,
           EXPTRANS1.REINST_EFF_DT,
           EXPTRANS1.REINST_RSN,
           EXPTRANS1.LAPSE_BEGIN_DT,
           EXPTRANS1.LAPSE_END_DT,
           EXPTRANS1.PLN_CD,
           EXPTRANS1.DMV_TRANS_TYPE,
           EXPTRANS1.INSD_PTY_PK_POL_OWNER,
           EXPTRANS1.SRC_PTY_ID_POL_OWNER,
           EXPTRANS1.ACCTG_DT,
           EXPTRANS1.POL_STATE_STAT,
           EXPTRANS1.ROW_XPTN_DT,
           EXPTRANS1.POL_VRSN_TXN_TYP,
           EXPTRANS1.ROW_STAT,
           EXPTRANS1.CO_ID,
           EXPTRANS1.PROD_ID,
           EXPTRANS1.NAM_LST_POL_OWNER,
           EXPTRANS1.NAM_MDL_POL_OWNER,
           EXPTRANS1.NAM_SFX_POL_OWNER,
           EXPTRANS1.BUS_NAM_POL_OWNER,
           EXPTRANS1.PMRY_NAMD_INSD_FLG_POL_OWNER,
           EXPTRANS1.DMV_MAKE_OF_CAR_out AS DMV_MAKE_OF_CAR,
           EXPTRANS1.NJ_DMV_UMIS_MTH_BUILD_ID,
           EXPTRANS1.POL_PK,
           EXPTRANS1.POL_NUM,
           EXPTRANS1.POL_SEQ_NUM,
           EXPTRANS1.ORIG_POL_PK,
           EXPTRANS1.POL_STATE_VRSN,
           EXPTRANS1.POL_STATE_EFF_DT,
           EXPTRANS1.DMV_POLICY_CANCELLATION_DATE,
           EXPTRANS1.NAM_FST_PRMRY_DRVR,
           EXPTRANS1.NAM_LST_PRMRY_DRVR,
           EXPTRANS1.NAM_MDL_PRMRY_DRVR,
           EXPTRANS1.NAM_SFX_PRMRY_DRVR,
           EXPTRANS1.NAMD_INSD_FLG_PRMRY_DRVR,
           EXPTRANS1.DRVR_FLG_PRMRY_DRVR,
           EXPTRANS1.DRVR_LIC_NUM_PRMRY_DRVR,
           EXPTRANS1.DRVR_LIC_STATE_PRMRY_DRVR,
           EXPTRANS1.VEH_TYP_CD,
           EXPTRANS1.VIN,
           EXPTRANS1.MODEL_YR,
           EXPTRANS1.MK,
           EXPTRANS1.STAT_MAKE_CD,
           EXPTRANS1.CNCL_TYP,
           EXPTRANS1.ZIP_LAST4_CD,
           EXPTRANS1.ASSOCN_TYP_PRMRY_DRVR,
           EXPTRANS1.INSD_PTY_PK_PRMRY_DRVR,
           EXPTRANS1.SRC_PTY_ID_PRMRY_DRVR,
           EXPTRANS1.CNCL_EFF_DT,
           EXPTRANS1.BATCH_ID,
           EXPTRANS1.CREATE_DT,
           EXPTRANS1.DMV_DRIVER_LICENSE_NUMBER,
           EXPTRANS1.DMV_YEAR_OF_CAR,
           EXPTRANS1.DMV_MODEL_OF_CAR,
           EXPTRANS1.DMV_INS_COMPANY_CD,
           EXPTRANS1.DMV_POLICY_OWNER_STREET_ADDR,
           EXPTRANS1.PRE_CONV_CO_CD
    FROM EXPTRANS1
)
, FINAL_SELECT_S10_NJ_DMV_MTHLY_EXTRACT AS (
    -- Creating the final select statement
    SELECT NJ_DMV_UMIS_MTH_BUILD_ID::INTEGER AS NJ_DMV_UMIS_MTH_BUILD_ID,
           POL_PK::INTEGER AS POL_PK,
           TRIM(POL_NUM)::VARCHAR(25) AS POL_NUM,
           POL_SEQ_NUM::INTEGER AS POL_SEQ_NUM,
           ORIG_POL_PK::INTEGER AS ORIG_POL_PK,
           POL_STATE_VRSN::INTEGER AS POL_STATE_VRSN,
           POL_STATE_EFF_DT::DATE AS POL_STATE_EFF_DT,
           ACCTG_DT::DATE AS ACCTG_DT,
           TRIM(POL_STATE_STAT)::VARCHAR(10) AS POL_STATE_STAT,
           ROW_XPTN_DT::DATE AS ROW_XPTN_DT,
           TRIM(POL_VRSN_TXN_TYP)::VARCHAR(3) AS POL_VRSN_TXN_TYP,
           TRIM(ROW_STAT)::VARCHAR(10) AS ROW_STAT,
           TRIM(RCD_ACTN_TYP_POL)::VARCHAR(1) AS RCD_ACTN_TYP_POL,
           DATA_DT::DATE AS DATA_DT,
           TRIM(CORP_CD)::VARCHAR(10) AS CORP_CD,
           TRIM(CO_CD)::VARCHAR(10) AS CO_CD,
           SRC_PROD_ID::INTEGER AS SRC_PROD_ID,
           TRIM(SRC_CD)::VARCHAR(10) AS SRC_CD,
           SRC_POL_ID::INTEGER AS SRC_POL_ID,
           CO_ID::INTEGER AS CO_ID,
           PROD_ID::INTEGER AS PROD_ID,
           SRC_CORP_ID::INTEGER AS SRC_CORP_ID,
           SRC_CO_ID::INTEGER AS SRC_CO_ID,
           TRIM(PRCSG_GRP_CD)::VARCHAR(10) AS PRCSG_GRP_CD,
           TRIM(PROD_CD)::VARCHAR(10) AS PROD_CD,
           CUR_TERM_EFF_DT::DATE AS CUR_TERM_EFF_DT,
           CUR_TERM_XPTN_DT::DATE AS CUR_TERM_XPTN_DT,
           TRIM(CNCL_RSN)::VARCHAR(15) AS CNCL_RSN,
           TRIM(CNCL_TYP)::VARCHAR(2) AS CNCL_TYP,
           CNCL_EFF_DT::DATE AS CNCL_EFF_DT,
           TRIM(REINST_TYP)::VARCHAR(10) AS REINST_TYP,
           REINST_EFF_DT::DATE AS REINST_EFF_DT,
           TRIM(REINST_RSN)::VARCHAR(50) AS REINST_RSN,
           LAPSE_BEGIN_DT::DATE AS LAPSE_BEGIN_DT,
           LAPSE_END_DT::DATE AS LAPSE_END_DT,
           TRIM(PLN_CD)::VARCHAR(10) AS PLN_CD,
           TRIM(DMV_TRANS_TYPE)::VARCHAR(2) AS DMV_TRANS_TYPE,
           VEH_UNIT_PK::INTEGER AS VEH_UNIT_PK,
           TRIM(RCD_ACTN_TYP_VEH)::VARCHAR(1) AS RCD_ACTN_TYP_VEH,
           ORGL_EFF_DT::DATE AS ORGL_EFF_DT,
           TRIM(VEH_TYP_CD)::VARCHAR(10) AS VEH_TYP_CD,
           TRIM(VIN)::VARCHAR(30) AS VIN,
           MODEL_YR::INTEGER AS MODEL_YR,
           TRIM(MK)::VARCHAR(25) AS MK,
           TRIM(STAT_MAKE_CD)::VARCHAR(20) AS STAT_MAKE_CD,
           ADDR_PK::INTEGER AS ADDR_PK,
           TRIM(PMRY_ADDR_FLG)::VARCHAR(1) AS PMRY_ADDR_FLG,
           TRIM(HSE_NUM)::VARCHAR(10) AS HSE_NUM,
           TRIM(ADDRESS1)::VARCHAR(50) AS ADDRESS1,
           TRIM(ADDRESS2)::VARCHAR(50) AS ADDRESS2,
           TRIM(ADDRESS3)::VARCHAR(50) AS ADDRESS3,
           TRIM(ADDRESS4)::VARCHAR(50) AS ADDRESS4,
           TRIM(CITY)::VARCHAR(120) AS CITY,
           TRIM(STATE)::VARCHAR(2) AS STATE,
           TRIM(CNTY)::VARCHAR(60) AS CNTY,
           TRIM(PSTL_CD)::VARCHAR(13) AS PSTL_CD,
           TRIM(ZIP_FIRST5_CD)::VARCHAR(5) AS ZIP_FIRST5_CD,
           TRIM(ZIP_LAST4_CD)::VARCHAR(4) AS ZIP_LAST4_CD,
           INSD_PTY_PK_POL_OWNER::INTEGER AS INSD_PTY_PK_POL_OWNER,
           SRC_PTY_ID_POL_OWNER::INTEGER AS SRC_PTY_ID_POL_OWNER,
           TRIM(NAM_FST_POL_OWNER)::VARCHAR(40) AS NAM_FST_POL_OWNER,
           TRIM(NAM_LST_POL_OWNER)::VARCHAR(40) AS NAM_LST_POL_OWNER,
           TRIM(NAM_MDL_POL_OWNER)::VARCHAR(40) AS NAM_MDL_POL_OWNER,
           TRIM(NAM_SFX_POL_OWNER)::VARCHAR(10) AS NAM_SFX_POL_OWNER,
           TRIM(BUS_NAM_POL_OWNER)::VARCHAR(255) AS BUS_NAM_POL_OWNER,
           TRIM(PMRY_NAMD_INSD_FLG_POL_OWNER)::VARCHAR(1) AS PMRY_NAMD_INSD_FLG_POL_OWNER,
           TRIM(NAMD_INSD_FLG_POL_OWNER)::VARCHAR(1) AS NAMD_INSD_FLG_POL_OWNER,
           TRIM(DRVR_FLG_POL_OWNER)::VARCHAR(1) AS DRVR_FLG_POL_OWNER,
           TRIM(DRVR_LIC_NUM_POL_OWNER)::VARCHAR(25) AS DRVR_LIC_NUM_POL_OWNER,
           TRIM(DRVR_LIC_STATE_POL_OWNER)::VARCHAR(2) AS DRVR_LIC_STATE_POL_OWNER,
           TRIM(ASSOCN_TYP_PRMRY_DRVR)::VARCHAR(10) AS ASSOCN_TYP_PRMRY_DRVR,
           INSD_PTY_PK_PRMRY_DRVR::INTEGER AS INSD_PTY_PK_PRMRY_DRVR,
           SRC_PTY_ID_PRMRY_DRVR::INTEGER AS SRC_PTY_ID_PRMRY_DRVR,
           TRIM(NAM_FST_PRMRY_DRVR)::VARCHAR(40) AS NAM_FST_PRMRY_DRVR,
           TRIM(NAM_LST_PRMRY_DRVR)::VARCHAR(40) AS NAM_LST_PRMRY_DRVR,
           TRIM(NAM_MDL_PRMRY_DRVR)::VARCHAR(40) AS NAM_MDL_PRMRY_DRVR,
           TRIM(NAM_SFX_PRMRY_DRVR)::VARCHAR(10) AS NAM_SFX_PRMRY_DRVR,
           TRIM(NAMD_INSD_FLG_PRMRY_DRVR)::VARCHAR(1) AS NAMD_INSD_FLG_PRMRY_DRVR,
           TRIM(DRVR_FLG_PRMRY_DRVR)::VARCHAR(1) AS DRVR_FLG_PRMRY_DRVR,
           TRIM(DRVR_LIC_NUM_PRMRY_DRVR)::VARCHAR(25) AS DRVR_LIC_NUM_PRMRY_DRVR,
           TRIM(DRVR_LIC_STATE_PRMRY_DRVR)::VARCHAR(2) AS DRVR_LIC_STATE_PRMRY_DRVR,
           BATCH_ID::INTEGER AS BATCH_ID,
           CREATE_DT::DATE AS CREATE_DT,
           TRIM(CREATED_BY)::VARCHAR(55) AS CREATED_BY,
           BATCH_START_DT::DATE AS BATCH_START_DT,
           BATCH_END_DT::DATE AS BATCH_END_DT,
           RPRTG_PERIOD_START_DT::DATE AS RPRTG_PERIOD_START_DT,
           RPRTG_PERIOD_END_DT::DATE AS RPRTG_PERIOD_END_DT,
           TRIM(DMV_VIN)::VARCHAR(19) AS DMV_VIN,
           TRIM(DMV_DRIVER_LICENSE_NUMBER)::VARCHAR(15) AS DMV_DRIVER_LICENSE_NUMBER,
           TRIM(DMV_MAKE_OF_CAR)::VARCHAR(5) AS DMV_MAKE_OF_CAR,
           TRIM(DMV_YEAR_OF_CAR)::VARCHAR(4) AS DMV_YEAR_OF_CAR,
           TRIM(DMV_MODEL_OF_CAR)::VARCHAR(5) AS DMV_MODEL_OF_CAR,
           TRIM(DMV_INS_COMPANY_CD)::VARCHAR(4) AS DMV_INS_COMPANY_CD,
           TRIM(DMV_POLICY_OWNER_STREET_ADDR)::VARCHAR(30) AS DMV_POLICY_OWNER_STREET_ADDR,
           TRIM(DMV_POLICY_OWNER_CITY)::VARCHAR(20) AS DMV_POLICY_OWNER_CITY,
           TRIM(DMV_POLICY_OWNER_STATE)::VARCHAR(2) AS DMV_POLICY_OWNER_STATE,
           TRIM(DMV_POLICY_OWNER_ZIP_CODE)::VARCHAR(9) AS DMV_POLICY_OWNER_ZIP_CODE,
           TRIM(DMV_TRANSACTION_TYPE_CODE)::VARCHAR(1) AS DMV_TRANSACTION_TYPE_CODE,
           TRIM(DMV_POLICY_EFFECTIVE_DATE)::VARCHAR(8) AS DMV_POLICY_EFFECTIVE_DATE,
           TRIM(DMV_POLICY_CANCELLATION_DATE)::VARCHAR(8) AS DMV_POLICY_CANCELLATION_DATE,
           TRIM(DMV_DATE_STAMP)::VARCHAR(8) AS DMV_DATE_STAMP,
           TRIM(DMV_POLICY_NUMBER)::VARCHAR(30) AS DMV_POLICY_NUMBER,
           TRIM(DMV_RESERVED)::VARCHAR(32) AS DMV_RESERVED,
           TRIM(PRE_CONV_CO_CD)::VARCHAR(10) AS PRE_CONV_CO_CD
    FROM UPDTRANS
)

-- Final select to retrieve data from the defined extract
SELECT *
FROM FINAL_SELECT_S10_NJ_DMV_MTHLY_EXTRACT;


