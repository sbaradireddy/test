--Informatica Object Names 
--Workflow Name: WFL_S10_ISO_BURRPT_PLOTA_PREM_EXTRACT_FULL 
--Mapping Name: m_ISO_BURRPT_PLOTA_PREM_HO_BUILD_NE 
--Folder: BURRPT_ISO_PERS_LINES_OTA_PREM_NE 
--Session: s_m_ISO_BURRPT_PLOTA_PREM_HO_BUILD_NE 
--File Name: WFL_S10_ISO_BURRPT_PLOTA_PREM_EXTRACT_FULL.xml 

{{
  config(
    materialized = 'incremental',
    schema = var('BURRPT_SCHEMA'),     
    pre_hook= "{{ truncate_table(this) }} ",
    incremental_strategy = 'append',
     unique_key = [],
     merge_cols = [],
     source_pre_sql =[''],
     source_post_sql=[''],
     target_pre_sql =[],
     target_post_sql =[],
     table_prefix =[]
    )
}}

{% set BURRPT = var('BURRPT_SCHEMA') %} 
{% set RRM = var('RRM_SCHEMA') %} 
{% set ERM = var('ERM_SCHEMA') %} 
{% set CDW = var('WAREHOUSE_DB') %} 
{% set DWADMN = var('WAREHOUSE_SCHEMA') %}


{% if execute %}
{% set date_parms = fromjson(get_batch_build_dates()) %}
{% else %}
{% set date_parms = [] %}    
{% endif %}
 {{ log("date_parms  = " ~ date_parms, info=True) }}
 
{% set RPRTG_PERIOD_START_DT =  date_parms['RPRTG_PERIOD_START_DT'] %} 
{% set RPRTG_PERIOD_END_DT = date_parms['RPRTG_PERIOD_END_DT']  %} 
{% set BATCH_START_DT = date_parms['BATCH_START_DT'] %} 
{% set BATCH_END_DT = date_parms['BATCH_END_DT'] %} 

{% set START_DT = BATCH_START_DT %} 
{% set END_DT = BATCH_END_DT %} 


WITH SQ_S10_ISO_PLOTA_EXTRACT_NE1 as (
        SELECT row_number() over(order by S10_ISO_PLOTA_EXTRACT_NE_ID) AS source_record_id,
               S10_ISO_PLOTA_EXTRACT_NE_ID,
               POL_STAT_PREM_PK,
               POL_STAT_UNIT_PK,
               POL_STAT_PK,
               POL_PK,
               CVG_PK,
               PCAT_UNIT_PK,
               LCTN_PK,
               ORIG_CVG_PK,
               ORIG_POL_PK,
               POL_STATE_VRSN,
               POL_STATE_EFF_DT,
               SRC_POL_ID,
               POL_NUM,
               POL_SEQ_NUM,
               SRC_RISK_UNIT_ID,
               SRC_STAT_PREMIUM_ID,
               SRC_STAT_UNIT_ID,
               SRC_STAT_HEADER_ID,
               SRC_CVG_ID,
               STATE_CODE,
               CUR_TERM_EFF_DT,
               CUR_TERM_XPTN_DT,
               PRI_ADDR_PSTL_CD,
               UNIT_TYPE,
               SRC_DATA_SET_NBR,
               ORIG_POL_STATE_VRSN,
               STAT_TRAN_CODE,
               OOS_TRANS_F,
               REAPPLY_TRANS_F,
               BACKOUT_TRANS_F,
               PREMIUM_SOURCE_C,
               PREMIUM_SOURCE_T,
               PREMIUM_SOURCE_SEQ,
               TERRITORY_ID,
               PREM_COVERAGE_M,
               LIMIT_AMT1,
               LIMIT_AMT2,
               DED_AMT1,
               PREM_WRIT_M,
               CNTRB_TO_PREMIUM_F,
               RCD_ACTN_TYP,
               DATA_DT,
               PRCSG_GRP_CD,
               POL_STATE_STAT,
               CO_CD,
               CO_ID,
               CO_NAM,
               SRC_CO_ID,
               CORP_CD,
               CORP_NAM,
               SRC_CORP_ID,
               PROD_CD,
               PROD_ID,
               PROD_NAM,
               SRC_PROD_ID,
               LOB_CD,
               LOB_NAM,
               RCD_TYP,
               SRC_CD,
               LMT_1_DESC,
               LMT_1_AMT,
               LMT_2_DESC,
               LMT_2_AMT,
               DDCTBL_1_DESC,
               DDCTBL_1_AMT,
               BUS_PPTY_INCRSD_LMT,
               LMT_BCL,
               LMT_BOAT,
               LMT_BOAT_EQPT,
               LMT_BOAT_MOTR,
               LMT_BOAT_TRLR,
               LMT_CAMERA,
               LMT_COINS,
               LMT_ELTRNCS,
               LMT_ELTRNCS_OFF_PRMSES,
               LMT_ELTRNCS_ON_PRMSES,
               LMT_ELTRNCS_IN_VEH,
               LMT_ELTRNCS_OUT_VEH,
               LMT_FINE_ART,
               LMT_FINE_ART_EXCLDG_BRKAGE,
               LMT_FINE_ART_INCLG_BRKAGE,
               LMT_FURS,
               LMT_GOLF,
               LMT_GOLF_CART,
               LMT_GUNS,
               LMT_JEWELERY,
               LMT_JEWELERY_IN_VALT,
               LMT_JEWELERY_NO_VALT,
               LMT_MONEY,
               LMT_MUSICL_INSTMT,
               LMT_MUSICL_INSTMT_NON_PFSNL,
               LMT_MUSICL_INSTMT_PFSNL,
               LMT_OTHR_STRCT_1,
               LMT_OTHR_STRCT_2,
               LMT_OTHR_STRCT_3,
               LMT_OTHR_STRCT_4,
               LMT_BLDG_ADDNS,
               LMT_SCRTYS,
               LMT_SLVRW,
               LMT_STAMPS,
               ACCTG_DT,
               RISK_UNIT_PSTL_CD,
               RISK_UNIT_CSTRN_TYP,
               RISK_UNIT_NUM_FMLYS,
               RISK_UNIT_CONDO_FLG,
               RISK_UNIT_HEAT_TYP,
               RISK_UNIT_YR_OF_CSTRN,
               RISK_UNIT_LEAD_XCLSN_FLG,
               RISK_UNIT_DELEADED_FLG,
               RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               PTCTV_DVC_BRGLR_ALM_TYP,
               PTCTV_DVC_FIRE_ALM_TYP,
               PTCTV_DVC_SPRNKLR_TYP,
               PTCTV_DVC_CERT_FLG,
               PTCTV_DVC_PCT_DSCNT,
               RISK_UNIT_BUS_USE_FLG,
               BUS_CLAS,
               DAYCARE_NUM_OF_PRSNS,
               INCDTL_OFC_PRMSES_CD,
               INCDTL_OFC_OTHR_THAN_INSD_CD,
               EARTHQK_ZONE,
               EARTHQK_MSNRY_FLG,
               NAMD_STORM_BUYDOWN_OPT,
               NAMD_STORM_DDCTBL_OPT,
               BOAT_LEN,
               BOAT_YR_BLT,
               BOAT_USG,
               BOAT_EQPT,
               BOAT_MOTR_HP,
               BOAT_MOTR_YR_BLT,
               BOAT_TRLR_YR_BLT,
               WTRCRFT_LEN,
               WTRCRFT_MOTR_HP,
               WTRCRFT_NAVGN_FRM,
               WTRCRFT_NAVGN_TO,
               WTRCRFT_SPD,
               WTRCRFT_TYP,
               MOTORIZED_LAND_CNVYC_TYP,
               MOTORIZED_LAND_CNVYC_SPD,
               MOTORIZED_LAND_CNVYC_RACING_US,
               SNOWMOBILE_YR,
               SNOWMOBILE_ENGN_CC,
               RISK_UNIT_CUSTM_EQPT_FLG,
               RISK_UNIT_OPER_ACDT_FLG,
               WRKRS_COMP_NUM_OF_INSVNTS,
               WRKRS_COMP_NUM_OF_OUTSVNTS,
               ADDL_RSDNC_CT,
               VEH_CT,
               INCDTL_OCPNY_CT,
               INEXP_OPER_CT,
               UNINSD_MTRST_CVG_FLG,
               ADDL_RSDNC_CVG_FLG,
               ADDL_RSDNC_HO2470_CVG_FLG,
               BUS_PURST_CT,
               RV_CT_UMB_COV,
               UNLIC_RV_CT,
               RNTL_CT,
               SAILBOAT_25_CT,
               SAILBOAT_35_CT,
               PWRBOAT_15_50_CT,
               PWRBOAT_15_100_CT,
               PWRBOAT_15_150_CT,
               PWRBOAT_26_50_CT,
               PWRBOAT_26_100_CT,
               PWRBOAT_26_150_CT,
               PWRBOAT_26_225_CT,
               BLNKT_CVG_FLG,
               EARTHQK_ZONE2,
               WTRCRFT_LEN_C,
               WTRCRFT_MOTR_HRSPWR,
               BUS_PURST_PRMM,
               PSTL_CD,
               TERRTY_CD,
               BOSTON_DIST,
               FIRE_DIST,
               FIRE_DIST_EFF_DT,
               THOU_FT_FRM_HDRNT_FLG,
               FIVE_MILES_FRM_FIRE_DEPT_FLG,
               FIRE_PTCTN_CLAS,
               MILES_FRM_WTR,
               WTR_DSTNC_CD,
               WTR_DSTNC_FLG,
               STORM_SHUTTER_FLG,
               LEAD_PAINT_FLG,
               COML_ZONEG_FLG,
               STRCT_TYP,
               NUM_OF_STORIES,
               SQ_FT,
               HSE_STYL,
               NUM_OF_ACRES,
               YR_BLT,
               RPLMT_CST,
               NMD_STORM_AMT,
               DWLG_USE_OCPNY,
               OWNR_OCPYD_FLG,
               SALE_VCNT_RNTD_FLG,
               BUS_ACTVTYS_FLG,
               DAY_CARE_FLG,
               SCNDY_HME_FLG,
               PMRY_HME_INSD_FLG,
               CSTRN_TYP,
               SPCL_CSTRN_FLG,
               NUM_OF_FMLYS,
               NUM_IN_FIRE_DIV,
               NUM_OF_RSDNTS,
               ROOF_TYP,
               HME_PSTL_CD,
               HME_NUM_UNITS,
               HME_PRI_PROP_FLG,
               HME_RNTL_PROP_FLG,
               HME_UNDLYG_LMT,
               UNDLYG_POL_CD,
               UNDLYG_AUTO_POL_CO,
               UNDLYG_AUTO_POL_NUM,
               ADDL_VEH_CT,
               AUTO_POL_CRDT,
               YTHFL_OPER_SRCHG_FLG,
               YTHFL_OPER_SRCHG,
               YTHFL_OPER_SRCHG_CT,
               UNDLYG_PPTY_POL_CO,
               UNDLYG_PPTY_POL_NUM,
               ADDL_PPTY_CT,
               PPTY_POL_CRDT,
               UNDLYG_WTRCRFT_POL_CO,
               WTRCRFT_CT,
               ATTACH_PT,
               INSD_INCORP_FLG,
               RV_CT_UMB_PRODUCT,
               ASSIST_LVNG_FLG,
               AT_FLT_FLG,
               CLERICAL_EMPLOYEE_FLG,
               INCDNTL_OCC_FLG,
               HM_OFFICE_FLG,
               POOL_FLG,
               HM_SRVCS_FLG,
               SPA_FLG,
               TCHR_FLG,
               TRUST_FLG,
               UNDLYG_AUTO_POL_LMT,
               UNDLYG_PPTY_POL_LMT,
               PI_LIAB_CVG_FLG,
               UMB_OTHR_EFF_DT,
               UMB_OTHR_LMT,
               UMB_OTHR_LMT_2,
               UMB_PSTL_CD,
               UMB_NUM_OF_FMLYS,
               UMB_VEH_TYP_CD,
               UMB_OPER_DOB,
               UMB_VEH_OWNRSP_STAT,
               AUTO_UNDLYG_LMT,
               RV_TYP,
               WTRCRFT_BOAT_TYP,
               WTRCRFT_LNGTH,
               WTRCRFT_ENGINE_SIZE,
               ISO_MODULE,
               ISO_COMPANY_NUMBER,
               ISO_TRANSACTION_TYPE_CODE,
               ISO_ACCOUNTING_DATE,
               ISO_INCEPTION_DATE,
               ISO_TRANS_EFFECTIVE_DATE,
               ISO_TRANS_EXPIRATION_DATE,
               ISO_STATE_CODE,
               ISO_TERRITORY_CODE,
               ISO_ANNUAL_STMT_LOB_CODE,
               ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               ISO_EXCEPTION_CODE,
               ISO_POLICY_FORM_CODE,
               ISO_NUMBER_OF_FAMILIES_CODE,
               ISO_ORD_OR_LAW_COV_CODE,
               ISO_STATUS_CODE,
               ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               ISO_CONSTRUCTION_CODE,
               ISO_PROTECTION_CODE,
               ISO_MOLD_COVERAGE_CODE,
               ISO_DEDUCTIBLE_SIZE_CODE,
               ISO_YEAR_OF_CONSTRUCTION_CODE,
               ISO_BUILDING_AND_CONTENTS_CODE,
               ISO_EXPOSURE,
               ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               ISO_STATE_EXCEP_INDIC_CODE_I,
               ISO_ZIP_CODE,
               ISO_STATE_EXCEP_INDIC_CODE_II,
               ISO_STATE_EXCEP_INDIC_CODE_III,
               ISO_WINDTORM_HAIL_COV_IND_CD,
               ISO_COMP_PROG_EXCEP_INDIC,
               ISO_STATIS_PLAN_INDIC_CODE,
               ISO_PREMIUM_AMOUNT,
               ISO_PREMIUM_RECORD_ID,
               ISO_POSITIONS_FOR_COMPANY_USE,
               ISO_LOSS_SETTLE_IND_CODE,
               ISO_CLASSIFICATION_CODE,
               ISO_TYPE_OF_EQUAKE_COV,
               ISO_EQ_ATTACH_INDIC_CODE,
               ISO_ADD_EQ_EXPOSURE,
               ISO_ENV_IMP_COV_CODE,
               ISO_UMB_ATTACH_HO_PL,
               ISO_UMB_ATTACH_PERS_AUTO,
               ISO_UMB_UNDERLY_HO_PL_INDIC,
               ISO_UMB_UNDERLY_AUTO_INDIC,
               ISO_UMB_RISK_PROFILE,
               ISO_LIMIT_OF_LIAB_CODE,
               ISO_UMB_UNINS_UNDERINS_LLC,
               ISO_UMB_SELF_INS_RETENTION,
               EXISTS_PREF_SUPER_PREF_IND,
               EXISTS_OIL_SPILL_COV_IND,
               EXISTS_STATUS_COV_IND,
               EXISTS_COV_A_LMT_AMT,
               EXISTS_COV_B_LMT_AMT,
               EXISTS_COV_C_LMT_AMT,
               EXISTS_COV_D_LMT_AMT,
               EXISTS_COV_E_LMT_AMT,
               EXISTS_COV_F_LMT_AMT,
               EXISTS_COV_A_DED_AMT,
               EXISTS_COV_C_DED_AMT,
               EXISTS_POL_DED_AMT,
               EXISTS_MOLD_LMT_AMT,
               EXISTS_MOLD_II_LMT_AMT,
               EXISTS_BUILD_ORD_LMT_AMT,
               EXISTS_BUILD_ADD1_COV_IND,
               EXISTS_RNTL_OTHR_COV_IND,
               EXISTS_WIND_HAIL_DED_AMT,
               EXISTS_PERS_PROP_COV_IND,
               EXISTS_FRAUD_COV_IND,
               EXISTS_PP_RC_COV_IND,
               EXISTS_INC_LMT_C_COV_IND,
               EXISTS_BUILD_ADDC_COV_IND,
               EXISTS_BUS_PUR_C_COV_IND,
               EXISTS_COVA_SPCL_COV_IND,
               EXISTS_FARM_LIABC_COV_IND,
               EXISTS_INC_OCP_OC_COV_IND,
               EXISTS_INC_OCPNCY_COV_IND,
               EXISTS_LOSS_ASMTC_COV_IND,
               EXISTS_PI_COV_IND_COV_IND,
               EXISTS_RES_REN_C_COV_IND,
               EXISTS_RES_REN_TH_COV_IND,
               EXISTS_SINK_COV_IND,
               EXISTS_SPCL_CMPTR_COV_IND,
               EXISTS_STRUC_RENC_COV_IND,
               EXISTS_THREE_FAM_COV_IND,
               CREATE_DT,
               CREATE_TS,
               CREATED_BY,
               BATCH_START_DT,
               BATCH_END_DT,
               RPRTG_PERIOD_START_DT,
               RPRTG_PERIOD_END_DT,
               IMPACT_RESIST_GLASS_FLG,
               HURRICANE_SHUTTERS_FLG,
               BCEG,
               ISO_PROTECTIVE_DEVICES,
               ISO_LOSS_HISTORY_CD,
               ISO_ROOF_SURFACE_LOSS_CD,
               ISO_ROOF_INSTALL_YR_CD,
               ISO_RISK_IND_CD,
               ISO_RISK_IND_CD_II
          FROM S10_ISO_PLOTA_EXTRACT_NE
       )
      -- select * from SQ_S10_ISO_PLOTA_EXTRACT_NE1 limit 5       
       ,
Exp_Input_DW as (
        -- writting query for expression function
SELECT source_record_id,
               S10_ISO_PLOTA_EXTRACT_NE_ID AS S10_ISO_PLOTA_EXTRACT_ID,
               POL_STAT_PREM_PK,
               POL_STAT_UNIT_PK,
               POL_STAT_PK,
               POL_PK,
               CVG_PK,
               PCAT_UNIT_PK,
               LCTN_PK,
               ORIG_CVG_PK,
               ORIG_POL_PK,
               POL_STATE_VRSN,
               POL_STATE_EFF_DT,
               SRC_POL_ID,
               POL_NUM,
               POL_SEQ_NUM,
               SRC_RISK_UNIT_ID,
               SRC_STAT_PREMIUM_ID,
               SRC_STAT_UNIT_ID,
               SRC_STAT_HEADER_ID,
               SRC_CVG_ID,
               STATE_CODE,
               SQ_S10_ISO_PLOTA_EXTRACT_NE1.CUR_TERM_EFF_DT,
               CUR_TERM_XPTN_DT,
               PRI_ADDR_PSTL_CD,
               UNIT_TYPE,
               SRC_DATA_SET_NBR,
               ORIG_POL_STATE_VRSN,
               STAT_TRAN_CODE,
               OOS_TRANS_F,
               REAPPLY_TRANS_F,
               BACKOUT_TRANS_F,
               PREMIUM_SOURCE_C,
               PREMIUM_SOURCE_T,
               PREMIUM_SOURCE_SEQ,
               NULL AS CLASS_CODE,
               TERRITORY_ID,
               PREM_COVERAGE_M,
               LIMIT_AMT1,
               LIMIT_AMT2,
               NULL AS LIMIT_AMT3,
               DED_AMT1,
               NULL AS DED_AMT2,
               NULL AS DED_AMT3,
               PREM_WRIT_M,
               CNTRB_TO_PREMIUM_F,
               RCD_ACTN_TYP,
               DATA_DT,
               PRCSG_GRP_CD,
               POL_STATE_STAT,
               CO_CD,
               CO_ID,
               CO_NAM,
               SRC_CO_ID,
               CORP_CD,
               CORP_NAM,
               SRC_CORP_ID,
               PROD_CD,
               PROD_ID,
               PROD_NAM,
               SRC_PROD_ID,
               LOB_CD,
               LOB_NAM,
               RCD_TYP,
               SRC_CD,
               LMT_1_DESC,
               LMT_1_AMT,
               LMT_2_DESC,
               LMT_2_AMT,
               NULL AS LMT_3_DESC,
               NULL AS LMT_3_AMT,
               DDCTBL_1_DESC,
               DDCTBL_1_AMT,
               NULL AS DDCTBL_2_DESC,
               NULL AS DDCTBL_2_AMT,
               NULL AS DDCTBL_3_DESC,
               NULL AS DDCTBL_3_AMT,
               BUS_PPTY_INCRSD_LMT,
               LMT_BCL,
               LMT_BOAT,
               LMT_BOAT_EQPT,
               LMT_BOAT_MOTR,
               LMT_BOAT_TRLR,
               LMT_CAMERA,
               LMT_COINS,
               LMT_ELTRNCS,
               LMT_ELTRNCS_OFF_PRMSES,
               LMT_ELTRNCS_ON_PRMSES,
               LMT_ELTRNCS_IN_VEH,
               LMT_ELTRNCS_OUT_VEH,
               LMT_FINE_ART,
               LMT_FINE_ART_EXCLDG_BRKAGE,
               LMT_FINE_ART_INCLG_BRKAGE,
               NULL AS LMT_FINE_ART_DRBL,
               NULL AS LMT_FINE_ART_FRAGILE,
               NULL AS LMT_FINE_ART_PPR,
               LMT_FURS,
               LMT_GOLF,
               LMT_GOLF_CART,
               LMT_GUNS,
               LMT_JEWELERY,
               LMT_JEWELERY_IN_VALT,
               LMT_JEWELERY_NO_VALT,
               LMT_MONEY,
               LMT_MUSICL_INSTMT,
               LMT_MUSICL_INSTMT_NON_PFSNL,
               LMT_MUSICL_INSTMT_PFSNL,
               LMT_OTHR_STRCT_1,
               LMT_OTHR_STRCT_2,
               LMT_OTHR_STRCT_3,
               LMT_OTHR_STRCT_4,
               LMT_BLDG_ADDNS,
               LMT_SCRTYS,
               LMT_SLVRW,
               LMT_STAMPS,
               ACCTG_DT,
               NULL AS RISK_UNIT_VAL,
               RISK_UNIT_PSTL_CD,
               RISK_UNIT_CSTRN_TYP,
               RISK_UNIT_NUM_FMLYS,
               RISK_UNIT_CONDO_FLG,
               RISK_UNIT_HEAT_TYP,
               RISK_UNIT_YR_OF_CSTRN,
               RISK_UNIT_LEAD_XCLSN_FLG,
               RISK_UNIT_DELEADED_FLG,
               RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               PTCTV_DVC_BRGLR_ALM_TYP,
               PTCTV_DVC_FIRE_ALM_TYP,
               PTCTV_DVC_SPRNKLR_TYP,
               PTCTV_DVC_CERT_FLG,
               PTCTV_DVC_PCT_DSCNT,
               RISK_UNIT_BUS_USE_FLG,
               BUS_CLAS,
               DAYCARE_NUM_OF_PRSNS,
               INCDTL_OFC_PRMSES_CD,
               INCDTL_OFC_OTHR_THAN_INSD_CD,
               EARTHQK_ZONE,
               EARTHQK_MSNRY_FLG,
               NAMD_STORM_BUYDOWN_OPT,
               NAMD_STORM_DDCTBL_OPT,
               NULL AS FUEL_LBLTY_PMRY_LCTN_NUM_A_TNK,
               NULL AS FUEL_LBLTY_LCTN_1_NUM_A_TNKS,
               NULL AS FUEL_LBLTY_LCTN_2_NUM_A_TNKS,
               NULL AS FUEL_LBLTY_LCTN_3_NUM_A_TNKS,
               NULL AS FUEL_LBLTY_LCTN_4_NUM_A_TNKS,
               NULL AS FUEL_LBLTY_PMRY_LCTN_NUM_B_TNK,
               NULL AS FUEL_LBLTY_LCTN_1_NUM_B_TNKS,
               NULL AS FUEL_LBLTY_LCTN_2_NUM_B_TNKS,
               NULL AS FUEL_LBLTY_LCTN_3_NUM_B_TNKS,
               NULL AS FUEL_LBLTY_LCTN_4_NUM_B_TNKS,
               NULL AS FUEL_LBLTY_PMRY_LCTN_NUM_C_TNK,
               NULL AS FUEL_LBLTY_LCTN_1_NUM_C_TNKS,
               NULL AS FUEL_LBLTY_LCTN_2_NUM_C_TNKS,
               NULL AS FUEL_LBLTY_LCTN_3_NUM_C_TNKS,
               NULL AS FUEL_LBLTY_LCTN_4_NUM_C_TNKS,
               NULL AS FUEL_LBLTY_PMRY_LCTN_NUM_D_TNK,
               NULL AS FUEL_LBLTY_LCTN_1_NUM_D_TNKS,
               NULL AS FUEL_LBLTY_LCTN_2_NUM_D_TNKS,
               NULL AS FUEL_LBLTY_LCTN_3_NUM_D_TNKS,
               NULL AS FUEL_LBLTY_LCTN_4_NUM_D_TNKS,
               BOAT_LEN,
               BOAT_YR_BLT,
               BOAT_USG,
               BOAT_EQPT,
               BOAT_MOTR_HP,
               BOAT_MOTR_YR_BLT,
               BOAT_TRLR_YR_BLT,
               WTRCRFT_LEN,
               WTRCRFT_MOTR_HP,
               WTRCRFT_NAVGN_FRM,
               WTRCRFT_NAVGN_TO,
               WTRCRFT_SPD,
               WTRCRFT_TYP,
               MOTORIZED_LAND_CNVYC_TYP,
               MOTORIZED_LAND_CNVYC_SPD,
               MOTORIZED_LAND_CNVYC_RACING_US,
               SNOWMOBILE_YR,
               SNOWMOBILE_ENGN_CC,
               RISK_UNIT_CUSTM_EQPT_FLG,
               RISK_UNIT_OPER_ACDT_FLG,
               WRKRS_COMP_NUM_OF_INSVNTS,
               WRKRS_COMP_NUM_OF_OUTSVNTS,
               ADDL_RSDNC_CT,
               VEH_CT,
               INCDTL_OCPNY_CT,
               INEXP_OPER_CT,
               UNINSD_MTRST_CVG_FLG,
               ADDL_RSDNC_CVG_FLG,
               ADDL_RSDNC_HO2470_CVG_FLG,
               BUS_PURST_CT,
               RV_CT_UMB_COV,
               UNLIC_RV_CT,
               RNTL_CT,
               SAILBOAT_25_CT,
               SAILBOAT_35_CT,
               PWRBOAT_15_50_CT,
               PWRBOAT_15_100_CT,
               PWRBOAT_15_150_CT,
               PWRBOAT_26_50_CT,
               PWRBOAT_26_100_CT,
               PWRBOAT_26_150_CT,
               PWRBOAT_26_225_CT,
               BLNKT_CVG_FLG,
               EARTHQK_ZONE2,
               NULL AS LOC_OIL_TANK,
               WTRCRFT_LEN_C,
               WTRCRFT_MOTR_HRSPWR,
               NULL AS LOC_OIL_TANK2,
               NULL AS LOC_OIL_TANK3,
               NULL AS LOC_OIL_TANK4,
               NULL AS LOC_OIL_TANK5,
               NULL AS LOC_OIL_TANK6,
               BUS_PURST_PRMM,
               PSTL_CD,
               TERRTY_CD,
               BOSTON_DIST,
               FIRE_DIST,
               FIRE_DIST_EFF_DT,
               THOU_FT_FRM_HDRNT_FLG,
               FIVE_MILES_FRM_FIRE_DEPT_FLG,
               FIRE_PTCTN_CLAS,
               MILES_FRM_WTR,
               WTR_DSTNC_CD,
               WTR_DSTNC_FLG,
               STORM_SHUTTER_FLG,
               LEAD_PAINT_FLG,
               COML_ZONEG_FLG,
               STRCT_TYP,
               NUM_OF_STORIES,
               NULL AS NUM_OF_STORIES_SRC,
               SQ_FT,
               NULL AS SQ_FT_SRC,
               HSE_STYL,
               NULL AS HSE_STYL_SRC,
               NULL AS NUM_OF_ACRES,
               YR_BLT,
               NULL AS YR_PRCHD,
               NULL AS PRCHS_PRC,
               NULL AS MKT_VAL,
               RPLMT_CST,
               NMD_STORM_AMT,
               DWLG_USE_OCPNY,
               OWNR_OCPYD_FLG,
               SALE_VCNT_RNTD_FLG,
               BUS_ACTVTYS_FLG,
               DAY_CARE_FLG,
               SCNDY_HME_FLG,
               PMRY_HME_INSD_FLG,
               CSTRN_TYP,
               SPCL_CSTRN_FLG,
               NUM_OF_FMLYS,
               NUM_IN_FIRE_DIV,
               NUM_OF_RSDNTS,
               ROOF_TYP,
               NULL AS HEATG_SYS,
               NULL AS HEATG_SYS_FUEL_TYP,
               HME_PSTL_CD,
               HME_NUM_UNITS,
               HME_PRI_PROP_FLG,
               HME_RNTL_PROP_FLG,
               HME_UNDLYG_LMT,
               UNDLYG_POL_CD,
               UNDLYG_AUTO_POL_CO,
               UNDLYG_AUTO_POL_NUM,
               ADDL_VEH_CT,
               AUTO_POL_CRDT,
               YTHFL_OPER_SRCHG_FLG,
               YTHFL_OPER_SRCHG,
               YTHFL_OPER_SRCHG_CT,
               UNDLYG_PPTY_POL_CO,
               UNDLYG_PPTY_POL_NUM,
               ADDL_PPTY_CT,
               PPTY_POL_CRDT,
               UNDLYG_WTRCRFT_POL_CO,
               WTRCRFT_CT,
               ATTACH_PT,
               INSD_INCORP_FLG,
               RV_CT_UMB_PRODUCT,
               NULL AS QTED_PRMM_NE,
               ASSIST_LVNG_FLG,
               AT_FLT_FLG,
               CLERICAL_EMPLOYEE_FLG,
               INCDNTL_OCC_FLG,
               HM_OFFICE_FLG,
               POOL_FLG,
               HM_SRVCS_FLG,
               SPA_FLG,
               TCHR_FLG,
               TRUST_FLG,
               NULL AS QTED_PRMM_PAL,
               UNDLYG_AUTO_POL_LMT,
               UNDLYG_PPTY_POL_LMT,
               PI_LIAB_CVG_FLG,
               UMB_OTHR_EFF_DT,
               UMB_OTHR_LMT,
               UMB_OTHR_LMT_2,
               UMB_PSTL_CD,
               UMB_NUM_OF_FMLYS,
               UMB_VEH_TYP_CD,
               UMB_OPER_DOB,
               UMB_VEH_OWNRSP_STAT,
               AUTO_UNDLYG_LMT,
               RV_TYP,
               WTRCRFT_BOAT_TYP,
               WTRCRFT_LNGTH,
               WTRCRFT_ENGINE_SIZE,
               ISO_MODULE,
               ISO_COMPANY_NUMBER,
               ISO_TRANSACTION_TYPE_CODE,
               ISO_ACCOUNTING_DATE,
               ISO_INCEPTION_DATE,
               ISO_TRANS_EFFECTIVE_DATE,
               ISO_TRANS_EXPIRATION_DATE,
               ISO_STATE_CODE,
               ISO_TERRITORY_CODE,
               ISO_ANNUAL_STMT_LOB_CODE,
               ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               ISO_EXCEPTION_CODE,
               ISO_POLICY_FORM_CODE,
               ISO_NUMBER_OF_FAMILIES_CODE,
               ISO_ORD_OR_LAW_COV_CODE,
               ISO_STATUS_CODE,
               ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               ISO_CONSTRUCTION_CODE,
               ISO_PROTECTION_CODE,
               ISO_MOLD_COVERAGE_CODE,
               ISO_DEDUCTIBLE_SIZE_CODE,
               ISO_YEAR_OF_CONSTRUCTION_CODE,
               ISO_BUILDING_AND_CONTENTS_CODE,
               ISO_EXPOSURE,
               ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               ISO_STATE_EXCEP_INDIC_CODE_I,
               ISO_ZIP_CODE,
               ISO_STATE_EXCEP_INDIC_CODE_II,
               ISO_STATE_EXCEP_INDIC_CODE_III,
               ISO_WINDTORM_HAIL_COV_IND_CD,
               ISO_COMP_PROG_EXCEP_INDIC,
               ISO_STATIS_PLAN_INDIC_CODE,
               ISO_PREMIUM_AMOUNT,
               ISO_PREMIUM_RECORD_ID,
               ISO_POSITIONS_FOR_COMPANY_USE,
               ISO_LOSS_SETTLE_IND_CODE,
               ISO_CLASSIFICATION_CODE,
               ISO_TYPE_OF_EQUAKE_COV,
               ISO_EQ_ATTACH_INDIC_CODE,
               ISO_ADD_EQ_EXPOSURE,
               ISO_ENV_IMP_COV_CODE,
               ISO_UMB_ATTACH_HO_PL,
               ISO_UMB_ATTACH_PERS_AUTO,
               ISO_UMB_UNDERLY_HO_PL_INDIC,
               ISO_UMB_UNDERLY_AUTO_INDIC,
               ISO_UMB_RISK_PROFILE,
               ISO_LIMIT_OF_LIAB_CODE,
               ISO_UMB_UNINS_UNDERINS_LLC,
               ISO_UMB_SELF_INS_RETENTION,
               BATCH_START_DT,
               BATCH_END_DT,
               RPRTG_PERIOD_START_DT,
               RPRTG_PERIOD_END_DT,
               BCEG,
               IMPACT_RESIST_GLASS_FLG,
               HURRICANE_SHUTTERS_FLG,
               ISO_PROTECTIVE_DEVICES,
               ISO_LOSS_HISTORY_CD,
               ISO_ROOF_SURFACE_LOSS_CD,
               ISO_ROOF_INSTALL_YR_CD,
               ISO_RISK_IND_CD,
               ISO_RISK_IND_CD_II,
               SYSDATE() AS CREATE_DT,
               SYSDATE() AS CREATE_TS,
               'm_ISO_BURRPT_PLOTA_PREM_HO_BUILD_NE' AS CREATED_BY
          FROM SQ_S10_ISO_PLOTA_EXTRACT_NE1
       )

      -- select * from Exp_Input_DW limit 5         
       ,
Exp_Inputs_before_agg_DW as (
        -- writting query for expression function
SELECT Exp_Input_DW.source_record_id,
               Exp_Input_DW.S10_ISO_PLOTA_EXTRACT_ID,
               Exp_Input_DW.POL_STAT_PREM_PK,
               Exp_Input_DW.POL_STAT_UNIT_PK,
               Exp_Input_DW.POL_STAT_PK,
               Exp_Input_DW.POL_PK,
               Exp_Input_DW.CVG_PK,
               Exp_Input_DW.PCAT_UNIT_PK,
               Exp_Input_DW.LCTN_PK,
               Exp_Input_DW.ORIG_CVG_PK,
               Exp_Input_DW.ORIG_POL_PK,
               Exp_Input_DW.POL_STATE_VRSN,
               Exp_Input_DW.POL_STATE_EFF_DT,
               Exp_Input_DW.SRC_POL_ID,
               Exp_Input_DW.POL_NUM,
               Exp_Input_DW.POL_SEQ_NUM,
               Exp_Input_DW.SRC_RISK_UNIT_ID,
               Exp_Input_DW.SRC_STAT_PREMIUM_ID,
               Exp_Input_DW.SRC_STAT_UNIT_ID,
               Exp_Input_DW.SRC_STAT_HEADER_ID,
               Exp_Input_DW.SRC_CVG_ID,
               Exp_Input_DW.STATE_CODE,
               Exp_Input_DW.CUR_TERM_EFF_DT,
               Exp_Input_DW.CUR_TERM_XPTN_DT,
               Exp_Input_DW.PRI_ADDR_PSTL_CD,
               Exp_Input_DW.UNIT_TYPE,
               Exp_Input_DW.SRC_DATA_SET_NBR,
               Exp_Input_DW.ORIG_POL_STATE_VRSN,
               Exp_Input_DW.STAT_TRAN_CODE,
               Exp_Input_DW.OOS_TRANS_F,
               Exp_Input_DW.REAPPLY_TRANS_F,
               Exp_Input_DW.BACKOUT_TRANS_F,
               Exp_Input_DW.PREMIUM_SOURCE_C,
               Exp_Input_DW.PREMIUM_SOURCE_T,
               Exp_Input_DW.PREMIUM_SOURCE_SEQ,
               Exp_Input_DW.CLASS_CODE,
               Exp_Input_DW.TERRITORY_ID,
               Exp_Input_DW.PREM_COVERAGE_M,
               Exp_Input_DW.LIMIT_AMT1,
               Exp_Input_DW.LIMIT_AMT2,
               Exp_Input_DW.LIMIT_AMT3,
               Exp_Input_DW.DED_AMT1,
               Exp_Input_DW.DED_AMT2,
               Exp_Input_DW.DED_AMT3,
               Exp_Input_DW.PREM_WRIT_M,
               Exp_Input_DW.CNTRB_TO_PREMIUM_F,
               Exp_Input_DW.RCD_ACTN_TYP,
               Exp_Input_DW.DATA_DT,
               Exp_Input_DW.PRCSG_GRP_CD,
               Exp_Input_DW.POL_STATE_STAT,
               Exp_Input_DW.CO_CD,
               Exp_Input_DW.CO_ID,
               Exp_Input_DW.CO_NAM,
               Exp_Input_DW.SRC_CO_ID,
               Exp_Input_DW.CORP_CD,
               Exp_Input_DW.CORP_NAM,
               Exp_Input_DW.SRC_CORP_ID,
               Exp_Input_DW.PROD_CD,
               Exp_Input_DW.PROD_ID,
               Exp_Input_DW.PROD_NAM,
               Exp_Input_DW.SRC_PROD_ID,
               Exp_Input_DW.LOB_CD,
               Exp_Input_DW.LOB_NAM,
               Exp_Input_DW.RCD_TYP,
               Exp_Input_DW.SRC_CD,
               Exp_Input_DW.LMT_1_DESC,
               Exp_Input_DW.LMT_1_AMT,
               Exp_Input_DW.LMT_2_DESC,
               Exp_Input_DW.LMT_2_AMT,
               Exp_Input_DW.LMT_3_DESC,
               Exp_Input_DW.LMT_3_AMT,
               Exp_Input_DW.DDCTBL_1_DESC,
               Exp_Input_DW.DDCTBL_1_AMT,
               Exp_Input_DW.DDCTBL_2_DESC,
               Exp_Input_DW.DDCTBL_2_AMT,
               Exp_Input_DW.DDCTBL_3_DESC,
               Exp_Input_DW.DDCTBL_3_AMT,
               Exp_Input_DW.BUS_PPTY_INCRSD_LMT,
               Exp_Input_DW.LMT_BCL,
               Exp_Input_DW.LMT_BOAT,
               Exp_Input_DW.LMT_BOAT_EQPT,
               Exp_Input_DW.LMT_BOAT_MOTR,
               Exp_Input_DW.LMT_BOAT_TRLR,
               Exp_Input_DW.LMT_CAMERA,
               Exp_Input_DW.LMT_COINS,
               Exp_Input_DW.LMT_ELTRNCS,
               Exp_Input_DW.LMT_ELTRNCS_OFF_PRMSES,
               Exp_Input_DW.LMT_ELTRNCS_ON_PRMSES,
               Exp_Input_DW.LMT_ELTRNCS_IN_VEH,
               Exp_Input_DW.LMT_ELTRNCS_OUT_VEH,
               Exp_Input_DW.LMT_FINE_ART,
               Exp_Input_DW.LMT_FINE_ART_EXCLDG_BRKAGE,
               Exp_Input_DW.LMT_FINE_ART_INCLG_BRKAGE,
               Exp_Input_DW.LMT_FINE_ART_DRBL,
               Exp_Input_DW.LMT_FINE_ART_FRAGILE,
               Exp_Input_DW.LMT_FINE_ART_PPR,
               Exp_Input_DW.LMT_FURS,
               Exp_Input_DW.LMT_GOLF,
               Exp_Input_DW.LMT_GOLF_CART,
               Exp_Input_DW.LMT_GUNS,
               Exp_Input_DW.LMT_JEWELERY,
               Exp_Input_DW.LMT_JEWELERY_IN_VALT,
               Exp_Input_DW.LMT_JEWELERY_NO_VALT,
               Exp_Input_DW.LMT_MONEY,
               Exp_Input_DW.LMT_MUSICL_INSTMT,
               Exp_Input_DW.LMT_MUSICL_INSTMT_NON_PFSNL,
               Exp_Input_DW.LMT_MUSICL_INSTMT_PFSNL,
               Exp_Input_DW.LMT_OTHR_STRCT_1,
               Exp_Input_DW.LMT_OTHR_STRCT_2,
               Exp_Input_DW.LMT_OTHR_STRCT_3,
               Exp_Input_DW.LMT_OTHR_STRCT_4,
               Exp_Input_DW.LMT_BLDG_ADDNS,
               Exp_Input_DW.LMT_SCRTYS,
               Exp_Input_DW.LMT_SLVRW,
               Exp_Input_DW.LMT_STAMPS,
               Exp_Input_DW.ACCTG_DT,
               Exp_Input_DW.RISK_UNIT_VAL,
               Exp_Input_DW.RISK_UNIT_PSTL_CD,
               Exp_Input_DW.RISK_UNIT_CSTRN_TYP,
               Exp_Input_DW.RISK_UNIT_NUM_FMLYS,
               Exp_Input_DW.RISK_UNIT_CONDO_FLG,
               Exp_Input_DW.RISK_UNIT_HEAT_TYP,
               Exp_Input_DW.RISK_UNIT_YR_OF_CSTRN,
               Exp_Input_DW.RISK_UNIT_LEAD_XCLSN_FLG,
               Exp_Input_DW.RISK_UNIT_DELEADED_FLG,
               Exp_Input_DW.RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               Exp_Input_DW.PTCTV_DVC_BRGLR_ALM_TYP,
               Exp_Input_DW.PTCTV_DVC_FIRE_ALM_TYP,
               Exp_Input_DW.PTCTV_DVC_SPRNKLR_TYP,
               Exp_Input_DW.PTCTV_DVC_CERT_FLG,
               Exp_Input_DW.PTCTV_DVC_PCT_DSCNT,
               Exp_Input_DW.RISK_UNIT_BUS_USE_FLG,
               Exp_Input_DW.BUS_CLAS,
               Exp_Input_DW.DAYCARE_NUM_OF_PRSNS,
               Exp_Input_DW.INCDTL_OFC_PRMSES_CD,
               Exp_Input_DW.INCDTL_OFC_OTHR_THAN_INSD_CD,
               Exp_Input_DW.EARTHQK_ZONE,
               Exp_Input_DW.EARTHQK_MSNRY_FLG,
               Exp_Input_DW.NAMD_STORM_BUYDOWN_OPT,
               Exp_Input_DW.NAMD_STORM_DDCTBL_OPT,
               Exp_Input_DW.FUEL_LBLTY_PMRY_LCTN_NUM_A_TNK,
               Exp_Input_DW.FUEL_LBLTY_LCTN_1_NUM_A_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_2_NUM_A_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_3_NUM_A_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_4_NUM_A_TNKS,
               Exp_Input_DW.FUEL_LBLTY_PMRY_LCTN_NUM_B_TNK,
               Exp_Input_DW.FUEL_LBLTY_LCTN_1_NUM_B_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_2_NUM_B_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_3_NUM_B_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_4_NUM_B_TNKS,
               Exp_Input_DW.FUEL_LBLTY_PMRY_LCTN_NUM_C_TNK,
               Exp_Input_DW.FUEL_LBLTY_LCTN_1_NUM_C_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_2_NUM_C_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_3_NUM_C_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_4_NUM_C_TNKS,
               Exp_Input_DW.FUEL_LBLTY_PMRY_LCTN_NUM_D_TNK,
               Exp_Input_DW.FUEL_LBLTY_LCTN_1_NUM_D_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_2_NUM_D_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_3_NUM_D_TNKS,
               Exp_Input_DW.FUEL_LBLTY_LCTN_4_NUM_D_TNKS,
               Exp_Input_DW.BOAT_LEN,
               Exp_Input_DW.BOAT_YR_BLT,
               Exp_Input_DW.BOAT_USG,
               Exp_Input_DW.BOAT_EQPT,
               Exp_Input_DW.BOAT_MOTR_HP,
               Exp_Input_DW.BOAT_MOTR_YR_BLT,
               Exp_Input_DW.BOAT_TRLR_YR_BLT,
               Exp_Input_DW.WTRCRFT_LEN,
               Exp_Input_DW.WTRCRFT_MOTR_HP,
               Exp_Input_DW.WTRCRFT_NAVGN_FRM,
               Exp_Input_DW.WTRCRFT_NAVGN_TO,
               Exp_Input_DW.WTRCRFT_SPD,
               Exp_Input_DW.WTRCRFT_TYP,
               Exp_Input_DW.MOTORIZED_LAND_CNVYC_TYP,
               Exp_Input_DW.MOTORIZED_LAND_CNVYC_SPD,
               Exp_Input_DW.MOTORIZED_LAND_CNVYC_RACING_US,
               Exp_Input_DW.SNOWMOBILE_YR,
               Exp_Input_DW.SNOWMOBILE_ENGN_CC,
               Exp_Input_DW.RISK_UNIT_CUSTM_EQPT_FLG,
               Exp_Input_DW.RISK_UNIT_OPER_ACDT_FLG,
               Exp_Input_DW.WRKRS_COMP_NUM_OF_INSVNTS,
               Exp_Input_DW.WRKRS_COMP_NUM_OF_OUTSVNTS,
               Exp_Input_DW.ADDL_RSDNC_CT,
               Exp_Input_DW.VEH_CT,
               Exp_Input_DW.INCDTL_OCPNY_CT,
               Exp_Input_DW.INEXP_OPER_CT,
               Exp_Input_DW.UNINSD_MTRST_CVG_FLG,
               Exp_Input_DW.ADDL_RSDNC_CVG_FLG,
               Exp_Input_DW.ADDL_RSDNC_HO2470_CVG_FLG,
               Exp_Input_DW.BUS_PURST_CT,
               Exp_Input_DW.RV_CT_UMB_COV,
               Exp_Input_DW.UNLIC_RV_CT,
               Exp_Input_DW.RNTL_CT,
               Exp_Input_DW.SAILBOAT_25_CT,
               Exp_Input_DW.SAILBOAT_35_CT,
               Exp_Input_DW.PWRBOAT_15_50_CT,
               Exp_Input_DW.PWRBOAT_15_100_CT,
               Exp_Input_DW.PWRBOAT_15_150_CT,
               Exp_Input_DW.PWRBOAT_26_50_CT,
               Exp_Input_DW.PWRBOAT_26_100_CT,
               Exp_Input_DW.PWRBOAT_26_150_CT,
               Exp_Input_DW.PWRBOAT_26_225_CT,
               Exp_Input_DW.BLNKT_CVG_FLG,
               Exp_Input_DW.EARTHQK_ZONE2,
               Exp_Input_DW.LOC_OIL_TANK,
               Exp_Input_DW.WTRCRFT_LEN_C,
               Exp_Input_DW.WTRCRFT_MOTR_HRSPWR,
               Exp_Input_DW.LOC_OIL_TANK2,
               Exp_Input_DW.LOC_OIL_TANK3,
               Exp_Input_DW.LOC_OIL_TANK4,
               Exp_Input_DW.LOC_OIL_TANK5,
               Exp_Input_DW.LOC_OIL_TANK6,
               Exp_Input_DW.BUS_PURST_PRMM,
               Exp_Input_DW.PSTL_CD,
               Exp_Input_DW.TERRTY_CD,
               Exp_Input_DW.BOSTON_DIST,
               Exp_Input_DW.FIRE_DIST,
               Exp_Input_DW.FIRE_DIST_EFF_DT,
               Exp_Input_DW.THOU_FT_FRM_HDRNT_FLG,
               Exp_Input_DW.FIVE_MILES_FRM_FIRE_DEPT_FLG,
               Exp_Input_DW.FIRE_PTCTN_CLAS,
               Exp_Input_DW.MILES_FRM_WTR,
               Exp_Input_DW.WTR_DSTNC_CD,
               Exp_Input_DW.WTR_DSTNC_FLG,
               Exp_Input_DW.STORM_SHUTTER_FLG,
               Exp_Input_DW.LEAD_PAINT_FLG,
               Exp_Input_DW.COML_ZONEG_FLG,
               Exp_Input_DW.STRCT_TYP,
               Exp_Input_DW.NUM_OF_STORIES,
               Exp_Input_DW.NUM_OF_STORIES_SRC,
               Exp_Input_DW.SQ_FT,
               Exp_Input_DW.SQ_FT_SRC,
               Exp_Input_DW.HSE_STYL,
               Exp_Input_DW.HSE_STYL_SRC,
               Exp_Input_DW.NUM_OF_ACRES,
               Exp_Input_DW.YR_BLT,
               Exp_Input_DW.YR_PRCHD,
               Exp_Input_DW.PRCHS_PRC,
               Exp_Input_DW.MKT_VAL,
               Exp_Input_DW.RPLMT_CST,
               Exp_Input_DW.NMD_STORM_AMT,
               Exp_Input_DW.DWLG_USE_OCPNY,
               Exp_Input_DW.OWNR_OCPYD_FLG,
               Exp_Input_DW.SALE_VCNT_RNTD_FLG,
               Exp_Input_DW.BUS_ACTVTYS_FLG,
               Exp_Input_DW.DAY_CARE_FLG,
               Exp_Input_DW.SCNDY_HME_FLG,
               Exp_Input_DW.PMRY_HME_INSD_FLG,
               Exp_Input_DW.CSTRN_TYP,
               Exp_Input_DW.SPCL_CSTRN_FLG,
               Exp_Input_DW.NUM_OF_FMLYS,
               Exp_Input_DW.NUM_IN_FIRE_DIV,
               Exp_Input_DW.NUM_OF_RSDNTS,
               Exp_Input_DW.ROOF_TYP,
               Exp_Input_DW.HEATG_SYS,
               Exp_Input_DW.HEATG_SYS_FUEL_TYP,
               Exp_Input_DW.HME_PSTL_CD,
               Exp_Input_DW.HME_NUM_UNITS,
               Exp_Input_DW.HME_PRI_PROP_FLG,
               Exp_Input_DW.HME_RNTL_PROP_FLG,
               Exp_Input_DW.HME_UNDLYG_LMT,
               Exp_Input_DW.UNDLYG_POL_CD,
               Exp_Input_DW.UNDLYG_AUTO_POL_CO,
               Exp_Input_DW.UNDLYG_AUTO_POL_NUM,
               Exp_Input_DW.ADDL_VEH_CT,
               Exp_Input_DW.AUTO_POL_CRDT,
               Exp_Input_DW.YTHFL_OPER_SRCHG_FLG,
               Exp_Input_DW.YTHFL_OPER_SRCHG,
               Exp_Input_DW.YTHFL_OPER_SRCHG_CT,
               Exp_Input_DW.UNDLYG_PPTY_POL_CO,
               Exp_Input_DW.UNDLYG_PPTY_POL_NUM,
               Exp_Input_DW.ADDL_PPTY_CT,
               Exp_Input_DW.PPTY_POL_CRDT,
               Exp_Input_DW.UNDLYG_WTRCRFT_POL_CO,
               Exp_Input_DW.WTRCRFT_CT,
               Exp_Input_DW.ATTACH_PT,
               Exp_Input_DW.INSD_INCORP_FLG,
               Exp_Input_DW.RV_CT_UMB_PRODUCT,
               Exp_Input_DW.QTED_PRMM_NE,
               Exp_Input_DW.ASSIST_LVNG_FLG,
               Exp_Input_DW.AT_FLT_FLG,
               Exp_Input_DW.CLERICAL_EMPLOYEE_FLG,
               Exp_Input_DW.INCDNTL_OCC_FLG,
               Exp_Input_DW.HM_OFFICE_FLG,
               Exp_Input_DW.POOL_FLG,
               Exp_Input_DW.HM_SRVCS_FLG,
               Exp_Input_DW.SPA_FLG,
               Exp_Input_DW.TCHR_FLG,
               Exp_Input_DW.TRUST_FLG,
               Exp_Input_DW.QTED_PRMM_PAL,
               Exp_Input_DW.UNDLYG_AUTO_POL_LMT,
               Exp_Input_DW.UNDLYG_PPTY_POL_LMT,
               Exp_Input_DW.PI_LIAB_CVG_FLG,
               Exp_Input_DW.UMB_OTHR_EFF_DT,
               Exp_Input_DW.UMB_OTHR_LMT,
               Exp_Input_DW.UMB_OTHR_LMT_2,
               Exp_Input_DW.UMB_PSTL_CD,
               Exp_Input_DW.UMB_NUM_OF_FMLYS,
               Exp_Input_DW.UMB_VEH_TYP_CD,
               Exp_Input_DW.UMB_OPER_DOB,
               Exp_Input_DW.UMB_VEH_OWNRSP_STAT,
               Exp_Input_DW.AUTO_UNDLYG_LMT,
               Exp_Input_DW.RV_TYP,
               Exp_Input_DW.WTRCRFT_BOAT_TYP,
               Exp_Input_DW.WTRCRFT_LNGTH,
               Exp_Input_DW.WTRCRFT_ENGINE_SIZE,
               Exp_Input_DW.ISO_MODULE,
               Exp_Input_DW.ISO_COMPANY_NUMBER,
               Exp_Input_DW.ISO_TRANSACTION_TYPE_CODE,
               Exp_Input_DW.ISO_ACCOUNTING_DATE,
               Exp_Input_DW.ISO_INCEPTION_DATE,
               Exp_Input_DW.ISO_TRANS_EFFECTIVE_DATE,
               Exp_Input_DW.ISO_TRANS_EXPIRATION_DATE,
               Exp_Input_DW.ISO_STATE_CODE,
               Exp_Input_DW.ISO_TERRITORY_CODE,
               Exp_Input_DW.ISO_ANNUAL_STMT_LOB_CODE,
               Exp_Input_DW.ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               Exp_Input_DW.ISO_EXCEPTION_CODE,
               Exp_Input_DW.ISO_POLICY_FORM_CODE,
               Exp_Input_DW.ISO_NUMBER_OF_FAMILIES_CODE,
               Exp_Input_DW.ISO_ORD_OR_LAW_COV_CODE,
               Exp_Input_DW.ISO_STATUS_CODE,
               Exp_Input_DW.ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               Exp_Input_DW.ISO_CONSTRUCTION_CODE,
               Exp_Input_DW.ISO_PROTECTION_CODE,
               Exp_Input_DW.ISO_MOLD_COVERAGE_CODE,
               Exp_Input_DW.ISO_DEDUCTIBLE_SIZE_CODE,
               Exp_Input_DW.ISO_YEAR_OF_CONSTRUCTION_CODE,
               Exp_Input_DW.ISO_BUILDING_AND_CONTENTS_CODE,
               Exp_Input_DW.ISO_EXPOSURE,
               Exp_Input_DW.ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               Exp_Input_DW.ISO_STATE_EXCEP_INDIC_CODE_I,
               Exp_Input_DW.ISO_ZIP_CODE,
               Exp_Input_DW.ISO_STATE_EXCEP_INDIC_CODE_II,
               Exp_Input_DW.ISO_STATE_EXCEP_INDIC_CODE_III,
               Exp_Input_DW.ISO_WINDTORM_HAIL_COV_IND_CD,
               Exp_Input_DW.ISO_COMP_PROG_EXCEP_INDIC,
               Exp_Input_DW.ISO_STATIS_PLAN_INDIC_CODE,
               Exp_Input_DW.ISO_PREMIUM_AMOUNT,
               Exp_Input_DW.ISO_PREMIUM_RECORD_ID,
               Exp_Input_DW.ISO_POSITIONS_FOR_COMPANY_USE,
               Exp_Input_DW.ISO_LOSS_SETTLE_IND_CODE,
               Exp_Input_DW.ISO_CLASSIFICATION_CODE,
               Exp_Input_DW.ISO_TYPE_OF_EQUAKE_COV,
               Exp_Input_DW.ISO_EQ_ATTACH_INDIC_CODE,
               Exp_Input_DW.ISO_ADD_EQ_EXPOSURE,
               Exp_Input_DW.ISO_ENV_IMP_COV_CODE,
               Exp_Input_DW.ISO_UMB_ATTACH_HO_PL,
               Exp_Input_DW.ISO_UMB_ATTACH_PERS_AUTO,
               Exp_Input_DW.ISO_UMB_UNDERLY_HO_PL_INDIC,
               Exp_Input_DW.ISO_UMB_UNDERLY_AUTO_INDIC,
               Exp_Input_DW.ISO_UMB_RISK_PROFILE,
               Exp_Input_DW.ISO_LIMIT_OF_LIAB_CODE,
               Exp_Input_DW.ISO_UMB_UNINS_UNDERINS_LLC,
               Exp_Input_DW.ISO_UMB_SELF_INS_RETENTION,
               Exp_Input_DW.CREATE_DT,
               Exp_Input_DW.CREATE_TS,
               Exp_Input_DW.CREATED_BY,
               Exp_Input_DW.BATCH_START_DT,
               Exp_Input_DW.BATCH_END_DT,
               Exp_Input_DW.RPRTG_PERIOD_START_DT,
               Exp_Input_DW.RPRTG_PERIOD_END_DT,
               Exp_Input_DW.BCEG,
               Exp_Input_DW.IMPACT_RESIST_GLASS_FLG,
               Exp_Input_DW.HURRICANE_SHUTTERS_FLG,
               Exp_Input_DW.ISO_PROTECTIVE_DEVICES,
               Exp_Input_DW.ISO_LOSS_HISTORY_CD,
               Exp_Input_DW.ISO_ROOF_SURFACE_LOSS_CD,
               Exp_Input_DW.ISO_ROOF_INSTALL_YR_CD,
               Exp_Input_DW.ISO_RISK_IND_CD,
               Exp_Input_DW.ISO_RISK_IND_CD_II,
               LKP_WIND_HAIL_DED_PCT.NAMD_STORM_DDCTBL_OPT AS lkp_NAMD_STORM_DDCTBL_OPT,
               LKP_MOLD_II_LIMITS.LIMIT_AMT1 AS lkp_LIMIT_AMT1,
               LKP_MOLD_II_LIMITS.LIMIT_AMT2 AS lkp_LIMIT_AMT2,
               Lkp_Max_Subm_Id1.ISO_BURRPT_QTR_SUBM_ID,
               Lkp_POL_DEDUCTIBLE.DED_AMT1 AS lkp_DED_AMT1,
              COALESCE(LKP_MOLD_LIMITS.LIMIT_AMT1,0) AS LKP_MOLD_LIMITS_lkp_LIMIT_AMT1,
              COALESCE(LKP_MOLD_LIMITS.LIMIT_AMT2,0) AS LKP_MOLD_LIMITS_lkp_LIMIT_AMT2,
               Lkp_OIL_SPILL_COV_Exists.PREMIUM_SOURCE_C AS lkp_PREMIUM_SOURCE_C,
               Lkp_SUPER_PREF_CRD_COV_Exists.POL_STATE_EFF_DT AS lkp_POL_STATE_EFF_DT,
               Lkp_STATUS_Cov_Cd_Count.STATUS_COV_COUNT,
               LKP_PROTECTION_DEVICES.PTCTV_DVC_BRGLR_ALM_TYP AS lkp_PTCTV_DVC_BRGLR_ALM_TYP,
               LKP_PROTECTION_DEVICES.PTCTV_DVC_FIRE_ALM_TYP AS lkp_PTCTV_DVC_FIRE_ALM_TYP,
               LKP_PROTECTION_DEVICES.PTCTV_DVC_SPRNKLR_TYP AS lkp_PTCTV_DVC_SPRNKLR_TYP
          FROM Exp_Input_DW Exp_Input_DW
          left join -- writting query for lookup function
 (
                select NAMD_STORM_DDCTBL_OPT,
                       POL_PK,
                       ORIG_POL_PK,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  FROM S10_ISO_PLOTA_EXTRACT_NE
                 where RTRIM(LTRIM(PREMIUM_SOURCE_C)) = 'NMD_STORM' qualify rn = 1
               ) LKP_WIND_HAIL_DED_PCT
            on LKP_WIND_HAIL_DED_PCT.POL_PK=Exp_Input_DW.POL_PK
           AND LKP_WIND_HAIL_DED_PCT.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                select LIMIT_AMT1,
                       LIMIT_AMT2,
                       POL_PK,
                       ORIG_POL_PK,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  FROM S10_ISO_PLOTA_EXTRACT_NE
                 where RTRIM(LTRIM(PREMIUM_SOURCE_C)) = 'MOLD_II' qualify rn = 1
               ) LKP_MOLD_II_LIMITS
            on LKP_MOLD_II_LIMITS.POL_PK=Exp_Input_DW.POL_PK
           AND LKP_MOLD_II_LIMITS.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                SELECT MAX(BURRPT.ISO_BURRPT_PLOTA_PREM_HO_GEN_SUB_HIST_NE.ISO_BURRPT_QTR_SUBM_ID) as ISO_BURRPT_QTR_SUBM_ID,
                       BURRPT.ISO_BURRPT_PLOTA_PREM_HO_GEN_SUB_HIST_NE.RPRTG_PERIOD_END_DT as RPRTG_PERIOD_END_DT,
                       row_number() over(partition by RPRTG_PERIOD_END_DT order by RPRTG_PERIOD_END_DT) as rn -- Please review the order by columns

                  FROM BURRPT.ISO_BURRPT_PLOTA_PREM_HO_GEN_SUB_HIST_NE --qualify rn = 1
                 Group by BURRPT.ISO_BURRPT_PLOTA_PREM_HO_GEN_SUB_HIST_NE.RPRTG_PERIOD_END_DT
                 ORDER BY RPRTG_PERIOD_END_DT,
                          ISO_BURRPT_QTR_SUBM_ID DESC
               ) Lkp_Max_Subm_Id1
           on Lkp_Max_Subm_Id1.RPRTG_PERIOD_END_DT = Exp_Input_DW.RPRTG_PERIOD_END_DT
          left join -- writting query for lookup function
 (
                SELECT S10_ISO_PLOTA_EXTRACT_NE.DED_AMT1 as DED_AMT1,
                       S10_ISO_PLOTA_EXTRACT_NE.POL_PK as POL_PK,
                       S10_ISO_PLOTA_EXTRACT_NE.ORIG_POL_PK as ORIG_POL_PK, row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  FROM S10_ISO_PLOTA_EXTRACT_NE
                 WHERE LTRIM(RTRIM(S10_ISO_PLOTA_EXTRACT_NE.PREMIUM_SOURCE_C)) = 'POL_DED' qualify rn = 1
               ) Lkp_POL_DEDUCTIBLE
            on Lkp_POL_DEDUCTIBLE.POL_PK=Exp_Input_DW.POL_PK
           AND Lkp_POL_DEDUCTIBLE.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                select LIMIT_AMT1,
                       LIMIT_AMT2,
                       POL_PK,
                       ORIG_POL_PK,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  FROM S10_ISO_PLOTA_EXTRACT_NE
                 where RTRIM(LTRIM(PREMIUM_SOURCE_C)) = 'MOLD'
                    or RTRIM(LTRIM(PREMIUM_SOURCE_C)) = 'MOLD_II' qualify rn = 1
               ) LKP_MOLD_LIMITS
            on LKP_MOLD_LIMITS.POL_PK=Exp_Input_DW.POL_PK
           AND LKP_MOLD_LIMITS.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                SELECT S10_ISO_PLOTA_EXTRACT_NE.POL_STATE_EFF_DT as POL_STATE_EFF_DT,
                       S10_ISO_PLOTA_EXTRACT_NE.PREMIUM_SOURCE_C as PREMIUM_SOURCE_C,
                       S10_ISO_PLOTA_EXTRACT_NE.POL_PK as POL_PK,
                       S10_ISO_PLOTA_EXTRACT_NE.ORIG_POL_PK as ORIG_POL_PK,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  FROM S10_ISO_PLOTA_EXTRACT_NE
                 where LTRIM(RTRIM(PREMIUM_SOURCE_C)) in ('OIL_SPILL')
                   AND PREM_WRIT_M <>0 qualify rn = 1
               ) Lkp_OIL_SPILL_COV_Exists
            on Lkp_OIL_SPILL_COV_Exists.POL_PK=Exp_Input_DW.POL_PK
           AND Lkp_OIL_SPILL_COV_Exists.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                SELECT h.POL_PK as POL_PK,
                       h.ORIG_POL_PK as ORIG_POL_PK,
                       h.POL_STATE_EFF_DT as POL_STATE_EFF_DT,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h
                 where LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) in ('PREF_CRD','SUPER_PREF')
                   AND PREM_WRIT_M <>0 qualify rn = 1
               ) Lkp_SUPER_PREF_CRD_COV_Exists
            on Lkp_SUPER_PREF_CRD_COV_Exists.POL_PK=Exp_Input_DW.POL_PK
           AND Lkp_SUPER_PREF_CRD_COV_Exists.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                select COUNT(h.POL_PK) as STATUS_COV_COUNT,
                       h.POL_PK as POL_PK,
                       h.ORIG_POL_PK as ORIG_POL_PK,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h
                 where RTRIM(LTRIM(h.PREMIUM_SOURCE_C)) in ('BUILD_ADDC','BUS_PUR_C','COVA_SPCL','FARM_LIABC','INC_LMT_C','INC_OCP_OC','INC_OCPNCY','LOSS_ASMTC','PI','RES_REN_C','RES_REN_TH','SINK_COV','SPCL_CMPTR','STRUC_RENC','THREE_FAM') --qualify rn = 1
                GROUP BY h.POL_PK,
                          ORIG_POL_PK
                 ORDER BY h.POL_PK ASC,
                          ORIG_POL_PK ASC
               ) Lkp_STATUS_Cov_Cd_Count
            on Lkp_STATUS_Cov_Cd_Count.POL_PK=Exp_Input_DW.POL_PK
           AND Lkp_STATUS_Cov_Cd_Count.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
          left join -- writting query for lookup function
 (
                SELECT S10_ISO_PLOTA_EXTRACT_NE.POL_PK as POL_PK,
                       S10_ISO_PLOTA_EXTRACT_NE.ORIG_POL_PK as ORIG_POL_PK,
                       LTRIM(RTRIM(S10_ISO_PLOTA_EXTRACT_NE.PTCTV_DVC_BRGLR_ALM_TYP)) as PTCTV_DVC_BRGLR_ALM_TYP,
                       LTRIM(RTRIM(S10_ISO_PLOTA_EXTRACT_NE.PTCTV_DVC_FIRE_ALM_TYP)) as PTCTV_DVC_FIRE_ALM_TYP,
                       LTRIM(RTRIM(S10_ISO_PLOTA_EXTRACT_NE.PTCTV_DVC_SPRNKLR_TYP)) as PTCTV_DVC_SPRNKLR_TYP,
                       row_number() over(partition by POL_PK, ORIG_POL_PK order by POL_PK, ORIG_POL_PK) as rn -- Please review the order by columns

                  FROM BURRPT.S10_ISO_PLOTA_EXTRACT_NE S10_ISO_PLOTA_EXTRACT_NE
                 WHERE RTRIM(LTRIM(PREMIUM_SOURCE_C))='PROT_DEV' qualify rn = 1
               ) LKP_PROTECTION_DEVICES
            on LKP_PROTECTION_DEVICES.POL_PK=Exp_Input_DW.POL_PK
           AND LKP_PROTECTION_DEVICES.ORIG_POL_PK=Exp_Input_DW.ORIG_POL_PK
       ) 
       
    --select * from Exp_Input_DW limit 5  
       
       ,


EXP_SUBMISSION_ID as (
        -- writting query for expression function
SELECT source_record_id,
               ISO_BURRPT_QTR_SUBM_ID AS IN_ISO_BURRPT_QTR_SUBM_ID,
               RPRTG_PERIOD_END_DT AS IN_RPRTG_END_PRD,
               IFF( IN_ISO_BURRPT_QTR_SUBM_ID IS NULL,1,  SUBSTR(IN_ISO_BURRPT_QTR_SUBM_ID, 1, (REGEXP_INSTR(IN_ISO_BURRPT_QTR_SUBM_ID, '-') -1)) :: INT  + 1) AS v_ISO_BURRPT_QTR_SUBM_ID,
               TO_CHAR(IN_RPRTG_END_PRD,'MMYYYY') AS v_RPRTG_PERIOD_END_DT,
               v_ISO_BURRPT_QTR_SUBM_ID || '-' || v_RPRTG_PERIOD_END_DT AS OUT_ISO_BURRPT_QTR_SUBM_ID
          FROM Exp_Inputs_before_agg_DW
       ) 
       
      -- select * from EXP_SUBMISSION_ID limit 5      
       ,
       
EXP_COVERAGE_EXISTS_COUNT as (
        -- writting query for expression function
SELECT T0.source_record_id,
               T0.POL_PK,
               T0.ORIG_POL_PK,
               T0.STATUS_COV_COUNT,
               NULL AS POLICY_LEVEL_ID,
               lkp10.COV_COUNT+0 AS V_INC_LIMIT_C_COUNT,
               lkp11.COV_COUNT+0 AS V_INC_LIMIT_CC_COUNT,
               lkp12.COV_COUNT+0 AS V_PPRC_COUNT,
               lkp13.COV_COUNT+0 AS V_FRAUD_COUNT,
               0 AS V_OUT_FRAUD_COUNT,
              NVL(lkp14.COV_COUNT,0) + NVL(lkp15.COV_COUNT,0) AS V_MOLD_COUNT,
               lkp16.COV_COUNT+0 AS V_PERS_PROP_COUNT,
               NVL(lkp17.COV_COUNT,0) AS V_WIND_HAIL_COUNT,
               lkp18.COV_COUNT+0 AS V_RNTL_OTHR_COUNT,
               lkp19.COV_COUNT+0 AS V_BUILD_ADD1_COUNT,
               COALESCE(lkp110.COV_COUNT,0) AS V_BUILD_ORD_COUNT,
               lkp111.COV_COUNT+0 AS V_OIL_SPILL_COUNT,
               lkp112.COV_COUNT+0 AS V_BUILD_ADDC_COUNT,
               lkp113.COV_COUNT+0 AS V_BUS_PUR_C_COUNT,
               lkp114.COV_COUNT+0 AS V_COVA_SPCL_COUNT,
               lkp115.COV_COUNT+0 AS V_FARM_LIABC_COUNT,
               lkp116.COV_COUNT+0 AS V_INC_OCP_OC_COUNT,
               lkp117.COV_COUNT+0 AS V_INC_OCPNCY_COUNT,
               lkp118.COV_COUNT+0 AS V_LOSS_ASMTC_COUNT,
               lkp119.COV_COUNT+0 AS V_PI_COUNT,
               lkp120.COV_COUNT+0 AS V_RES_REN_C_COUNT,
               lkp121.COV_COUNT+0 AS V_RES_REN_TH_COUNT,
               lkp122.COV_COUNT+0 AS V_SINK_COV_COUNT,
               lkp123.COV_COUNT+0 AS V_SPCL_CMPTR_COUNT,
               lkp124.COV_COUNT+0 AS V_STRUC_RENT_C_COUNT,
               lkp125.COV_COUNT+0 AS V_THREE_FAM_COUNT,
               IFF( V_INC_LIMIT_C_COUNT IS NULL AND V_INC_LIMIT_CC_COUNT IS NULL, 0, IFF( V_INC_LIMIT_C_COUNT IS NULL,0,V_INC_LIMIT_C_COUNT) + IFF( V_INC_LIMIT_CC_COUNT IS NULL,0,V_INC_LIMIT_CC_COUNT)) AS INC_LIMIT_C_COUNT,
               IFF( V_BUILD_ADDC_COUNT IS NULL, 0, V_BUILD_ADDC_COUNT) AS BUILD_ADDC_COUNT,
               IFF( V_PPRC_COUNT IS NULL, 0, V_PPRC_COUNT) AS PPRC_COUNT,
               IFF( V_FRAUD_COUNT IS NULL, 0, V_FRAUD_COUNT) AS FRAUD_COUNT,
               IFF( V_OUT_FRAUD_COUNT IS NULL, 0, V_OUT_FRAUD_COUNT) AS OUT_FRAUD_COUNT,
               IFF( V_MOLD_COUNT IS NULL, 0, V_MOLD_COUNT) AS MOLD_COUNT,
               IFF( V_PERS_PROP_COUNT IS NULL, 0, V_PERS_PROP_COUNT) AS PERS_PROP_COUNT,
               IFF( V_WIND_HAIL_COUNT IS NULL, 0, V_WIND_HAIL_COUNT) AS WIND_HAIL_COUNT,
               IFF( V_RNTL_OTHR_COUNT IS NULL, 0, V_RNTL_OTHR_COUNT) AS RNTL_OTHR_COUNT,
               IFF( V_BUILD_ADD1_COUNT IS NULL, 0, V_BUILD_ADD1_COUNT) AS BUILD_ADD1_COUNT,
               IFF( V_BUILD_ORD_COUNT IS NULL, 0, V_BUILD_ORD_COUNT) AS BUILD_ORD_COUNT,
               IFF( V_OIL_SPILL_COUNT IS NULL, 0, V_OIL_SPILL_COUNT) AS OIL_SPILL_COUNT,
               IFF( V_BUS_PUR_C_COUNT IS NULL, 0, V_BUS_PUR_C_COUNT) AS BUS_PUR_C_COUNT,
               IFF( V_COVA_SPCL_COUNT IS NULL, 0, V_COVA_SPCL_COUNT) AS COVA_SPCL_COUNT,
               IFF( V_FARM_LIABC_COUNT IS NULL, 0, V_FARM_LIABC_COUNT) AS FARM_LIABC_COUNT,
               IFF( V_INC_OCP_OC_COUNT IS NULL, 0, V_INC_OCP_OC_COUNT) AS INC_OCP_OC_COUNT,
               IFF( V_INC_OCPNCY_COUNT IS NULL, 0, V_INC_OCPNCY_COUNT) AS INC_OCPNCY_COUNT,
               IFF( V_LOSS_ASMTC_COUNT IS NULL, 0, V_LOSS_ASMTC_COUNT) AS LOSS_ASMTC_COUNT,
               IFF( V_PI_COUNT IS NULL, 0, V_PI_COUNT) AS PI_COUNT,
               IFF( V_RES_REN_C_COUNT IS NULL, 0, V_RES_REN_C_COUNT) AS RES_REN_C_COUNT,
               IFF( V_RES_REN_TH_COUNT IS NULL, 0, V_RES_REN_TH_COUNT) AS RES_REN_TH_COUNT,
               IFF( V_SINK_COV_COUNT IS NULL, 0, V_SINK_COV_COUNT) AS SINK_COV_COUNT,
               IFF( V_SPCL_CMPTR_COUNT IS NULL, 0, V_SPCL_CMPTR_COUNT) AS SPCL_CMPTR_COUNT,
               IFF( V_STRUC_RENT_C_COUNT IS NULL, 0, V_STRUC_RENT_C_COUNT) AS STRUC_RENT_C_COUNT,
               IFF( V_THREE_FAM_COUNT IS NULL, 0, V_THREE_FAM_COUNT) AS THREE_FAM_COUNT
          
          FROM Exp_Inputs_before_agg_DW AS T0
-- Writing query for unconnected lookup function
LEFT JOIN (
    SELECT 
        COUNT(*) AS COV_COUNT,
        h.POL_PK AS POL_PK,
        h.ORIG_POL_PK AS ORIG_POL_PK,
        LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) AS PREMIUM_SOURCE_C,
        ROW_NUMBER() OVER (
            PARTITION BY h.POL_PK, h.ORIG_POL_PK, LTRIM(RTRIM(h.PREMIUM_SOURCE_C))
            ORDER BY h.POL_PK, h.ORIG_POL_PK, LTRIM(RTRIM(h.PREMIUM_SOURCE_C))
        ) AS rn
    FROM BURRPT.S10_ISO_PLOTA_EXTRACT_NE h
    GROUP BY 
        h.POL_PK,
        h.ORIG_POL_PK,
        LTRIM(RTRIM(h.PREMIUM_SOURCE_C))
    QUALIFY rn = 1
) lkp10
ON lkp10.POL_PK = T0.POL_PK
   AND lkp10.ORIG_POL_PK = T0.ORIG_POL_PK
   AND lkp10.PREMIUM_SOURCE_C = T0.PREMIUM_SOURCE_C
LEFT JOIN (
    SELECT 
        COUNT(*) AS COV_COUNT,
        h.POL_PK AS POL_PK,
        h.ORIG_POL_PK AS ORIG_POL_PK,
        LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) AS PREMIUM_SOURCE_C,
        ROW_NUMBER() OVER (
            PARTITION BY h.POL_PK, h.ORIG_POL_PK, LTRIM(RTRIM(h.PREMIUM_SOURCE_C))
            ORDER BY h.POL_PK, h.ORIG_POL_PK, LTRIM(RTRIM(h.PREMIUM_SOURCE_C))
        ) AS rn
    FROM BURRPT.S10_ISO_PLOTA_EXTRACT_NE h
    GROUP BY 
        h.POL_PK,
        h.ORIG_POL_PK,
        LTRIM(RTRIM(h.PREMIUM_SOURCE_C))
    QUALIFY rn = 1
) lkp11
ON lkp11.POL_PK = T0.POL_PK
   AND lkp11.ORIG_POL_PK = T0.ORIG_POL_PK
   AND lkp11.PREMIUM_SOURCE_C = T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                    qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
                        
               ) lkp12
            on lkp12.POL_PK=T0.POL_PK
           AND lkp12.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp12.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                       qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
                   
               ) lkp13
            on lkp13.POL_PK=T0.POL_PK
           AND lkp13.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp13.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp14
            on lkp14.POL_PK=T0.POL_PK
           AND lkp14.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp14.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                      qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp15
            on lkp15.POL_PK=T0.POL_PK
           AND lkp15.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp15.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp16
            on lkp16.POL_PK=T0.POL_PK
           AND lkp16.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp16.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp17
            on lkp17.POL_PK=T0.POL_PK
           AND lkp17.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp17.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp18
            on lkp18.POL_PK=T0.POL_PK
           AND lkp18.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp18.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp19
            on lkp19.POL_PK=T0.POL_PK
           AND lkp19.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp19.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                      qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp110
            on lkp110.POL_PK=T0.POL_PK
           AND lkp110.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp110.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp111
            on lkp111.POL_PK=T0.POL_PK
           AND lkp111.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp111.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                      qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp112
            on lkp112.POL_PK=T0.POL_PK
           AND lkp112.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp112.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp113
            on lkp113.POL_PK=T0.POL_PK
           AND lkp113.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp113.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp114
            on lkp114.POL_PK=T0.POL_PK
           AND lkp114.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp114.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp115
            on lkp115.POL_PK=T0.POL_PK
           AND lkp115.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp115.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp116
            on lkp116.POL_PK=T0.POL_PK
           AND lkp116.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp116.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp117
            on lkp117.POL_PK=T0.POL_PK
           AND lkp117.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp117.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                      qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp118
            on lkp118.POL_PK=T0.POL_PK
           AND lkp118.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp118.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                      qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp119
            on lkp119.POL_PK=T0.POL_PK
           AND lkp119.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp119.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp120
            on lkp120.POL_PK=T0.POL_PK
           AND lkp120.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp120.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp121
            on lkp121.POL_PK=T0.POL_PK
           AND lkp121.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp121.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp122
            on lkp122.POL_PK=T0.POL_PK
           AND lkp122.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp122.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp123
            on lkp123.POL_PK=T0.POL_PK
           AND lkp123.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp123.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp124
            on lkp124.POL_PK=T0.POL_PK
           AND lkp124.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp124.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
          LEFT JOIN (
                select COUNT(*) as COV_COUNT ,
                       h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.PREMIUM_SOURCE_C
                         qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp125
            on lkp125.POL_PK=T0.POL_PK
           AND lkp125.ORIG_POL_PK=T0.ORIG_POL_PK
           AND lkp125.PREMIUM_SOURCE_C=T0.PREMIUM_SOURCE_C
       )
       --select * from EXP_COVERAGE_EXISTS_COUNT limit 5
       ,
EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW as (
        -- writting query for expression function
SELECT T1.UNIT_TYPE AS IN_DWELLING_FORM_CODE,
               T1.DWLG_USE_OCPNY AS IN_DF_DWELLING_USE_OCCUP_CD,
               T1.YR_BLT AS IN_CONSTRUCTION_YEAR,
               T1.PREMIUM_SOURCE_C AS IN_COV_CD,
               T1.STRCT_TYP AS IN_TOWN_OR_ROW_HOUSE_IND,
               T1.NUM_OF_FMLYS AS IN_NBR_FAMILIES_QTY,
               T1.LMT_1_AMT AS IN_LIMIT_AMT,
               T1.SCNDY_HME_FLG AS IN_SECONDARY_DWELLING_IND,
               T1.SCNDY_HME_FLG AS IN_SEASONAL_DWELLING_IND,
               T1.RISK_UNIT_LEAD_XCLSN_FLG AS IN_LEAD_EXCL_ALL_UNITS_DLEAD_IND,
               T1.STATE_CODE AS IN_PLCY_ST_CD,
               T1.PREMIUM_SOURCE_C AS IN_PREM_COV_CD,
              -- T1.WIND_HAIL_COUNT AS IN_COV_EXIST_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.WIND_HAIL_COUNT AS IN_COV_EXIST_COUNT,
               --T1.MOLD_COUNT AS IN_MOLD_COV_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.MOLD_COUNT AS IN_MOLD_COV_COUNT,
               --T1.BUILD_ORD_COUNT AS IN_BUILD_ORD_COV_COUNT,
                EXP_COVERAGE_EXISTS_COUNT.BUILD_ORD_COUNT AS IN_BUILD_ORD_COV_COUNT,
               T1.LIMIT_AMT1 AS IN_FORMS_DET_LMT_AMT,
               T1.SCNDY_HME_FLG AS IN_SEC_OR_SEASONAL_IND,
               T1.STATE_CODE AS IN_POLICY_ST_CD,
               T1.UNIT_TYPE AS IN_DWELLING_FORM_CD,
               T1.lkp_LIMIT_AMT1 AS MOLD_II_SEC1_LIAB_LMT_AMT_TXT,
               T1.lkp_LIMIT_AMT2 AS MOLD_II_SEC2_LIAB_LMT_AMT_TXT,
               T1.source_record_id,
               T1.S10_ISO_PLOTA_EXTRACT_ID,
               T1.POL_PK,
               T1.ORIG_POL_PK,
               T1.lkp_DED_AMT1 AS IN_DED_AMT,
              -- T1.PPRC_COUNT AS IN_PPRC_COV_COUNT,
              EXP_COVERAGE_EXISTS_COUNT.PPRC_COUNT AS IN_PPRC_COV_COUNT,
             --  T1.INC_LIMIT_C_COUNT AS IN_INC_LIMITC_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.INC_LIMIT_C_COUNT AS IN_INC_LIMITC_COUNT,
               --T1.PERS_PROP_COUNT AS IN_PERS_PROP_COUNT,
                 EXP_COVERAGE_EXISTS_COUNT.PERS_PROP_COUNT AS IN_PERS_PROP_COUNT,
               
               T1.STATUS_COV_COUNT AS IN_STATUS_COV_COUNT,
              -- T1.RNTL_OTHR_COUNT AS IN_RNTL_OTHR_COV_COUNT,
             EXP_COVERAGE_EXISTS_COUNT.RNTL_OTHR_COUNT AS IN_RNTL_OTHR_COV_COUNT,
              -- T1.BUILD_ADD1_COUNT AS IN_BUILD_ADD1_COV_COUNT,
              EXP_COVERAGE_EXISTS_COUNT.BUILD_ADD1_COUNT AS IN_BUILD_ADD1_COV_COUNT,
              -- T1.FRAUD_COUNT AS IN_FRAUD_COV_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.FRAUD_COUNT AS IN_FRAUD_COV_COUNT,
               T1.lkp_PREMIUM_SOURCE_C AS IN_OIL_SPILL_COV,
               T1.lkp_PTCTV_DVC_BRGLR_ALM_TYP AS IN_BURGLAR_ALARM_TYPE_CD,
               T1.lkp_PTCTV_DVC_FIRE_ALM_TYP AS IN_FIRE_ALARM_TYPE_CD,
               T1.lkp_PTCTV_DVC_SPRNKLR_TYP AS IN_SPRINKLER_SYSTEM_TYPE_CD,
               T1.ISO_EXPOSURE AS IN_ISO_EXPOSURE,
               T1.LKP_MOLD_LIMITS_lkp_LIMIT_AMT1 AS MOLD_SEC1_LIAB_LMT_AMT_TXT,
               T1.LKP_MOLD_LIMITS_lkp_LIMIT_AMT2 AS MOLD_SEC2_LIAB_LMT_AMT_TXT,
               T1.STATE_CODE,
               T1.TERRTY_CD,
               T1.ISO_MODULE,
               T1.lkp_NAMD_STORM_DDCTBL_OPT AS NAMD_STORM_DDCTBL_OPT,
               --T1.BUILD_ADDC_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.BUILD_ADDC_COUNT,
              EXP_COVERAGE_EXISTS_COUNT.OUT_FRAUD_COUNT AS FRAUD_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.OIL_SPILL_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.BUS_PUR_C_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.COVA_SPCL_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.FARM_LIABC_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.INC_OCP_OC_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.INC_OCPNCY_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.LOSS_ASMTC_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.PI_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.RES_REN_C_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.RES_REN_TH_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.SINK_COV_COUNT,
              EXP_COVERAGE_EXISTS_COUNT.SPCL_CMPTR_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.STRUC_RENT_C_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.THREE_FAM_COUNT,
               EXP_COVERAGE_EXISTS_COUNT.WIND_HAIL_COUNT,
               T1.CUR_TERM_EFF_DT,
               T1.ISO_TERRITORY_CODE,
               T1.ISO_YEAR_OF_CONSTRUCTION_CODE AS IN_ISO_YEAR_OF_CONSTRUCTION_CODE,
               T1.ISO_ROOF_SURFACE_LOSS_CD,
               T1.ISO_ROOF_INSTALL_YR_CD,
               T1.ISO_RISK_IND_CD,
               T1.ISO_RISK_IND_CD_II,
               NULL AS BURGLAR_ALARM,
               NULL AS FIRE_ALARM,
               NULL AS IN_FORM_NBR_VALUE,
               COALESCE(lkp20.LIMIT_AMT1,0) AS v_COV_A_LIMIT_AMT,
               lkp21.LIMIT_AMT1+0 AS v_COV_B_LIMIT_AMT,
               lkp22.LIMIT_AMT1+0 AS v_COV_C_LIMIT_AMT,
               lkp23.LIMIT_AMT1+0 AS v_COV_D_LIMIT_AMT,
               lkp24.LIMIT_AMT1+0 AS v_COV_E_LIMIT_AMT,
               lkp25.LIMIT_AMT1+0 AS v_COV_F_LIMIT_AMT,
               lkp26.LIMIT_AMT1+0 AS v_BUILD_ORD_LIMIT_AMT,
               lkp26.LIMIT_AMT1+0 AS v_BUILD_ORD_LMT_AMT,
               IFF(RTRIM(LTRIM(IN_BURGLAR_ALARM_TYPE_CD)) IN('Reporting to Central Station','Central Station Police Alarm'),'Central Station', IFF(RTRIM(LTRIM(IN_BURGLAR_ALARM_TYPE_CD)) IN('Reporting to a Police Depart'),'Police Station', IFF(RTRIM(LTRIM(IN_BURGLAR_ALARM_TYPE_CD)) IN('Local Burglar Alarm'),'Local Station', 'No Burglar Alarm'))) AS v_BURGLAR_ALARMS,
               IFF(RTRIM(LTRIM(IN_FIRE_ALARM_TYPE_CD)) IN('Central Station Police/Fire','Reporting to Central Station'),'Central Station', IFF(RTRIM(LTRIM(IN_FIRE_ALARM_TYPE_CD)) IN('Reporting to Fire Department'),'Fire Station', IFF(RTRIM(LTRIM(IN_FIRE_ALARM_TYPE_CD)) IN('Fire or Smoke Detector','Fire/Smoke Detector'),'Local Station', 'No Fire Alarm'))) AS v_FIRE_ALARMS,
               IFF(RTRIM(LTRIM(IN_FIRE_ALARM_TYPE_CD))='Complete Sprinklers','All areas', IFF(RTRIM(LTRIM(IN_FIRE_ALARM_TYPE_CD))='Partial Sprinklers','All areas except', IFF(RTRIM(LTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD))='In All Areas','All areas', IFF(RTRIM(LTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD))='In Some areas','All areas except', 'No sprinkler installed')))) AS v_SPRINKLERS,
               TRY_TO_DECIMAL(NAMD_STORM_DDCTBL_OPT,2) AS v_WIND_DED_PCT,
               -- IFF(ISO_MODULE != 'HO',' ', 
               -- IFF(WIND_HAIL_COUNT>=1 AND ROUND(v_WIND_DED_PCT * v_COV_A_LIMIT_AMT / 100) <= IN_DED_AMT,'5', 
               -- IFF(WIND_HAIL_COUNT>=1 AND ROUND(v_WIND_DED_PCT * v_COV_A_LIMIT_AMT / 100) > IN_DED_AMT,'8', '5'))) AS v_OUT_TYPE_OF_DED_CD,  
               IFF(
    ISO_MODULE != 'HO', 
    ' ', 
    IFF(
        WIND_HAIL_COUNT >= 1 AND 
        ROUND(v_WIND_DED_PCT * v_COV_A_LIMIT_AMT / 100) <= COALESCE(IN_DED_AMT, 0), 
        '5', 
        IFF(
            WIND_HAIL_COUNT >= 1 AND 
            ROUND(v_WIND_DED_PCT * v_COV_A_LIMIT_AMT / 100) > COALESCE(IN_DED_AMT, 0), 
            '8', 
            '5'
        )
    )
) AS v_OUT_TYPE_OF_DED_CD,
               TRY_TO_DATE('{{EFF_DT}}', 'YYYY-MM-DD')  AS V_EFF_DATE,
               TRUNC(V_EFF_DATE,'DD') AS TRUNC_EFF_DT,
               IFF( RTRIM(LTRIM(IN_DWELLING_FORM_CD)) IS NULL OR IN_COV_CD='FRAUD','  ',
               IFF(RTRIM(LTRIM(IN_DWELLING_FORM_CD)) IN( 'HO_4', 'HO_6'), '  ', 
               IFF(STATE_CODE = 'MA' AND T1.CUR_TERM_EFF_DT <TRY_TO_DATE('2011-10-01', 'YYYY-MM-DD') and v_OUT_TYPE_OF_DED_CD = '8','02', IFF(STATE_CODE = 'CT' AND T1.CUR_TERM_EFF_DT <TRY_TO_DATE('2010-05-01', 'YYYY-MM-DD') and v_OUT_TYPE_OF_DED_CD = '8','02', IFF(STATE_CODE = 'NH' AND T1.CUR_TERM_EFF_DT <TRY_TO_DATE('2010-07-01', 'YYYY-MM-DD') and v_OUT_TYPE_OF_DED_CD = '8','02', IFF(v_OUT_TYPE_OF_DED_CD = '8' AND STATE_CODE = 'MA' AND ISO_TERRITORY_CODE IN('02','03','04','05','11','12','30','31','32','33','34','35','36','37','39','40','41','43'), DECODE(v_WIND_DED_PCT,1, '41',2, '42',3, '43',4, '44',5, '45',6, '89',7, '89',7.5, '46',10, '40','89'), IFF(v_OUT_TYPE_OF_DED_CD = '8' AND STATE_CODE = 'NH' AND ISO_TERRITORY_CODE = '01', DECODE(v_WIND_DED_PCT,1, '41',2, '42',3, '43',4, '44',5, '45',6, '89',7, '89',7.5, '46',10, '40','89'), IFF(v_OUT_TYPE_OF_DED_CD = '8' AND STATE_CODE = 'CT', DECODE(v_WIND_DED_PCT,1, '41',2, '42',3, '43',4, '44',5, '45',6, '89',7, '89',7.5, '46',10, '40','89'), '  ')))))))) AS v_OUT_WIND_DEDUCTIBLE_SIZE_CD,
               v_COV_A_LIMIT_AMT AS IN_COV_A_LIMIT_AMT,
               v_COV_B_LIMIT_AMT AS IN_COV_B_LIMIT_AMT,
               v_COV_C_LIMIT_AMT AS IN_COV_C_LIMIT_AMT,
               v_COV_D_LIMIT_AMT AS IN_COV_D_LIMIT_AMT,
               v_COV_E_LIMIT_AMT AS IN_COV_E_LIMIT_AMT,
               v_COV_F_LIMIT_AMT AS IN_COV_F_LIMIT_AMT,
               v_BUILD_ORD_LIMIT_AMT AS IN_BUILD_ORD_LIMIT_AMT,
               ROUND(v_COV_A_LIMIT_AMT*.02,0) AS IN_WIND_DED_AMT,
               v_BUILD_ORD_LMT_AMT AS IN_BUILD_ORD_LMT_AMT,
               '  ' AS OUT_HOME_BUS_CLASSIFICATION_CODE,
               '040' AS OUT_ANNUAL_STATEMENT_LINE_OF_BUSINESS_CODE,
               IFF( IN_DWELLING_FORM_CODE IS NULL,'    ', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_4' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_6') AND (IN_PPRC_COV_COUNT<1 AND IN_INC_LIMITC_COUNT<1),'402', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5') AND (IN_PPRC_COV_COUNT>=1 AND IN_INC_LIMITC_COUNT<1),'403', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_6' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_4')AND IN_PPRC_COV_COUNT>=1,'403', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_6' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_4')AND (IN_PPRC_COV_COUNT<1 AND IN_INC_LIMITC_COUNT>=1),'403', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5') AND (IN_PPRC_COV_COUNT<1 AND IN_INC_LIMITC_COUNT>=1),'423', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5') AND (IN_PPRC_COV_COUNT>=1 AND IN_INC_LIMITC_COUNT>=1),'424', IFF(RTRIM(IN_DWELLING_FORM_CODE)='DP_3','428','   ')))))))) AS OUT_PERSONAL_LINES_STATESTICAL_PLAN_SUBLINE_CODE,
               IFF(RTRIM(IN_COV_CD) IN( 'WATER_BKUP','WATERBKUP2') and T1.CUR_TERM_EFF_DT >=TRY_TO_DATE('2011-10-01', 'YYYY-MM-DD'),'1',' ') AS OUT_EXCEPTION_CODE,
               IFF( IN_DWELLING_FORM_CODE IS NULL,' ',SUBSTR(IN_DWELLING_FORM_CODE,4,1)) AS OUT_POLICY_FORM_CODE,
               IFF( IN_DWELLING_FORM_CODE IS NULL,' ', IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5') AND RTRIM(IN_TOWN_OR_ROW_HOUSE_IND)='N', IFF(RTRIM(IN_NBR_FAMILIES_QTY)>'2','6', DECODE(RTRIM(IN_NBR_FAMILIES_QTY),'1','1','2','3',' ')), IFF((RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5') AND (RTRIM(IN_TOWN_OR_ROW_HOUSE_IND)='T' OR RTRIM(IN_TOWN_OR_ROW_HOUSE_IND)='R'),IFF(RTRIM(IN_NBR_FAMILIES_QTY)>'4','4',DECODE(RTRIM(IN_NBR_FAMILIES_QTY),'1','1','2','3','3','2','4','2',' ')), IFF(RTRIM(IN_DWELLING_FORM_CODE)='HO_4' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_6',IFF(RTRIM(IN_NBR_FAMILIES_QTY)>'4','8',DECODE(RTRIM(IN_NBR_FAMILIES_QTY),'1','1','2','2','3','3','4','4',' ')), IFF(RTRIM(IN_DWELLING_FORM_CODE)='DP_3' AND RTRIM(IN_NBR_FAMILIES_QTY)='1','1', IFF(RTRIM(IN_DWELLING_FORM_CODE)='DP_4' AND RTRIM(IN_NBR_FAMILIES_QTY)='2','3', IFF(RTRIM(IN_DWELLING_FORM_CODE)='DP_5' ,DECODE(RTRIM(IN_NBR_FAMILIES_QTY),'3','6','4','6',' '), IFF(RTRIM(IN_DWELLING_FORM_CODE)='DP_6' AND RTRIM(IN_NBR_FAMILIES_QTY)>'5','8',' ')))))))) AS OUT_NUMBER_OF_FAMILIES_CODE,
               IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND ( IN_BUILD_ORD_COV_COUNT IS NULL OR IN_BUILD_ORD_COV_COUNT = 0) ,'1', IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND IN_BUILD_ORD_COV_COUNT > 0 AND ( v_BUILD_ORD_LIMIT_AMT IS NULL OR v_BUILD_ORD_LIMIT_AMT= 0) ,'2', IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND IN_BUILD_ORD_COV_COUNT > 0 AND v_BUILD_ORD_LIMIT_AMT= 25,'3', IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND IN_BUILD_ORD_COV_COUNT > 0 AND v_BUILD_ORD_LIMIT_AMT= 50,'4', IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND IN_BUILD_ORD_COV_COUNT > 0 AND v_BUILD_ORD_LIMIT_AMT= 75,'5', IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND IN_BUILD_ORD_COV_COUNT > 0 AND v_BUILD_ORD_LIMIT_AMT= 100,'6', IFF(RTRIM(IN_DWELLING_FORM_CODE) IN('HO_3','HO_4','HO_5','HO_6','DP_3') AND IN_BUILD_ORD_COV_COUNT > 0 AND v_BUILD_ORD_LIMIT_AMT> 100,'9', ' '))))))) AS OUT_ORDINANCE_OR_LAW_COVERAGE_CODE,
            

               CASE 
    WHEN RTRIM(LTRIM(IN_COV_CD)) = 'FRAUD' THEN 'E'
    WHEN (RTRIM(IN_DWELLING_FORM_CODE) IN ('HO_3', 'HO_4', 'HO_5') 
          AND IN_PERS_PROP_COUNT < 1 
          AND RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'P') THEN
        CASE 
            WHEN IN_STATUS_COV_COUNT < 1 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'N' THEN '1'
            WHEN IN_STATUS_COV_COUNT >= 1 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'N' THEN '2'
            ELSE '1'
        END
    WHEN (RTRIM(IN_DWELLING_FORM_CODE) IN ('HO_3', 'HO_4', 'HO_5') 
          AND IN_PERS_PROP_COUNT < 1 
          AND RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) <> 'P') THEN
        CASE 
            WHEN IN_STATUS_COV_COUNT < 1 AND RTRIM(IN_SEC_OR_SEASONAL_IND) <> 'E' THEN '3'
            WHEN IN_STATUS_COV_COUNT >= 1 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'E' THEN '4'
            ELSE '1'
        END
    WHEN RTRIM(IN_DWELLING_FORM_CODE) = 'HO_3' AND IN_PERS_PROP_COUNT >= 1 THEN '7'
    WHEN RTRIM(IN_DWELLING_FORM_CODE) = 'HO_6' AND IN_BUILD_ADD1_COV_COUNT < 1 THEN
        CASE 
            WHEN IN_STATUS_COV_COUNT < 1 AND IN_RNTL_OTHR_COV_COUNT < 1 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'N' 
                 AND RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'P' THEN '1'
            WHEN IN_STATUS_COV_COUNT >= 1 AND IN_RNTL_OTHR_COV_COUNT < 1 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'N' 
                 AND RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'P' THEN '2'
            WHEN IN_STATUS_COV_COUNT < 1 AND IN_RNTL_OTHR_COV_COUNT >= 1 
                 AND RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'R' THEN '5'
            WHEN IN_STATUS_COV_COUNT >= 1 AND IN_RNTL_OTHR_COV_COUNT >= 1 
                 AND RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'R' THEN '6'
            WHEN RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'S' 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) <> 'E' THEN '3'
            WHEN RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'S' 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'E' THEN '4'
            ELSE '1'
        END
    WHEN RTRIM(IN_DWELLING_FORM_CODE) = 'HO_6' AND IN_BUILD_ADD1_COV_COUNT >= 1 THEN '7'
    WHEN RTRIM(IN_DWELLING_FORM_CODE) = 'DP_3' THEN
        CASE 
            WHEN RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'P' 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'N' THEN '1'
            WHEN RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) = 'P' 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) <> 'N' THEN '3'
            WHEN RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) <> 'P' 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) = 'N' THEN '5'
            WHEN RTRIM(IN_DF_DWELLING_USE_OCCUP_CD) <> 'P' 
                 AND RTRIM(IN_SEC_OR_SEASONAL_IND) <> 'N' THEN '7'
            ELSE '1'
        END
    ELSE NULL
END AS OUT_STATUS_CODE,

               
               IFF(IN_MOLD_COV_COUNT>=1,DECODE(TRUE,MOLD_SEC1_LIAB_LMT_AMT_TXT=10000 AND MOLD_SEC2_LIAB_LMT_AMT_TXT=50000,'1',MOLD_SEC1_LIAB_LMT_AMT_TXT=10000 AND MOLD_SEC2_LIAB_LMT_AMT_TXT=100000,'2',MOLD_SEC1_LIAB_LMT_AMT_TXT=25000 AND MOLD_SEC2_LIAB_LMT_AMT_TXT=50000,'3',MOLD_SEC1_LIAB_LMT_AMT_TXT=25000AND MOLD_SEC2_LIAB_LMT_AMT_TXT=100000,'4',MOLD_SEC1_LIAB_LMT_AMT_TXT=50000 AND MOLD_SEC2_LIAB_LMT_AMT_TXT=50000,'5',MOLD_SEC1_LIAB_LMT_AMT_TXT=50000 AND MOLD_SEC2_LIAB_LMT_AMT_TXT=100000,'6','7'),'9') AS OUT_MOLD_COVERAGE_CODE,
               ' ' AS OUT_THEFT_DED_SIZE_CD,

              v_OUT_TYPE_OF_DED_CD AS OUT_TYPE_OF_DED_CD,
               IFF( IN_DED_AMT IS NULL or IN_DED_AMT=0,'01', IFF(IN_DED_AMT>10000,'96', IFF(IN_DED_AMT>=1 and IN_DED_AMT<=49,'98', DECODE(IN_DED_AMT,25,'99',50,'05',100,'10',200,'20',250,'25', 300,'99',350,'99',400,'40',450,'99',500,'50',600,'60',750,'75',800,'80',1000,'82',1200,'84',1500,'85',2000,'87',2500,'88',3000,'89',4000,'90',5000,'91',7500,'92',10000,'93', IFF(IN_DED_AMT>50 and IN_DED_AMT<10000,'99','  '))))) AS OUT_FIRE_DED_SIZE_CD,
               DECODE(TRUE, T1.CUR_TERM_EFF_DT >=TRUNC_EFF_DT, IFF(RTRIM(IN_PLCY_ST_CD)='MA', IFF(LTRIM(RTRIM(IN_OIL_SPILL_COV))= 'OIL_SPILL', IFF( IN_DWELLING_FORM_CODE IS NULL,'9', DECODE(RTRIM(IN_DWELLING_FORM_CODE), 'DP_3','B', 'HO_3','B', 'HO_5','B', 'HO_6','B', '9')),'9'),'9'), T1.CUR_TERM_EFF_DT <TRUNC_EFF_DT, IFF(RTRIM(IN_PLCY_ST_CD)='MA', IFF(LTRIM(RTRIM(IN_OIL_SPILL_COV))= 'OIL_SPILL', IFF( IN_DWELLING_FORM_CODE IS NULL,'9', DECODE(RTRIM(IN_DWELLING_FORM_CODE), 'DP_3','1', 'HO_3','1', 'HO_5','1', 'HO_6','1', '9')),'9'),'9') ,'9') AS OUT_ENV_IMP_COV_CD1,
               DECODE(TRUE, T1.CUR_TERM_EFF_DT >=TRUNC_EFF_DT, IFF(RTRIM(IN_PLCY_ST_CD)='MA', IFF(LTRIM(RTRIM(IN_OIL_SPILL_COV))='OIL_SPILL', IFF( IN_DWELLING_FORM_CODE IS NULL,'9', DECODE(RTRIM(IN_DWELLING_FORM_CODE), 'HO_3','B', 'HO_5','B', 'HO_6','B', '9')),'9'),'9') , T1.CUR_TERM_EFF_DT <TRUNC_EFF_DT, IFF(RTRIM(IN_PLCY_ST_CD)='MA', IFF(LTRIM(RTRIM(IN_OIL_SPILL_COV))='OIL_SPILL', IFF( IN_DWELLING_FORM_CODE IS NULL,'9', DECODE(RTRIM(IN_DWELLING_FORM_CODE), 'HO_3','1', 'HO_5','1', 'HO_6','1', '9')),'9'),'9') ,'9') AS OUT_ENV_IMP_COV_CD2,
               IFF( IN_DWELLING_FORM_CODE IS NULL,' ',IFF(RTRIM(IN_DWELLING_FORM_CODE)<>'HO_6',' ', 
               IFF(v_COV_A_LIMIT_AMT >1000 AND v_COV_A_LIMIT_AMT<=9999,'2', 
               IFF(v_COV_A_LIMIT_AMT >=10000 AND v_COV_A_LIMIT_AMT<=19999,'3', 
               IFF(v_COV_A_LIMIT_AMT >=20000 AND v_COV_A_LIMIT_AMT<=29999,'4', 
               IFF(v_COV_A_LIMIT_AMT >=30000 AND v_COV_A_LIMIT_AMT<=39999,'5', 
               IFF(v_COV_A_LIMIT_AMT >=40000 AND v_COV_A_LIMIT_AMT<=49999,'6', 
               IFF(v_COV_A_LIMIT_AMT >=50000 AND v_COV_A_LIMIT_AMT<=59999,'7', 
               IFF(v_COV_A_LIMIT_AMT >=60000 AND v_COV_A_LIMIT_AMT<=69999,'8', 
               IFF(v_COV_A_LIMIT_AMT >=70000,'9', '1')))))))))) AS OUT_LIMIT_OF_LIAB_CD,
               IFF( IN_DWELLING_FORM_CODE IS NULL,' ', DECODE(RTRIM(IN_DWELLING_FORM_CODE),'HO_3','1','HO_4','1','HO_6','1','HO_5','9','DP_3','3','9')) AS OUT_POLICY_PRGRM_CD,
               
           
               CASE 
    WHEN IN_DWELLING_FORM_CODE IS NULL THEN ' '
    WHEN RTRIM(IN_DWELLING_FORM_CODE) = 'HO_5' THEN ' '
    WHEN RTRIM(IN_DWELLING_FORM_CODE) = 'HO_3' AND v_COV_A_LIMIT_AMT <> 0 THEN
        CASE 
            WHEN (v_COV_C_LIMIT_AMT / v_COV_A_LIMIT_AMT) > 0.4 THEN
                DECODE((v_COV_C_LIMIT_AMT / v_COV_A_LIMIT_AMT),
                    0.4, '2',
                    0.5, '3',
                    0.6, '4',
                    0.7, '4',
                    0.75, '6',
                    1, '7',
                    '9')
            ELSE '1'
        END
    ELSE NULL
END AS OUT_COV_C_PCT_CD,
               
               DECODE(TRUE,v_COV_E_LIMIT_AMT=25000,'1', v_COV_E_LIMIT_AMT=50000,'2', v_COV_E_LIMIT_AMT=100000,'3', v_COV_E_LIMIT_AMT=200000,'4', v_COV_E_LIMIT_AMT=300000,'5', v_COV_E_LIMIT_AMT=400000,'6', v_COV_E_LIMIT_AMT=500000,'7', v_COV_E_LIMIT_AMT>500000,'8', v_COV_E_LIMIT_AMT<25000,'9', '9') AS OUT_COV_E_LIAB_CD,
               IFF( IN_DWELLING_FORM_CODE IS NULL,'    ', IFF(IN_COV_CD = 'WATER_BKUP', '0005', IFF(RTRIM(IN_DWELLING_FORM_CODE)='HO_4', LPAD(TO_CHAR(ROUND((v_COV_C_LIMIT_AMT/1000))),4,'0'), IFF(RTRIM(IN_DWELLING_FORM_CODE)='HO_6',LPAD(TO_CHAR(ROUND(((v_COV_A_LIMIT_AMT+v_COV_C_LIMIT_AMT)/1000))),4,'0'), IFF(RTRIM(IN_DWELLING_FORM_CODE)='HO_3' OR RTRIM(IN_DWELLING_FORM_CODE)='HO_5' OR RTRIM(IN_DWELLING_FORM_CODE)='DP_3', LPAD(TO_CHAR(ROUND((v_COV_A_LIMIT_AMT/1000))),4,'0'), IN_ISO_EXPOSURE))))) AS OUT_EXPOSURE,
               ' ' AS OUT_MOB_HOM_END_ID,
               ' ' AS OUT_TIE_DOWN,
               IFF( IN_POLICY_ST_CD IS NULL OR IN_POLICY_ST_CD='NH',' ', IFF(IN_POLICY_ST_CD = 'CT','1', IFF(IN_CONSTRUCTION_YEAR>'1978','9','5'))) AS OUT_STATE_EXCEPTION_INDICATOR_CODE_I,
               ' ' AS OUT_STATE_EXCP_IND_CD2,
               ' ' AS OUT_STATE_EXCP_IND_CD3,
               IFF(IN_BUILD_ORD_COV_COUNT<1,'2',DECODE(TRUE, IN_FORMS_DET_LMT_AMT=25 OR v_BUILD_ORD_LMT_AMT=25,'3', IN_FORMS_DET_LMT_AMT=50 OR v_BUILD_ORD_LMT_AMT=50,'4', IN_FORMS_DET_LMT_AMT=75 OR v_BUILD_ORD_LMT_AMT=75,'5', IN_FORMS_DET_LMT_AMT=100 OR v_BUILD_ORD_LMT_AMT=100,'6', IN_FORMS_DET_LMT_AMT>100 OR v_BUILD_ORD_LMT_AMT>100,'9','2')) AS OUT_ORD_OR_LAW_CD,
               v_OUT_WIND_DEDUCTIBLE_SIZE_CD AS OUT_WIND_DEDUCTIBLE_SIZE_CD,
               '1' AS OUT_WINDSTRM_HAIL_COV_CD,
               '10' AS OUT_COMP_EXCEP_IND,
               '9' AS OUT_STAT_PLAN_IND_CD,
               IFF(RTRIM(LTRIM(IN_DWELLING_FORM_CODE)) IN( 'HO_4', 'HO_6'), '  ',IN_ISO_YEAR_OF_CONSTRUCTION_CODE) AS OUT_YEAR_OF_CONSTRUCTION_CODE,
               DECODE(TRUE, RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '01', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '02', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '05', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '06', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '07', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '10', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '11', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '12', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '15', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '16', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '17', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '20', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '21', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '22', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '25', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '26', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '27', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '30', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '31', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '32', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '35', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '36', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '3', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Police Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '40', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '41', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '42', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '45', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '46', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '47', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '50', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '51', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '52', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '55', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '56', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '57', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '60', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '61', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '62', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Central Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '65', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '66', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '67', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Fire Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '70', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '71', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '72', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'Local Station' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '75', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas', '76', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'All areas except', '77', RTRIM(LTRIM(v_BURGLAR_ALARMS)) = 'No Burglar Alarm' and RTRIM(LTRIM(v_FIRE_ALARMS)) = 'No Fire Alarm' and RTRIM(LTRIM(v_SPRINKLERS)) = 'No sprinkler installed', '80', '80') AS OUT_PROTECTIVE_DEVICE_CODE,
               'BAFA' AS RECORD_TYPE_CD
          FROM Exp_Inputs_before_agg_DW as T1
         INNER JOIN EXP_COVERAGE_EXISTS_COUNT
            ON T1.source_record_id = EXP_COVERAGE_EXISTS_COUNT.source_record_id -- writting query for unconnected lookup function

          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp20
            on lkp20.POL_PK=T1.POL_PK
           AND lkp20.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp20.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp21
            on lkp21.POL_PK=T1.POL_PK
           AND lkp21.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp21.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp22
            on lkp22.POL_PK=T1.POL_PK
           AND lkp22.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp22.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp23
            on lkp23.POL_PK=T1.POL_PK
           AND lkp23.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp23.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp24
            on lkp24.POL_PK=T1.POL_PK
           AND lkp24.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp24.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                     qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp25
            on lkp25.POL_PK=T1.POL_PK
           AND lkp25.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp25.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
          LEFT JOIN (
                select  h.POL_PK as POL_PK ,
                       h.ORIG_POL_PK as ORIG_POL_PK ,
                       h.LIMIT_AMT1 as LIMIT_AMT1 ,
                       LTRIM(RTRIM(h.PREMIUM_SOURCE_C)) as PREMIUM_SOURCE_C,
                       row_number() over(partition by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C order by POL_PK, ORIG_POL_PK, PREMIUM_SOURCE_C) as rn -- Please review the order by columns

                  from BURRPT.S10_ISO_PLOTA_EXTRACT_NE h --qualify rn = 1
                 GROUP BY h.POL_PK,
                          h.ORIG_POL_PK,
                          h.LIMIT_AMT1,
                          h.PREMIUM_SOURCE_C
                  qualify
                  row_number() over(partition by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  order by h.POL_PK,h.ORIG_POL_PK, h.LIMIT_AMT1, h.PREMIUM_SOURCE_C
                  ) = 1
               ) lkp26
            on lkp26.POL_PK=T1.POL_PK
           AND lkp26.ORIG_POL_PK=T1.ORIG_POL_PK
           AND lkp26.PREMIUM_SOURCE_C=T1.PREMIUM_SOURCE_C
       ) 
       
--select distinct v_OUT_TYPE_OF_DED_CD from EXP_SUBMISSION_ID
      
      
     ,
Exp_Assemble_Rows_for_Insert_DW as (
        -- writting query for expression function
SELECT Exp_Inputs_before_agg_DW.source_record_id,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_OIL_SPILL_COV,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_BUILD_ADD1_COV_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_BURGLAR_ALARM_TYPE_CD,
               Exp_Inputs_before_agg_DW.S10_ISO_PLOTA_EXTRACT_ID,
               Exp_Inputs_before_agg_DW.POL_STAT_PREM_PK,
               Exp_Inputs_before_agg_DW.POL_STAT_UNIT_PK,
               Exp_Inputs_before_agg_DW.POL_STAT_PK,
               Exp_Inputs_before_agg_DW.POL_PK,
               Exp_Inputs_before_agg_DW.CVG_PK,
               Exp_Inputs_before_agg_DW.PCAT_UNIT_PK,
               Exp_Inputs_before_agg_DW.LCTN_PK,
               Exp_Inputs_before_agg_DW.ORIG_CVG_PK,
               Exp_Inputs_before_agg_DW.ORIG_POL_PK,
               Exp_Inputs_before_agg_DW.POL_STATE_VRSN,
               Exp_Inputs_before_agg_DW.POL_STATE_EFF_DT,
               Exp_Inputs_before_agg_DW.SRC_POL_ID,
               Exp_Inputs_before_agg_DW.POL_NUM,
               Exp_Inputs_before_agg_DW.POL_SEQ_NUM,
               Exp_Inputs_before_agg_DW.SRC_RISK_UNIT_ID,
               Exp_Inputs_before_agg_DW.SRC_STAT_PREMIUM_ID,
               Exp_Inputs_before_agg_DW.SRC_STAT_UNIT_ID,
               Exp_Inputs_before_agg_DW.SRC_STAT_HEADER_ID,
               Exp_Inputs_before_agg_DW.SRC_CVG_ID,
               Exp_Inputs_before_agg_DW.STATE_CODE,
               Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT,
               Exp_Inputs_before_agg_DW.CUR_TERM_XPTN_DT,
               Exp_Inputs_before_agg_DW.PRI_ADDR_PSTL_CD,
               Exp_Inputs_before_agg_DW.UNIT_TYPE,
               Exp_Inputs_before_agg_DW.SRC_DATA_SET_NBR,
               Exp_Inputs_before_agg_DW.ORIG_POL_STATE_VRSN,
               Exp_Inputs_before_agg_DW.STAT_TRAN_CODE,
               Exp_Inputs_before_agg_DW.OOS_TRANS_F,
               Exp_Inputs_before_agg_DW.REAPPLY_TRANS_F,
               Exp_Inputs_before_agg_DW.BACKOUT_TRANS_F,
               Exp_Inputs_before_agg_DW.PREMIUM_SOURCE_C,
               Exp_Inputs_before_agg_DW.PREMIUM_SOURCE_T,
               Exp_Inputs_before_agg_DW.PREMIUM_SOURCE_SEQ,
               Exp_Inputs_before_agg_DW.CLASS_CODE,
               Exp_Inputs_before_agg_DW.TERRITORY_ID,
               Exp_Inputs_before_agg_DW.PREM_COVERAGE_M,
               Exp_Inputs_before_agg_DW.LIMIT_AMT1,
               Exp_Inputs_before_agg_DW.LIMIT_AMT2,
               Exp_Inputs_before_agg_DW.LIMIT_AMT3,
               Exp_Inputs_before_agg_DW.DED_AMT1,
               Exp_Inputs_before_agg_DW.DED_AMT2,
               Exp_Inputs_before_agg_DW.DED_AMT3,
               Exp_Inputs_before_agg_DW.PREM_WRIT_M,
               Exp_Inputs_before_agg_DW.CNTRB_TO_PREMIUM_F,
               Exp_Inputs_before_agg_DW.RCD_ACTN_TYP,
               Exp_Inputs_before_agg_DW.DATA_DT,
               Exp_Inputs_before_agg_DW.PRCSG_GRP_CD,
               Exp_Inputs_before_agg_DW.POL_STATE_STAT,
               Exp_Inputs_before_agg_DW.CO_CD,
               Exp_Inputs_before_agg_DW.CO_ID,
               Exp_Inputs_before_agg_DW.CO_NAM,
               Exp_Inputs_before_agg_DW.SRC_CO_ID,
               Exp_Inputs_before_agg_DW.CORP_CD,
               Exp_Inputs_before_agg_DW.CORP_NAM,
               Exp_Inputs_before_agg_DW.SRC_CORP_ID,
               Exp_Inputs_before_agg_DW.PROD_CD,
               Exp_Inputs_before_agg_DW.PROD_ID,
               Exp_Inputs_before_agg_DW.PROD_NAM,
               Exp_Inputs_before_agg_DW.SRC_PROD_ID,
               Exp_Inputs_before_agg_DW.LOB_CD,
               Exp_Inputs_before_agg_DW.LOB_NAM,
               Exp_Inputs_before_agg_DW.RCD_TYP,
               Exp_Inputs_before_agg_DW.SRC_CD,
               Exp_Inputs_before_agg_DW.LMT_1_DESC,
               Exp_Inputs_before_agg_DW.LMT_1_AMT,
               Exp_Inputs_before_agg_DW.LMT_2_DESC,
               Exp_Inputs_before_agg_DW.LMT_2_AMT,
               Exp_Inputs_before_agg_DW.LMT_3_DESC,
               Exp_Inputs_before_agg_DW.LMT_3_AMT,
               Exp_Inputs_before_agg_DW.DDCTBL_1_DESC,
               Exp_Inputs_before_agg_DW.DDCTBL_1_AMT,
               Exp_Inputs_before_agg_DW.DDCTBL_2_DESC,
               Exp_Inputs_before_agg_DW.DDCTBL_2_AMT,
               Exp_Inputs_before_agg_DW.DDCTBL_3_DESC,
               Exp_Inputs_before_agg_DW.DDCTBL_3_AMT,
               Exp_Inputs_before_agg_DW.BUS_PPTY_INCRSD_LMT,
               Exp_Inputs_before_agg_DW.LMT_BCL,
               Exp_Inputs_before_agg_DW.LMT_BOAT,
               Exp_Inputs_before_agg_DW.LMT_BOAT_EQPT,
               Exp_Inputs_before_agg_DW.LMT_BOAT_MOTR,
               Exp_Inputs_before_agg_DW.LMT_BOAT_TRLR,
               Exp_Inputs_before_agg_DW.LMT_CAMERA,
               Exp_Inputs_before_agg_DW.LMT_COINS,
               Exp_Inputs_before_agg_DW.LMT_ELTRNCS,
               Exp_Inputs_before_agg_DW.LMT_ELTRNCS_OFF_PRMSES,
               Exp_Inputs_before_agg_DW.LMT_ELTRNCS_ON_PRMSES,
               Exp_Inputs_before_agg_DW.LMT_ELTRNCS_IN_VEH,
               Exp_Inputs_before_agg_DW.LMT_ELTRNCS_OUT_VEH,
               Exp_Inputs_before_agg_DW.LMT_FINE_ART,
               Exp_Inputs_before_agg_DW.LMT_FINE_ART_EXCLDG_BRKAGE,
               Exp_Inputs_before_agg_DW.LMT_FINE_ART_INCLG_BRKAGE,
               Exp_Inputs_before_agg_DW.LMT_FINE_ART_DRBL,
               Exp_Inputs_before_agg_DW.LMT_FINE_ART_FRAGILE,
               Exp_Inputs_before_agg_DW.LMT_FINE_ART_PPR,
               Exp_Inputs_before_agg_DW.LMT_FURS,
               Exp_Inputs_before_agg_DW.LMT_GOLF,
               Exp_Inputs_before_agg_DW.LMT_GOLF_CART,
               Exp_Inputs_before_agg_DW.LMT_GUNS,
               Exp_Inputs_before_agg_DW.LMT_JEWELERY,
               Exp_Inputs_before_agg_DW.LMT_JEWELERY_IN_VALT,
               Exp_Inputs_before_agg_DW.LMT_JEWELERY_NO_VALT,
               Exp_Inputs_before_agg_DW.LMT_MONEY,
               Exp_Inputs_before_agg_DW.LMT_MUSICL_INSTMT,
               Exp_Inputs_before_agg_DW.LMT_MUSICL_INSTMT_NON_PFSNL,
               Exp_Inputs_before_agg_DW.LMT_MUSICL_INSTMT_PFSNL,
               Exp_Inputs_before_agg_DW.LMT_OTHR_STRCT_1,
               Exp_Inputs_before_agg_DW.LMT_OTHR_STRCT_2,
               Exp_Inputs_before_agg_DW.LMT_OTHR_STRCT_3,
               Exp_Inputs_before_agg_DW.LMT_OTHR_STRCT_4,
               Exp_Inputs_before_agg_DW.LMT_BLDG_ADDNS,
               Exp_Inputs_before_agg_DW.LMT_SCRTYS,
               Exp_Inputs_before_agg_DW.LMT_SLVRW,
               Exp_Inputs_before_agg_DW.LMT_STAMPS,
               Exp_Inputs_before_agg_DW.ACCTG_DT,
               Exp_Inputs_before_agg_DW.RISK_UNIT_VAL,
               Exp_Inputs_before_agg_DW.RISK_UNIT_PSTL_CD,
               Exp_Inputs_before_agg_DW.RISK_UNIT_CSTRN_TYP,
               Exp_Inputs_before_agg_DW.RISK_UNIT_NUM_FMLYS,
               Exp_Inputs_before_agg_DW.RISK_UNIT_CONDO_FLG,
               Exp_Inputs_before_agg_DW.RISK_UNIT_HEAT_TYP,
               Exp_Inputs_before_agg_DW.RISK_UNIT_YR_OF_CSTRN,
               Exp_Inputs_before_agg_DW.RISK_UNIT_LEAD_XCLSN_FLG,
               Exp_Inputs_before_agg_DW.RISK_UNIT_DELEADED_FLG,
               Exp_Inputs_before_agg_DW.RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               Exp_Inputs_before_agg_DW.PTCTV_DVC_BRGLR_ALM_TYP,
               Exp_Inputs_before_agg_DW.PTCTV_DVC_FIRE_ALM_TYP,
               Exp_Inputs_before_agg_DW.PTCTV_DVC_SPRNKLR_TYP,
               Exp_Inputs_before_agg_DW.PTCTV_DVC_CERT_FLG,
               Exp_Inputs_before_agg_DW.PTCTV_DVC_PCT_DSCNT,
               Exp_Inputs_before_agg_DW.RISK_UNIT_BUS_USE_FLG,
               Exp_Inputs_before_agg_DW.BUS_CLAS,
               Exp_Inputs_before_agg_DW.DAYCARE_NUM_OF_PRSNS,
               Exp_Inputs_before_agg_DW.INCDTL_OFC_PRMSES_CD,
               Exp_Inputs_before_agg_DW.INCDTL_OFC_OTHR_THAN_INSD_CD,
               Exp_Inputs_before_agg_DW.EARTHQK_ZONE,
               Exp_Inputs_before_agg_DW.EARTHQK_MSNRY_FLG,
               Exp_Inputs_before_agg_DW.NAMD_STORM_BUYDOWN_OPT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.NAMD_STORM_DDCTBL_OPT,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_PMRY_LCTN_NUM_A_TNK,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_1_NUM_A_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_2_NUM_A_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_3_NUM_A_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_4_NUM_A_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_PMRY_LCTN_NUM_B_TNK,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_1_NUM_B_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_2_NUM_B_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_3_NUM_B_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_4_NUM_B_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_PMRY_LCTN_NUM_C_TNK,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_1_NUM_C_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_2_NUM_C_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_3_NUM_C_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_4_NUM_C_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_PMRY_LCTN_NUM_D_TNK,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_1_NUM_D_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_2_NUM_D_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_3_NUM_D_TNKS,
               Exp_Inputs_before_agg_DW.FUEL_LBLTY_LCTN_4_NUM_D_TNKS,
               Exp_Inputs_before_agg_DW.BOAT_LEN,
               Exp_Inputs_before_agg_DW.BOAT_YR_BLT,
               Exp_Inputs_before_agg_DW.BOAT_USG,
               Exp_Inputs_before_agg_DW.BOAT_EQPT,
               Exp_Inputs_before_agg_DW.BOAT_MOTR_HP,
               Exp_Inputs_before_agg_DW.BOAT_MOTR_YR_BLT,
               Exp_Inputs_before_agg_DW.BOAT_TRLR_YR_BLT,
               Exp_Inputs_before_agg_DW.WTRCRFT_LEN,
               Exp_Inputs_before_agg_DW.WTRCRFT_MOTR_HP,
               Exp_Inputs_before_agg_DW.WTRCRFT_NAVGN_FRM,
               Exp_Inputs_before_agg_DW.WTRCRFT_NAVGN_TO,
               Exp_Inputs_before_agg_DW.WTRCRFT_SPD,
               Exp_Inputs_before_agg_DW.WTRCRFT_TYP,
               Exp_Inputs_before_agg_DW.MOTORIZED_LAND_CNVYC_TYP,
               Exp_Inputs_before_agg_DW.MOTORIZED_LAND_CNVYC_SPD,
               Exp_Inputs_before_agg_DW.MOTORIZED_LAND_CNVYC_RACING_US,
               Exp_Inputs_before_agg_DW.SNOWMOBILE_YR,
               Exp_Inputs_before_agg_DW.SNOWMOBILE_ENGN_CC,
               Exp_Inputs_before_agg_DW.RISK_UNIT_CUSTM_EQPT_FLG,
               Exp_Inputs_before_agg_DW.RISK_UNIT_OPER_ACDT_FLG,
               Exp_Inputs_before_agg_DW.WRKRS_COMP_NUM_OF_INSVNTS,
               Exp_Inputs_before_agg_DW.WRKRS_COMP_NUM_OF_OUTSVNTS,
               Exp_Inputs_before_agg_DW.ADDL_RSDNC_CT,
               Exp_Inputs_before_agg_DW.VEH_CT,
               Exp_Inputs_before_agg_DW.INCDTL_OCPNY_CT,
               Exp_Inputs_before_agg_DW.INEXP_OPER_CT,
               Exp_Inputs_before_agg_DW.UNINSD_MTRST_CVG_FLG,
               Exp_Inputs_before_agg_DW.ADDL_RSDNC_CVG_FLG,
               Exp_Inputs_before_agg_DW.ADDL_RSDNC_HO2470_CVG_FLG,
               Exp_Inputs_before_agg_DW.BUS_PURST_CT,
               Exp_Inputs_before_agg_DW.RV_CT_UMB_COV,
               Exp_Inputs_before_agg_DW.UNLIC_RV_CT,
               Exp_Inputs_before_agg_DW.RNTL_CT,
               Exp_Inputs_before_agg_DW.SAILBOAT_25_CT,
               Exp_Inputs_before_agg_DW.SAILBOAT_35_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_15_50_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_15_100_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_15_150_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_26_50_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_26_100_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_26_150_CT,
               Exp_Inputs_before_agg_DW.PWRBOAT_26_225_CT,
               Exp_Inputs_before_agg_DW.BLNKT_CVG_FLG,
               Exp_Inputs_before_agg_DW.EARTHQK_ZONE2,
               Exp_Inputs_before_agg_DW.LOC_OIL_TANK,
               Exp_Inputs_before_agg_DW.WTRCRFT_LEN_C,
               Exp_Inputs_before_agg_DW.WTRCRFT_MOTR_HRSPWR,
               Exp_Inputs_before_agg_DW.LOC_OIL_TANK2,
               Exp_Inputs_before_agg_DW.LOC_OIL_TANK3,
               Exp_Inputs_before_agg_DW.LOC_OIL_TANK4,
               Exp_Inputs_before_agg_DW.LOC_OIL_TANK5,
               Exp_Inputs_before_agg_DW.LOC_OIL_TANK6,
               Exp_Inputs_before_agg_DW.BUS_PURST_PRMM,
               Exp_Inputs_before_agg_DW.PSTL_CD,
               Exp_Inputs_before_agg_DW.TERRTY_CD,
               Exp_Inputs_before_agg_DW.BOSTON_DIST,
               Exp_Inputs_before_agg_DW.FIRE_DIST,
               Exp_Inputs_before_agg_DW.FIRE_DIST_EFF_DT,
               Exp_Inputs_before_agg_DW.THOU_FT_FRM_HDRNT_FLG,
               Exp_Inputs_before_agg_DW.FIVE_MILES_FRM_FIRE_DEPT_FLG,
               Exp_Inputs_before_agg_DW.FIRE_PTCTN_CLAS,
               Exp_Inputs_before_agg_DW.MILES_FRM_WTR,
               Exp_Inputs_before_agg_DW.WTR_DSTNC_CD,
               Exp_Inputs_before_agg_DW.WTR_DSTNC_FLG,
               Exp_Inputs_before_agg_DW.STORM_SHUTTER_FLG,
               Exp_Inputs_before_agg_DW.LEAD_PAINT_FLG,
               Exp_Inputs_before_agg_DW.COML_ZONEG_FLG,
               Exp_Inputs_before_agg_DW.STRCT_TYP,
               Exp_Inputs_before_agg_DW.NUM_OF_STORIES,
               Exp_Inputs_before_agg_DW.NUM_OF_STORIES_SRC,
               Exp_Inputs_before_agg_DW.SQ_FT,
               Exp_Inputs_before_agg_DW.SQ_FT_SRC,
               Exp_Inputs_before_agg_DW.HSE_STYL,
               Exp_Inputs_before_agg_DW.HSE_STYL_SRC,
               Exp_Inputs_before_agg_DW.NUM_OF_ACRES,
               Exp_Inputs_before_agg_DW.YR_BLT,
               Exp_Inputs_before_agg_DW.YR_PRCHD,
               Exp_Inputs_before_agg_DW.PRCHS_PRC,
               Exp_Inputs_before_agg_DW.MKT_VAL,
               Exp_Inputs_before_agg_DW.RPLMT_CST,
               Exp_Inputs_before_agg_DW.NMD_STORM_AMT,
               Exp_Inputs_before_agg_DW.DWLG_USE_OCPNY,
               Exp_Inputs_before_agg_DW.OWNR_OCPYD_FLG,
               Exp_Inputs_before_agg_DW.SALE_VCNT_RNTD_FLG,
               Exp_Inputs_before_agg_DW.BUS_ACTVTYS_FLG,
               Exp_Inputs_before_agg_DW.DAY_CARE_FLG,
               Exp_Inputs_before_agg_DW.SCNDY_HME_FLG,
               Exp_Inputs_before_agg_DW.PMRY_HME_INSD_FLG,
               Exp_Inputs_before_agg_DW.CSTRN_TYP,
               Exp_Inputs_before_agg_DW.SPCL_CSTRN_FLG,
               Exp_Inputs_before_agg_DW.NUM_OF_FMLYS,
               Exp_Inputs_before_agg_DW.NUM_IN_FIRE_DIV,
               Exp_Inputs_before_agg_DW.NUM_OF_RSDNTS,
               Exp_Inputs_before_agg_DW.ROOF_TYP,
               Exp_Inputs_before_agg_DW.HEATG_SYS,
               Exp_Inputs_before_agg_DW.HEATG_SYS_FUEL_TYP,
               Exp_Inputs_before_agg_DW.HME_PSTL_CD,
               Exp_Inputs_before_agg_DW.HME_NUM_UNITS,
               Exp_Inputs_before_agg_DW.HME_PRI_PROP_FLG,
               Exp_Inputs_before_agg_DW.HME_RNTL_PROP_FLG,
               Exp_Inputs_before_agg_DW.HME_UNDLYG_LMT,
               Exp_Inputs_before_agg_DW.UNDLYG_POL_CD,
               Exp_Inputs_before_agg_DW.UNDLYG_AUTO_POL_CO,
               Exp_Inputs_before_agg_DW.UNDLYG_AUTO_POL_NUM,
               Exp_Inputs_before_agg_DW.ADDL_VEH_CT,
               Exp_Inputs_before_agg_DW.AUTO_POL_CRDT,
               Exp_Inputs_before_agg_DW.YTHFL_OPER_SRCHG_FLG,
               Exp_Inputs_before_agg_DW.YTHFL_OPER_SRCHG,
               Exp_Inputs_before_agg_DW.YTHFL_OPER_SRCHG_CT,
               Exp_Inputs_before_agg_DW.UNDLYG_PPTY_POL_CO,
               Exp_Inputs_before_agg_DW.UNDLYG_PPTY_POL_NUM,
               Exp_Inputs_before_agg_DW.ADDL_PPTY_CT,
               Exp_Inputs_before_agg_DW.PPTY_POL_CRDT,
               Exp_Inputs_before_agg_DW.UNDLYG_WTRCRFT_POL_CO,
               Exp_Inputs_before_agg_DW.WTRCRFT_CT,
               Exp_Inputs_before_agg_DW.ATTACH_PT,
               Exp_Inputs_before_agg_DW.INSD_INCORP_FLG,
               Exp_Inputs_before_agg_DW.RV_CT_UMB_PRODUCT,
               Exp_Inputs_before_agg_DW.QTED_PRMM_NE,
               Exp_Inputs_before_agg_DW.ASSIST_LVNG_FLG,
               Exp_Inputs_before_agg_DW.AT_FLT_FLG,
               Exp_Inputs_before_agg_DW.CLERICAL_EMPLOYEE_FLG,
               Exp_Inputs_before_agg_DW.INCDNTL_OCC_FLG,
               Exp_Inputs_before_agg_DW.HM_OFFICE_FLG,
               Exp_Inputs_before_agg_DW.POOL_FLG,
               Exp_Inputs_before_agg_DW.HM_SRVCS_FLG,
               Exp_Inputs_before_agg_DW.SPA_FLG,
               Exp_Inputs_before_agg_DW.TCHR_FLG,
               Exp_Inputs_before_agg_DW.TRUST_FLG,
               Exp_Inputs_before_agg_DW.QTED_PRMM_PAL,
               Exp_Inputs_before_agg_DW.UNDLYG_AUTO_POL_LMT,
               Exp_Inputs_before_agg_DW.UNDLYG_PPTY_POL_LMT,
               Exp_Inputs_before_agg_DW.PI_LIAB_CVG_FLG,
               Exp_Inputs_before_agg_DW.UMB_OTHR_EFF_DT,
               Exp_Inputs_before_agg_DW.UMB_OTHR_LMT,
               Exp_Inputs_before_agg_DW.UMB_OTHR_LMT_2,
               Exp_Inputs_before_agg_DW.UMB_PSTL_CD,
               Exp_Inputs_before_agg_DW.UMB_NUM_OF_FMLYS,
               Exp_Inputs_before_agg_DW.UMB_VEH_TYP_CD,
               Exp_Inputs_before_agg_DW.UMB_OPER_DOB,
               Exp_Inputs_before_agg_DW.UMB_VEH_OWNRSP_STAT,
               Exp_Inputs_before_agg_DW.AUTO_UNDLYG_LMT,
               Exp_Inputs_before_agg_DW.RV_TYP,
               Exp_Inputs_before_agg_DW.WTRCRFT_BOAT_TYP,
               Exp_Inputs_before_agg_DW.WTRCRFT_LNGTH,
               Exp_Inputs_before_agg_DW.WTRCRFT_ENGINE_SIZE,
               Exp_Inputs_before_agg_DW.lkp_POL_STATE_EFF_DT AS SUPER_PREF_ROW_TRANS_EFF_DT,
               Exp_Inputs_before_agg_DW.ISO_MODULE,
               Exp_Inputs_before_agg_DW.ISO_COMPANY_NUMBER,
               Exp_Inputs_before_agg_DW.ISO_TRANSACTION_TYPE_CODE,
               Exp_Inputs_before_agg_DW.ISO_ACCOUNTING_DATE,
               Exp_Inputs_before_agg_DW.ISO_INCEPTION_DATE,
               Exp_Inputs_before_agg_DW.ISO_TRANS_EFFECTIVE_DATE,
               Exp_Inputs_before_agg_DW.ISO_TRANS_EXPIRATION_DATE,
               Exp_Inputs_before_agg_DW.ISO_STATE_CODE,
               Exp_Inputs_before_agg_DW.ISO_TERRITORY_CODE,
               Exp_Inputs_before_agg_DW.ISO_ANNUAL_STMT_LOB_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_PERSONAL_LINES_STATESTICAL_PLAN_SUBLINE_CODE AS ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_EXCEPTION_CODE AS ISO_EXCEPTION_CODE,
               Exp_Inputs_before_agg_DW.ISO_POLICY_FORM_CODE,
               Exp_Inputs_before_agg_DW.ISO_NUMBER_OF_FAMILIES_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_ORDINANCE_OR_LAW_COVERAGE_CODE AS ISO_ORD_OR_LAW_COV_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_STATUS_CODE AS ISO_STATUS_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_WIND_DEDUCTIBLE_SIZE_CD AS ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               Exp_Inputs_before_agg_DW.ISO_CONSTRUCTION_CODE,
               Exp_Inputs_before_agg_DW.ISO_PROTECTION_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_MOLD_COVERAGE_CODE AS ISO_MOLD_COVERAGE_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_TYPE_OF_DED_CD AS ISO_TYPE_OF_DED_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_FIRE_DED_SIZE_CD AS ISO_DEDUCTIBLE_SIZE_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_YEAR_OF_CONSTRUCTION_CODE AS ISO_YEAR_OF_CONSTRUCTION_CODE,
               Exp_Inputs_before_agg_DW.ISO_BUILDING_AND_CONTENTS_CODE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_EXPOSURE AS ISO_EXPOSURE,
               Exp_Inputs_before_agg_DW.ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               Exp_Inputs_before_agg_DW.ISO_STATE_EXCEP_INDIC_CODE_I,
               Exp_Inputs_before_agg_DW.ISO_ZIP_CODE,
               Exp_Inputs_before_agg_DW.ISO_STATE_EXCEP_INDIC_CODE_II,
               Exp_Inputs_before_agg_DW.ISO_STATE_EXCEP_INDIC_CODE_III,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_WINDSTRM_HAIL_COV_CD AS ISO_WINDTORM_HAIL_COV_IND_CD,
               Exp_Inputs_before_agg_DW.ISO_COMP_PROG_EXCEP_INDIC,
               Exp_Inputs_before_agg_DW.ISO_STATIS_PLAN_INDIC_CODE,
               Exp_Inputs_before_agg_DW.ISO_PREMIUM_AMOUNT,
               Exp_Inputs_before_agg_DW.ISO_PREMIUM_RECORD_ID,
               Exp_Inputs_before_agg_DW.ISO_POSITIONS_FOR_COMPANY_USE,
               Exp_Inputs_before_agg_DW.ISO_LOSS_SETTLE_IND_CODE,
               Exp_Inputs_before_agg_DW.ISO_CLASSIFICATION_CODE,
               Exp_Inputs_before_agg_DW.ISO_TYPE_OF_EQUAKE_COV,
               Exp_Inputs_before_agg_DW.ISO_EQ_ATTACH_INDIC_CODE,
               Exp_Inputs_before_agg_DW.ISO_ADD_EQ_EXPOSURE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_ENV_IMP_COV_CD1 AS ISO_ENV_IMP_COV_CODE_I,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_ENV_IMP_COV_CD2 AS ISO_ENV_IMP_COV_CODE_II,
               Exp_Inputs_before_agg_DW.ISO_UMB_ATTACH_HO_PL,
               Exp_Inputs_before_agg_DW.ISO_UMB_ATTACH_PERS_AUTO,
               Exp_Inputs_before_agg_DW.ISO_UMB_UNDERLY_HO_PL_INDIC,
               Exp_Inputs_before_agg_DW.ISO_UMB_UNDERLY_AUTO_INDIC,
               Exp_Inputs_before_agg_DW.ISO_UMB_RISK_PROFILE,
               Exp_Inputs_before_agg_DW.ISO_LIMIT_OF_LIAB_CODE,
               Exp_Inputs_before_agg_DW.ISO_UMB_UNINS_UNDERINS_LLC,
               Exp_Inputs_before_agg_DW.ISO_UMB_SELF_INS_RETENTION,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_STATUS_COV_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_WIND_DED_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_PERS_PROP_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_FRAUD_COV_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_INC_LIMITC_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_PPRC_COV_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_RNTL_OTHR_COV_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.BUILD_ADDC_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.BUS_PUR_C_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.FRAUD_COUNT AS OUT_FRAUD_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OIL_SPILL_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.COVA_SPCL_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.FARM_LIABC_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.INC_OCP_OC_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.INC_OCPNCY_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.LOSS_ASMTC_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.PI_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.RES_REN_C_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.RES_REN_TH_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.SINK_COV_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.SPCL_CMPTR_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.STRUC_RENT_C_COUNT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.THREE_FAM_COUNT,
               Exp_Inputs_before_agg_DW.CREATE_DT,
               Exp_Inputs_before_agg_DW.CREATE_TS,
               Exp_Inputs_before_agg_DW.CREATED_BY,
               Exp_Inputs_before_agg_DW.BATCH_START_DT,
               Exp_Inputs_before_agg_DW.BATCH_END_DT,
               Exp_Inputs_before_agg_DW.RPRTG_PERIOD_START_DT,
               Exp_Inputs_before_agg_DW.RPRTG_PERIOD_END_DT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_COV_A_LIMIT_AMT AS EXISTS_COV_A_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_COV_B_LIMIT_AMT AS EXISTS_COV_B_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_COV_C_LIMIT_AMT AS EXISTS_COV_C_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_COV_D_LIMIT_AMT AS EXISTS_COV_D_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_COV_E_LIMIT_AMT AS EXISTS_COV_E_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_COV_F_LIMIT_AMT AS EXISTS_COV_F_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_DED_AMT AS EXISTS_COV_A_DED_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_DED_AMT AS EXISTS_COV_C_DED_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_DED_AMT AS EXISTS_POL_DED_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.MOLD_SEC1_LIAB_LMT_AMT_TXT AS EXISTS_MOLD_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.MOLD_SEC2_LIAB_LMT_AMT_TXT AS EXISTS_MOLD_II_LMT_AMT,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_BUILD_ORD_LMT_AMT AS EXISTS_BUILD_ORD_LMT_AMT,
               Exp_Inputs_before_agg_DW.BCEG,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_PROTECTIVE_DEVICE_CODE AS ISO_PROTECTIVE_DEVICES,
               Exp_Inputs_before_agg_DW.ISO_LOSS_HISTORY_CD,
               Exp_Inputs_before_agg_DW.IMPACT_RESIST_GLASS_FLG,
               Exp_Inputs_before_agg_DW.HURRICANE_SHUTTERS_FLG,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_TYPE_OF_DED_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_POLICY_PRGRM_CD AS ISO_POLICY_PROGRAM,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_COV_C_PCT_CD AS ISO_COVERAGE_C_PERCENTAGE,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_COV_E_LIAB_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_LIMIT_OF_LIAB_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_THEFT_DED_SIZE_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_MOB_HOM_END_ID,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_TIE_DOWN,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.OUT_HOME_BUS_CLASSIFICATION_CODE AS ISO_HOME_BUSI_CLASS_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.ISO_ROOF_INSTALL_YR_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.ISO_RISK_IND_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.ISO_RISK_IND_CD_II,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_FIRE_ALARM_TYPE_CD,
               EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.IN_SPRINKLER_SYSTEM_TYPE_CD,
               NULL AS ISO_PROTECTION_DEVICE_CODE,
               ISO_POLICY_FORM_CODE AS v_ISO_POLICY_FORM_CODE,
               IFF( ROOF_TYP IS NULL OR POSITION('COMP',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_COMP_IND,
               IFF( ROOF_TYP IS NULL OR POSITION('ROLL',UPPER(ROOF_TYP)) = 0 AND POSITION('BU',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_ROLL_IND,
               IFF( ROOF_TYP IS NULL OR POSITION('TIL',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_TIL_IND,
               IFF( ROOF_TYP IS NULL OR POSITION('SHA',UPPER(ROOF_TYP)) = 0 AND POSITION('WO',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_SHA_IND,
               IFF( ROOF_TYP IS NULL OR POSITION('META',UPPER(ROOF_TYP)) = 0 AND POSITION('TIN',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_METAL_IND,
               IFF( ROOF_TYP IS NULL OR POSITION('SLA',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_SLATE_IND,
               IFF( ROOF_TYP IS NULL OR POSITION('ASPH',UPPER(ROOF_TYP)) = 0,'N','Y') AS v_ROOF_ASPHALT_IND,
               IFF(v_ISO_POLICY_FORM_CODE = '2' OR v_ISO_POLICY_FORM_CODE = '3' OR v_ISO_POLICY_FORM_CODE = '5' OR v_ISO_POLICY_FORM_CODE = '8', IFF(ISO_WINDTORM_HAIL_COV_IND_CD = '1', IFF(v_ROOF_COMP_IND = 'Y','A', IFF(v_ROOF_ROLL_IND = 'Y','B', IFF(v_ROOF_TIL_IND = 'Y','C', IFF(v_ROOF_SHA_IND = 'Y','D', IFF(v_ROOF_METAL_IND ='Y','E', IFF(v_ROOF_SLATE_IND = 'Y','F', IFF(v_ROOF_ASPHALT_IND = 'Y','G', 'H'))))))), IFF(ISO_WINDTORM_HAIL_COV_IND_CD = '2', IFF(v_ROOF_COMP_IND = 'Y','1', IFF(v_ROOF_ROLL_IND = 'Y','2', IFF(v_ROOF_TIL_IND = 'Y','3', IFF(v_ROOF_SHA_IND = 'Y','4', IFF(v_ROOF_METAL_IND ='Y','5', IFF(v_ROOF_SLATE_IND = 'F','6', IFF(v_ROOF_ASPHALT_IND = 'Y','6', '8'))))))), ' ')), IFF(v_ISO_POLICY_FORM_CODE = '6', IFF(ISO_WINDTORM_HAIL_COV_IND_CD = '1', 'T', IFF(ISO_WINDTORM_HAIL_COV_IND_CD = '2', 'S', ' ')), ' ')) AS v_ISO_ROOF_SURFACE_LOSS_CD,
               IFF( SUPER_PREF_ROW_TRANS_EFF_DT IS NULL, ISO_TRANSACTION_TYPE_CODE, IFF(SUPER_PREF_ROW_TRANS_EFF_DT>Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT,'2',ISO_TRANSACTION_TYPE_CODE)) AS out_ISO_TRANSACTION_TYPE_CD,
               DECODE(TRUE, LTRIM(RTRIM(CO_CD)) = 'BHPIC', '10', LTRIM(RTRIM(CO_CD)) = 'BHSIC', '10', LTRIM(RTRIM(CO_CD)) = 'BHPFIC', '10', ISO_COMP_PROG_EXCEP_INDIC) AS OUT_ISO_COMP_PROG_EXCEP_INDIC,
               IFF( SUPER_PREF_ROW_TRANS_EFF_DT IS NULL,'N','Y') AS EXISTS_PREF_SUPER_PREF_IND,
               IFF(LTRIM(RTRIM(IN_OIL_SPILL_COV)) = 'OIL_SPILL','Y','N') AS EXISTS_OIL_SPILL_COV_IND,
               IFF(IN_STATUS_COV_COUNT > 0,'Y','N') AS EXISTS_STATUS_COV_IND,
               IFF(IN_BUILD_ADD1_COV_COUNT > 0,'Y','N') AS EXISTS_BUILD_ADD1_COV_IND,
               IFF(IN_RNTL_OTHR_COV_COUNT > 0,'Y','N') AS EXISTS_RNTL_OTHR_COV_IND,
               IN_WIND_DED_AMT AS EXISTS_WIND_HAIL_DED_AMT,
               IFF(IN_PERS_PROP_COUNT > 0,'Y','N') AS EXISTS_PERS_PROP_COV_IND,
               IFF(OUT_FRAUD_COUNT > 0,'Y','N') AS EXISTS_FRAUD_COV_IND,
               IFF(IN_PPRC_COV_COUNT > 0,'Y','N') AS EXISTS_PP_RC_COV_IND,
               IFF(IN_INC_LIMITC_COUNT > 0, 'Y','N') AS EXISTS_INC_LMT_C_COV_IND,
               IFF(BUILD_ADDC_COUNT > 0, 'Y','N') AS EXISTS_BUILD_ADDC_COV_IND,
               IFF(BUS_PUR_C_COUNT > 0, 'Y','N') AS EXISTS_BUS_PUR_C_COV_IND,
               IFF(COVA_SPCL_COUNT > 0, 'Y','N') AS EXISTS_COVA_SPCL_COV_IND,
               IFF(FARM_LIABC_COUNT > 0, 'Y','N') AS EXISTS_FARM_LIABC_COV_IND,
               IFF(INC_OCP_OC_COUNT> 0, 'Y','N') AS EXISTS_INC_OCP_OC_COV_IND,
               IFF(INC_OCPNCY_COUNT > 0, 'Y','N') AS EXISTS_INC_OCPNCY_COV_IND,
               IFF(LOSS_ASMTC_COUNT > 0, 'Y','N') AS EXISTS_LOSS_ASMTC_COV_IND,
               IFF(PI_COUNT > 0, 'Y','N') AS EXISTS_PI_COV_IND_COV_IND,
               IFF(RES_REN_C_COUNT > 0, 'Y','N') AS EXISTS_RES_REN_C_COV_IND,
               IFF(RES_REN_TH_COUNT > 0, 'Y','N') AS EXISTS_RES_REN_TH_COV_IND,
               IFF(SINK_COV_COUNT > 0, 'Y','N') AS EXISTS_SINK_COV_IND,
               IFF(SPCL_CMPTR_COUNT > 0, 'Y','N') AS EXISTS_SPCL_CMPTR_COV_IND,
               IFF(STRUC_RENT_C_COUNT > 0, 'Y','N') AS EXISTS_STRUC_RENC_COV_IND,
               IFF(THREE_FAM_COUNT > 0, 'Y','N') AS EXISTS_THREE_FAM_COV_IND,
               IFF( Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT IS NULL,' ', IFF(Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT >=TRY_TO_DATE('2016-07-01', 'YYYY-MM-DD'),v_ISO_ROOF_SURFACE_LOSS_CD,' ')) AS ISO_ROOF_SURFACE_LOSS_CD,
               IFF( Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT IS NULL,' ', IFF(Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT >=TRY_TO_DATE('2016-07-01', 'YYYY-MM-DD'),EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.ISO_ROOF_INSTALL_YR_CD,' ')) AS o_ISO_ROOF_INSTALL_YR_CD,
               DECODE(TRUE, EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.ISO_RISK_IND_CD IS NULL,' ', LTRIM(RTRIM(EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.ISO_RISK_IND_CD))) AS o_ISO_RISK_IND_CD,
               IFF( Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT IS NULL,' ', IFF(Exp_Inputs_before_agg_DW.CUR_TERM_EFF_DT >=TRY_TO_DATE('2016-07-01', 'YYYY-MM-DD'), Exp_Inputs_before_agg_DW.ISO_RISK_IND_CD_II,' ')) AS o_ISO_RISK_IND_CD_II,
               DECODE(TRUE, LENGTH(LTRIM(RTRIM(IN_BURGLAR_ALARM_TYPE_CD))) >0,IN_BURGLAR_ALARM_TYPE_CD,'None of the Above') AS OUT_BURGLAR_TYPES,
               DECODE(TRUE, LENGTH(LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))) >0,IN_FIRE_ALARM_TYPE_CD,'None of the Above') AS OUT_FIRE_ALARM_TYPES,
               DECODE(TRUE, LENGTH(LTRIM(RTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD))) >0,IN_SPRINKLER_SYSTEM_TYPE_CD,'None of the Above') AS OUT_SPRINKLER_TYPES,
               'NON_PPCIC' AS COMPANY_CODE,
               'FIRE' AS FIRE_RECORD_TYPE_CD,
               'BURGLAR' AS BURGLAR_RECORD_TYPE_CD,
               'SPRINKLERS' AS SPRINKLER_TYPE_CD,
               DECODE(TRUE, LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))='Partial Sprinklers', 'AUTOMATIC SPRINKLERS IN ALL AREAS', LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))='Complete Sprinklers', 'AUTOMATIC SPRINKLERS IN ALL AREAS', 'NO SPRINKLERS INSTALLED') AS SPRINKLER_LEAK_VALUES,
               DECODE(TRUE, LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))='Partial Sprinklers', 'Partial system', LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))='Complete Sprinklers', 'Complete System', LENGTH(LTRIM(RTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD))) >1, LTRIM(RTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD)), IN_SPRINKLER_SYSTEM_TYPE_CD IS NULL,'Not Applicable', 'Not Applicable') AS OUT_SPRINKLER_DWH_VAL,
               TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_SPRINKLERS.MAPPING_VALUE,
               TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE.MAPPING_VALUE AS TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE_MAPPING_VALUE,
               TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY.MAPPING_VALUE AS TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY_MAPPING_VALUE
          FROM Exp_Inputs_before_agg_DW
         INNER JOIN EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW
            ON Exp_Inputs_before_agg_DW.source_record_id = EXP_HO_SPECIFIC_ISO_PREM_FIELDS_DW.source_record_id
          left join -- writting query for lookup function
 (
                SELECT LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.RECORD_TYPE_DESC)) as RECORD_TYPE_DESC,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.MAPPING_VALUE)) as MAPPING_VALUE,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.COMPANY)) as COMPANY,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.CURRENT_LIST_OF_VALUES)) as CURRENT_LIST_OF_VALUES,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.RECORD_TYPE_CD)) as RECORD_TYPE_CD,
                       row_number() over(partition by COMPANY, CURRENT_LIST_OF_VALUES, RECORD_TYPE_CD order by COMPANY, CURRENT_LIST_OF_VALUES, RECORD_TYPE_CD) as rn -- Please review the order by columns

                  FROM BURRPT.ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF qualify rn = 1
               ) TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_SPRINKLERS
            on TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_SPRINKLERS.COMPANY='NON_PPCIC'
           AND TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_SPRINKLERS.CURRENT_LIST_OF_VALUES=DECODE(TRUE, LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))='Partial Sprinklers', 'Partial system', LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))='Complete Sprinklers', 'Complete System', LENGTH(LTRIM(RTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD))) >1, LTRIM(RTRIM(IN_SPRINKLER_SYSTEM_TYPE_CD)), IN_SPRINKLER_SYSTEM_TYPE_CD IS NULL,'Not Applicable', 'Not Applicable')
           AND TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_SPRINKLERS.RECORD_TYPE_CD='SPRINKLERS'
          left join -- writting query for lookup function
 (
                SELECT LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.RECORD_TYPE_DESC)) as RECORD_TYPE_DESC,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.MAPPING_VALUE)) as MAPPING_VALUE,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.COMPANY)) as COMPANY,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.CURRENT_LIST_OF_VALUES)) as CURRENT_LIST_OF_VALUES,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.RECORD_TYPE_CD)) as RECORD_TYPE_CD,
                       row_number() over(partition by COMPANY, CURRENT_LIST_OF_VALUES, RECORD_TYPE_CD order by COMPANY, CURRENT_LIST_OF_VALUES, RECORD_TYPE_CD) as rn -- Please review the order by columns

                  FROM BURRPT.ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF qualify rn = 1
               ) TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE
            on TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE.COMPANY='NON_PPCIC'
           AND TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE.CURRENT_LIST_OF_VALUES=DECODE(TRUE, LENGTH(LTRIM(RTRIM(IN_FIRE_ALARM_TYPE_CD))) >0,IN_FIRE_ALARM_TYPE_CD,'None of the Above')
           AND TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE.RECORD_TYPE_CD='FIRE'
          left join -- writting query for lookup function
 (
                SELECT LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.RECORD_TYPE_DESC)) as RECORD_TYPE_DESC,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.MAPPING_VALUE)) as MAPPING_VALUE,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.COMPANY)) as COMPANY,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.CURRENT_LIST_OF_VALUES)) as CURRENT_LIST_OF_VALUES,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF.RECORD_TYPE_CD)) as RECORD_TYPE_CD,
                       row_number() over(partition by COMPANY, CURRENT_LIST_OF_VALUES, RECORD_TYPE_CD order by COMPANY, CURRENT_LIST_OF_VALUES, RECORD_TYPE_CD) as rn -- Please review the order by columns

                  FROM BURRPT.ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF ISO_BURRPT_PROPERTY_PREM_PROT_DEV_MPNG_XREF qualify rn = 1
               ) TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY
            on TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY.COMPANY='NON_PPCIC'
           AND TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY.CURRENT_LIST_OF_VALUES=DECODE(TRUE, LENGTH(LTRIM(RTRIM(IN_BURGLAR_ALARM_TYPE_CD))) >0,IN_BURGLAR_ALARM_TYPE_CD,'None of the Above')
           AND TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY.RECORD_TYPE_CD='BURGLAR'
       )
       
     --  select * from Exp_Assemble_Rows_for_Insert_DW limit 5
       
       ,
      
TRANS_EXP_POST_PT_DEVICES_FSV_LOOKUP as (
        -- writting query for expression function
SELECT Exp_Assemble_Rows_for_Insert_DW.source_record_id,
               Exp_Assemble_Rows_for_Insert_DW.S10_ISO_PLOTA_EXTRACT_ID,
               Exp_Assemble_Rows_for_Insert_DW.POL_STAT_PREM_PK,
               Exp_Assemble_Rows_for_Insert_DW.POL_STAT_UNIT_PK,
               Exp_Assemble_Rows_for_Insert_DW.POL_STAT_PK,
               Exp_Assemble_Rows_for_Insert_DW.POL_PK,
               Exp_Assemble_Rows_for_Insert_DW.CVG_PK,
               Exp_Assemble_Rows_for_Insert_DW.PCAT_UNIT_PK,
               Exp_Assemble_Rows_for_Insert_DW.LCTN_PK,
               Exp_Assemble_Rows_for_Insert_DW.ORIG_CVG_PK,
               Exp_Assemble_Rows_for_Insert_DW.ORIG_POL_PK,
               Exp_Assemble_Rows_for_Insert_DW.POL_STATE_VRSN,
               Exp_Assemble_Rows_for_Insert_DW.POL_STATE_EFF_DT,
               Exp_Assemble_Rows_for_Insert_DW.SRC_POL_ID,
               Exp_Assemble_Rows_for_Insert_DW.POL_NUM,
               Exp_Assemble_Rows_for_Insert_DW.POL_SEQ_NUM,
               Exp_Assemble_Rows_for_Insert_DW.SRC_RISK_UNIT_ID,
               Exp_Assemble_Rows_for_Insert_DW.SRC_STAT_PREMIUM_ID,
               Exp_Assemble_Rows_for_Insert_DW.SRC_STAT_UNIT_ID,
               Exp_Assemble_Rows_for_Insert_DW.SRC_STAT_HEADER_ID,
               Exp_Assemble_Rows_for_Insert_DW.SRC_CVG_ID,
               Exp_Assemble_Rows_for_Insert_DW.STATE_CODE,
               Exp_Assemble_Rows_for_Insert_DW.CUR_TERM_EFF_DT,
               Exp_Assemble_Rows_for_Insert_DW.CUR_TERM_XPTN_DT,
               Exp_Assemble_Rows_for_Insert_DW.PRI_ADDR_PSTL_CD,
               Exp_Assemble_Rows_for_Insert_DW.UNIT_TYPE,
               Exp_Assemble_Rows_for_Insert_DW.SRC_DATA_SET_NBR,
               Exp_Assemble_Rows_for_Insert_DW.ORIG_POL_STATE_VRSN,
               Exp_Assemble_Rows_for_Insert_DW.STAT_TRAN_CODE,
               Exp_Assemble_Rows_for_Insert_DW.OOS_TRANS_F,
               Exp_Assemble_Rows_for_Insert_DW.REAPPLY_TRANS_F,
               Exp_Assemble_Rows_for_Insert_DW.BACKOUT_TRANS_F,
               Exp_Assemble_Rows_for_Insert_DW.PREMIUM_SOURCE_C,
               Exp_Assemble_Rows_for_Insert_DW.PREMIUM_SOURCE_T,
               Exp_Assemble_Rows_for_Insert_DW.PREMIUM_SOURCE_SEQ,
               Exp_Assemble_Rows_for_Insert_DW.CLASS_CODE,
               Exp_Assemble_Rows_for_Insert_DW.TERRITORY_ID,
               Exp_Assemble_Rows_for_Insert_DW.PREM_COVERAGE_M,
               Exp_Assemble_Rows_for_Insert_DW.LIMIT_AMT1,
               Exp_Assemble_Rows_for_Insert_DW.LIMIT_AMT2,
               Exp_Assemble_Rows_for_Insert_DW.LIMIT_AMT3,
               Exp_Assemble_Rows_for_Insert_DW.DED_AMT1,
               Exp_Assemble_Rows_for_Insert_DW.DED_AMT2,
               Exp_Assemble_Rows_for_Insert_DW.DED_AMT3,
               Exp_Assemble_Rows_for_Insert_DW.PREM_WRIT_M,
               Exp_Assemble_Rows_for_Insert_DW.CNTRB_TO_PREMIUM_F,
               Exp_Assemble_Rows_for_Insert_DW.RCD_ACTN_TYP,
               Exp_Assemble_Rows_for_Insert_DW.DATA_DT,
               Exp_Assemble_Rows_for_Insert_DW.PRCSG_GRP_CD,
               Exp_Assemble_Rows_for_Insert_DW.POL_STATE_STAT,
               Exp_Assemble_Rows_for_Insert_DW.CO_CD,
               Exp_Assemble_Rows_for_Insert_DW.CO_ID,
               Exp_Assemble_Rows_for_Insert_DW.CO_NAM,
               Exp_Assemble_Rows_for_Insert_DW.SRC_CO_ID,
               Exp_Assemble_Rows_for_Insert_DW.CORP_CD,
               Exp_Assemble_Rows_for_Insert_DW.CORP_NAM,
               Exp_Assemble_Rows_for_Insert_DW.SRC_CORP_ID,
               Exp_Assemble_Rows_for_Insert_DW.PROD_CD,
               Exp_Assemble_Rows_for_Insert_DW.PROD_ID,
               Exp_Assemble_Rows_for_Insert_DW.PROD_NAM,
               Exp_Assemble_Rows_for_Insert_DW.SRC_PROD_ID,
               Exp_Assemble_Rows_for_Insert_DW.LOB_CD,
               Exp_Assemble_Rows_for_Insert_DW.LOB_NAM,
               Exp_Assemble_Rows_for_Insert_DW.RCD_TYP,
               Exp_Assemble_Rows_for_Insert_DW.SRC_CD,
               Exp_Assemble_Rows_for_Insert_DW.LMT_1_DESC,
               Exp_Assemble_Rows_for_Insert_DW.LMT_1_AMT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_2_DESC,
               Exp_Assemble_Rows_for_Insert_DW.LMT_2_AMT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_3_DESC,
               Exp_Assemble_Rows_for_Insert_DW.LMT_3_AMT,
               Exp_Assemble_Rows_for_Insert_DW.DDCTBL_1_DESC,
               Exp_Assemble_Rows_for_Insert_DW.DDCTBL_1_AMT,
               Exp_Assemble_Rows_for_Insert_DW.DDCTBL_2_DESC,
               Exp_Assemble_Rows_for_Insert_DW.DDCTBL_2_AMT,
               Exp_Assemble_Rows_for_Insert_DW.DDCTBL_3_DESC,
               Exp_Assemble_Rows_for_Insert_DW.DDCTBL_3_AMT,
               Exp_Assemble_Rows_for_Insert_DW.BUS_PPTY_INCRSD_LMT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_BCL,
               Exp_Assemble_Rows_for_Insert_DW.LMT_BOAT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_BOAT_EQPT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_BOAT_MOTR,
               Exp_Assemble_Rows_for_Insert_DW.LMT_BOAT_TRLR,
               Exp_Assemble_Rows_for_Insert_DW.LMT_CAMERA,
               Exp_Assemble_Rows_for_Insert_DW.LMT_COINS,
               Exp_Assemble_Rows_for_Insert_DW.LMT_ELTRNCS,
               Exp_Assemble_Rows_for_Insert_DW.LMT_ELTRNCS_OFF_PRMSES,
               Exp_Assemble_Rows_for_Insert_DW.LMT_ELTRNCS_ON_PRMSES,
               Exp_Assemble_Rows_for_Insert_DW.LMT_ELTRNCS_IN_VEH,
               Exp_Assemble_Rows_for_Insert_DW.LMT_ELTRNCS_OUT_VEH,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FINE_ART,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FINE_ART_EXCLDG_BRKAGE,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FINE_ART_INCLG_BRKAGE,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FINE_ART_DRBL,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FINE_ART_FRAGILE,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FINE_ART_PPR,
               Exp_Assemble_Rows_for_Insert_DW.LMT_FURS,
               Exp_Assemble_Rows_for_Insert_DW.LMT_GOLF,
               Exp_Assemble_Rows_for_Insert_DW.LMT_GOLF_CART,
               Exp_Assemble_Rows_for_Insert_DW.LMT_GUNS,
               Exp_Assemble_Rows_for_Insert_DW.LMT_JEWELERY,
               Exp_Assemble_Rows_for_Insert_DW.LMT_JEWELERY_IN_VALT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_JEWELERY_NO_VALT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_MONEY,
               Exp_Assemble_Rows_for_Insert_DW.LMT_MUSICL_INSTMT,
               Exp_Assemble_Rows_for_Insert_DW.LMT_MUSICL_INSTMT_NON_PFSNL,
               Exp_Assemble_Rows_for_Insert_DW.LMT_MUSICL_INSTMT_PFSNL,
               Exp_Assemble_Rows_for_Insert_DW.LMT_OTHR_STRCT_1,
               Exp_Assemble_Rows_for_Insert_DW.LMT_OTHR_STRCT_2,
               Exp_Assemble_Rows_for_Insert_DW.LMT_OTHR_STRCT_3,
               Exp_Assemble_Rows_for_Insert_DW.LMT_OTHR_STRCT_4,
               Exp_Assemble_Rows_for_Insert_DW.LMT_BLDG_ADDNS,
               Exp_Assemble_Rows_for_Insert_DW.LMT_SCRTYS,
               Exp_Assemble_Rows_for_Insert_DW.LMT_SLVRW,
               Exp_Assemble_Rows_for_Insert_DW.LMT_STAMPS,
               Exp_Assemble_Rows_for_Insert_DW.ACCTG_DT,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_VAL,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_PSTL_CD,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_CSTRN_TYP,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_NUM_FMLYS,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_CONDO_FLG,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_HEAT_TYP,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_YR_OF_CSTRN,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_LEAD_XCLSN_FLG,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_DELEADED_FLG,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               Exp_Assemble_Rows_for_Insert_DW.PTCTV_DVC_BRGLR_ALM_TYP,
               Exp_Assemble_Rows_for_Insert_DW.PTCTV_DVC_FIRE_ALM_TYP,
               Exp_Assemble_Rows_for_Insert_DW.PTCTV_DVC_SPRNKLR_TYP,
               Exp_Assemble_Rows_for_Insert_DW.PTCTV_DVC_CERT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.PTCTV_DVC_PCT_DSCNT,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_BUS_USE_FLG,
               Exp_Assemble_Rows_for_Insert_DW.BUS_CLAS,
               Exp_Assemble_Rows_for_Insert_DW.DAYCARE_NUM_OF_PRSNS,
               Exp_Assemble_Rows_for_Insert_DW.INCDTL_OFC_PRMSES_CD,
               Exp_Assemble_Rows_for_Insert_DW.INCDTL_OFC_OTHR_THAN_INSD_CD,
               Exp_Assemble_Rows_for_Insert_DW.EARTHQK_ZONE,
               Exp_Assemble_Rows_for_Insert_DW.EARTHQK_MSNRY_FLG,
               Exp_Assemble_Rows_for_Insert_DW.NAMD_STORM_BUYDOWN_OPT,
               Exp_Assemble_Rows_for_Insert_DW.NAMD_STORM_DDCTBL_OPT,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_PMRY_LCTN_NUM_A_TNK,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_1_NUM_A_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_2_NUM_A_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_3_NUM_A_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_4_NUM_A_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_PMRY_LCTN_NUM_B_TNK,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_1_NUM_B_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_2_NUM_B_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_3_NUM_B_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_4_NUM_B_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_PMRY_LCTN_NUM_C_TNK,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_1_NUM_C_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_2_NUM_C_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_3_NUM_C_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_4_NUM_C_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_PMRY_LCTN_NUM_D_TNK,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_1_NUM_D_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_2_NUM_D_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_3_NUM_D_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.FUEL_LBLTY_LCTN_4_NUM_D_TNKS,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_LEN,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_YR_BLT,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_USG,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_EQPT,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_MOTR_HP,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_MOTR_YR_BLT,
               Exp_Assemble_Rows_for_Insert_DW.BOAT_TRLR_YR_BLT,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_LEN,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_MOTR_HP,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_NAVGN_FRM,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_NAVGN_TO,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_SPD,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_TYP,
               Exp_Assemble_Rows_for_Insert_DW.MOTORIZED_LAND_CNVYC_TYP,
               Exp_Assemble_Rows_for_Insert_DW.MOTORIZED_LAND_CNVYC_SPD,
               Exp_Assemble_Rows_for_Insert_DW.MOTORIZED_LAND_CNVYC_RACING_US,
               Exp_Assemble_Rows_for_Insert_DW.SNOWMOBILE_YR,
               Exp_Assemble_Rows_for_Insert_DW.SNOWMOBILE_ENGN_CC,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_CUSTM_EQPT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.RISK_UNIT_OPER_ACDT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.WRKRS_COMP_NUM_OF_INSVNTS,
               Exp_Assemble_Rows_for_Insert_DW.WRKRS_COMP_NUM_OF_OUTSVNTS,
               Exp_Assemble_Rows_for_Insert_DW.ADDL_RSDNC_CT,
               Exp_Assemble_Rows_for_Insert_DW.VEH_CT,
               Exp_Assemble_Rows_for_Insert_DW.INCDTL_OCPNY_CT,
               Exp_Assemble_Rows_for_Insert_DW.INEXP_OPER_CT,
               Exp_Assemble_Rows_for_Insert_DW.UNINSD_MTRST_CVG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.ADDL_RSDNC_CVG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.ADDL_RSDNC_HO2470_CVG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.BUS_PURST_CT,
               Exp_Assemble_Rows_for_Insert_DW.RV_CT_UMB_COV,
               Exp_Assemble_Rows_for_Insert_DW.UNLIC_RV_CT,
               Exp_Assemble_Rows_for_Insert_DW.RNTL_CT,
               Exp_Assemble_Rows_for_Insert_DW.SAILBOAT_25_CT,
               Exp_Assemble_Rows_for_Insert_DW.SAILBOAT_35_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_15_50_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_15_100_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_15_150_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_26_50_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_26_100_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_26_150_CT,
               Exp_Assemble_Rows_for_Insert_DW.PWRBOAT_26_225_CT,
               Exp_Assemble_Rows_for_Insert_DW.BLNKT_CVG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.EARTHQK_ZONE2,
               Exp_Assemble_Rows_for_Insert_DW.LOC_OIL_TANK,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_LEN_C,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_MOTR_HRSPWR,
               Exp_Assemble_Rows_for_Insert_DW.LOC_OIL_TANK2,
               Exp_Assemble_Rows_for_Insert_DW.LOC_OIL_TANK3,
               Exp_Assemble_Rows_for_Insert_DW.LOC_OIL_TANK4,
               Exp_Assemble_Rows_for_Insert_DW.LOC_OIL_TANK5,
               Exp_Assemble_Rows_for_Insert_DW.LOC_OIL_TANK6,
               Exp_Assemble_Rows_for_Insert_DW.BUS_PURST_PRMM,
               Exp_Assemble_Rows_for_Insert_DW.PSTL_CD,
               Exp_Assemble_Rows_for_Insert_DW.TERRTY_CD,
               Exp_Assemble_Rows_for_Insert_DW.BOSTON_DIST,
               Exp_Assemble_Rows_for_Insert_DW.FIRE_DIST,
               Exp_Assemble_Rows_for_Insert_DW.FIRE_DIST_EFF_DT,
               Exp_Assemble_Rows_for_Insert_DW.THOU_FT_FRM_HDRNT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.FIVE_MILES_FRM_FIRE_DEPT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.FIRE_PTCTN_CLAS,
               Exp_Assemble_Rows_for_Insert_DW.MILES_FRM_WTR,
               Exp_Assemble_Rows_for_Insert_DW.WTR_DSTNC_CD,
               Exp_Assemble_Rows_for_Insert_DW.WTR_DSTNC_FLG,
               Exp_Assemble_Rows_for_Insert_DW.STORM_SHUTTER_FLG,
               Exp_Assemble_Rows_for_Insert_DW.LEAD_PAINT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.COML_ZONEG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.STRCT_TYP,
               Exp_Assemble_Rows_for_Insert_DW.NUM_OF_STORIES,
               Exp_Assemble_Rows_for_Insert_DW.NUM_OF_STORIES_SRC,
               Exp_Assemble_Rows_for_Insert_DW.SQ_FT,
               Exp_Assemble_Rows_for_Insert_DW.SQ_FT_SRC,
               Exp_Assemble_Rows_for_Insert_DW.HSE_STYL,
               Exp_Assemble_Rows_for_Insert_DW.HSE_STYL_SRC,
               Exp_Assemble_Rows_for_Insert_DW.NUM_OF_ACRES,
               Exp_Assemble_Rows_for_Insert_DW.YR_BLT,
               Exp_Assemble_Rows_for_Insert_DW.YR_PRCHD,
               Exp_Assemble_Rows_for_Insert_DW.PRCHS_PRC,
               Exp_Assemble_Rows_for_Insert_DW.MKT_VAL,
               Exp_Assemble_Rows_for_Insert_DW.RPLMT_CST,
               Exp_Assemble_Rows_for_Insert_DW.NMD_STORM_AMT,
               Exp_Assemble_Rows_for_Insert_DW.DWLG_USE_OCPNY,
               Exp_Assemble_Rows_for_Insert_DW.OWNR_OCPYD_FLG,
               Exp_Assemble_Rows_for_Insert_DW.SALE_VCNT_RNTD_FLG,
               Exp_Assemble_Rows_for_Insert_DW.BUS_ACTVTYS_FLG,
               Exp_Assemble_Rows_for_Insert_DW.DAY_CARE_FLG,
               Exp_Assemble_Rows_for_Insert_DW.SCNDY_HME_FLG,
               Exp_Assemble_Rows_for_Insert_DW.PMRY_HME_INSD_FLG,
               Exp_Assemble_Rows_for_Insert_DW.CSTRN_TYP,
               Exp_Assemble_Rows_for_Insert_DW.SPCL_CSTRN_FLG,
               Exp_Assemble_Rows_for_Insert_DW.NUM_OF_FMLYS,
               Exp_Assemble_Rows_for_Insert_DW.NUM_IN_FIRE_DIV,
               Exp_Assemble_Rows_for_Insert_DW.NUM_OF_RSDNTS,
               Exp_Assemble_Rows_for_Insert_DW.ROOF_TYP,
               Exp_Assemble_Rows_for_Insert_DW.HEATG_SYS,
               Exp_Assemble_Rows_for_Insert_DW.HEATG_SYS_FUEL_TYP,
               Exp_Assemble_Rows_for_Insert_DW.HME_PSTL_CD,
               Exp_Assemble_Rows_for_Insert_DW.HME_NUM_UNITS,
               Exp_Assemble_Rows_for_Insert_DW.HME_PRI_PROP_FLG,
               Exp_Assemble_Rows_for_Insert_DW.HME_RNTL_PROP_FLG,
               Exp_Assemble_Rows_for_Insert_DW.HME_UNDLYG_LMT,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_POL_CD,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_AUTO_POL_CO,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_AUTO_POL_NUM,
               Exp_Assemble_Rows_for_Insert_DW.ADDL_VEH_CT,
               Exp_Assemble_Rows_for_Insert_DW.AUTO_POL_CRDT,
               Exp_Assemble_Rows_for_Insert_DW.YTHFL_OPER_SRCHG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.YTHFL_OPER_SRCHG,
               Exp_Assemble_Rows_for_Insert_DW.YTHFL_OPER_SRCHG_CT,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_PPTY_POL_CO,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_PPTY_POL_NUM,
               Exp_Assemble_Rows_for_Insert_DW.ADDL_PPTY_CT,
               Exp_Assemble_Rows_for_Insert_DW.PPTY_POL_CRDT,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_WTRCRFT_POL_CO,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_CT,
               Exp_Assemble_Rows_for_Insert_DW.ATTACH_PT,
               Exp_Assemble_Rows_for_Insert_DW.INSD_INCORP_FLG,
               Exp_Assemble_Rows_for_Insert_DW.RV_CT_UMB_PRODUCT,
               Exp_Assemble_Rows_for_Insert_DW.QTED_PRMM_NE,
               Exp_Assemble_Rows_for_Insert_DW.ASSIST_LVNG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.AT_FLT_FLG,
               Exp_Assemble_Rows_for_Insert_DW.CLERICAL_EMPLOYEE_FLG,
               Exp_Assemble_Rows_for_Insert_DW.INCDNTL_OCC_FLG,
               Exp_Assemble_Rows_for_Insert_DW.HM_OFFICE_FLG,
               Exp_Assemble_Rows_for_Insert_DW.POOL_FLG,
               Exp_Assemble_Rows_for_Insert_DW.HM_SRVCS_FLG,
               Exp_Assemble_Rows_for_Insert_DW.SPA_FLG,
               Exp_Assemble_Rows_for_Insert_DW.TCHR_FLG,
               Exp_Assemble_Rows_for_Insert_DW.TRUST_FLG,
               Exp_Assemble_Rows_for_Insert_DW.QTED_PRMM_PAL,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_AUTO_POL_LMT,
               Exp_Assemble_Rows_for_Insert_DW.UNDLYG_PPTY_POL_LMT,
               Exp_Assemble_Rows_for_Insert_DW.PI_LIAB_CVG_FLG,
               Exp_Assemble_Rows_for_Insert_DW.UMB_OTHR_EFF_DT,
               Exp_Assemble_Rows_for_Insert_DW.UMB_OTHR_LMT,
               Exp_Assemble_Rows_for_Insert_DW.UMB_OTHR_LMT_2,
               Exp_Assemble_Rows_for_Insert_DW.UMB_PSTL_CD,
               Exp_Assemble_Rows_for_Insert_DW.UMB_NUM_OF_FMLYS,
               Exp_Assemble_Rows_for_Insert_DW.UMB_VEH_TYP_CD,
               Exp_Assemble_Rows_for_Insert_DW.UMB_OPER_DOB,
               Exp_Assemble_Rows_for_Insert_DW.UMB_VEH_OWNRSP_STAT,
               Exp_Assemble_Rows_for_Insert_DW.AUTO_UNDLYG_LMT,
               Exp_Assemble_Rows_for_Insert_DW.RV_TYP,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_BOAT_TYP,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_LNGTH,
               Exp_Assemble_Rows_for_Insert_DW.WTRCRFT_ENGINE_SIZE,
               Exp_Assemble_Rows_for_Insert_DW.SUPER_PREF_ROW_TRANS_EFF_DT,
               Exp_Assemble_Rows_for_Insert_DW.ISO_MODULE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_COMPANY_NUMBER,
               Exp_Assemble_Rows_for_Insert_DW.out_ISO_TRANSACTION_TYPE_CD,
               Exp_Assemble_Rows_for_Insert_DW.ISO_TRANSACTION_TYPE_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ACCOUNTING_DATE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_INCEPTION_DATE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_TRANS_EFFECTIVE_DATE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_TRANS_EXPIRATION_DATE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_STATE_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_TERRITORY_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ANNUAL_STMT_LOB_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               Exp_Assemble_Rows_for_Insert_DW.ISO_EXCEPTION_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_POLICY_FORM_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_NUMBER_OF_FAMILIES_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ORD_OR_LAW_COV_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_STATUS_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_CONSTRUCTION_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_PROTECTION_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_MOLD_COVERAGE_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_DEDUCTIBLE_SIZE_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_YEAR_OF_CONSTRUCTION_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_BUILDING_AND_CONTENTS_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_EXPOSURE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               Exp_Assemble_Rows_for_Insert_DW.ISO_STATE_EXCEP_INDIC_CODE_I,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ZIP_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_STATE_EXCEP_INDIC_CODE_II,
               Exp_Assemble_Rows_for_Insert_DW.ISO_STATE_EXCEP_INDIC_CODE_III,
               Exp_Assemble_Rows_for_Insert_DW.ISO_WINDTORM_HAIL_COV_IND_CD,
               Exp_Assemble_Rows_for_Insert_DW.OUT_ISO_COMP_PROG_EXCEP_INDIC,
               Exp_Assemble_Rows_for_Insert_DW.ISO_STATIS_PLAN_INDIC_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_PREMIUM_AMOUNT,
               Exp_Assemble_Rows_for_Insert_DW.ISO_PREMIUM_RECORD_ID,
               Exp_Assemble_Rows_for_Insert_DW.ISO_POSITIONS_FOR_COMPANY_USE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_LOSS_SETTLE_IND_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_CLASSIFICATION_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_TYPE_OF_EQUAKE_COV,
               Exp_Assemble_Rows_for_Insert_DW.ISO_EQ_ATTACH_INDIC_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ADD_EQ_EXPOSURE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ENV_IMP_COV_CODE_I,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ENV_IMP_COV_CODE_II,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_ATTACH_HO_PL,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_ATTACH_PERS_AUTO,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_UNDERLY_HO_PL_INDIC,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_UNDERLY_AUTO_INDIC,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_RISK_PROFILE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_LIMIT_OF_LIAB_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_UNINS_UNDERINS_LLC,
               Exp_Assemble_Rows_for_Insert_DW.ISO_UMB_SELF_INS_RETENTION,
               Exp_Assemble_Rows_for_Insert_DW.CREATE_DT,
               Exp_Assemble_Rows_for_Insert_DW.CREATE_TS,
               Exp_Assemble_Rows_for_Insert_DW.CREATED_BY,
               Exp_Assemble_Rows_for_Insert_DW.BATCH_START_DT,
               Exp_Assemble_Rows_for_Insert_DW.BATCH_END_DT,
               Exp_Assemble_Rows_for_Insert_DW.RPRTG_PERIOD_START_DT,
               Exp_Assemble_Rows_for_Insert_DW.RPRTG_PERIOD_END_DT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_PREF_SUPER_PREF_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_OIL_SPILL_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_STATUS_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_A_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_B_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_C_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_D_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_E_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_F_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_A_DED_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COV_C_DED_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_POL_DED_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_MOLD_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_MOLD_II_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_BUILD_ORD_LMT_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_BUILD_ADD1_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_RNTL_OTHR_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_WIND_HAIL_DED_AMT,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_PERS_PROP_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_FRAUD_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_PP_RC_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_INC_LMT_C_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_BUILD_ADDC_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_BUS_PUR_C_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_COVA_SPCL_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_FARM_LIABC_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_INC_OCP_OC_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_INC_OCPNCY_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_LOSS_ASMTC_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_PI_COV_IND_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_RES_REN_C_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_RES_REN_TH_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_SINK_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_SPCL_CMPTR_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_STRUC_RENC_COV_IND,
               Exp_Assemble_Rows_for_Insert_DW.EXISTS_THREE_FAM_COV_IND,
               EXP_SUBMISSION_ID.OUT_ISO_BURRPT_QTR_SUBM_ID,
               Exp_Assemble_Rows_for_Insert_DW.BCEG,
               Exp_Assemble_Rows_for_Insert_DW.ISO_PROTECTIVE_DEVICES,
               Exp_Assemble_Rows_for_Insert_DW.ISO_LOSS_HISTORY_CD,
               Exp_Assemble_Rows_for_Insert_DW.IMPACT_RESIST_GLASS_FLG,
               Exp_Assemble_Rows_for_Insert_DW.HURRICANE_SHUTTERS_FLG,
               Exp_Assemble_Rows_for_Insert_DW.ISO_TYPE_OF_DED_CODE,
               Exp_Assemble_Rows_for_Insert_DW.ISO_YEAR_OF_CONSTRUCTION_CODE AS ISO_YEAR_OF_CONSTRUCTION_CODE1,
               Exp_Assemble_Rows_for_Insert_DW.ISO_POLICY_PROGRAM,
               Exp_Assemble_Rows_for_Insert_DW.ISO_COVERAGE_C_PERCENTAGE,
               Exp_Assemble_Rows_for_Insert_DW.OUT_COV_E_LIAB_CD,
               Exp_Assemble_Rows_for_Insert_DW.OUT_LIMIT_OF_LIAB_CD,
               Exp_Assemble_Rows_for_Insert_DW.OUT_THEFT_DED_SIZE_CD,
               Exp_Assemble_Rows_for_Insert_DW.OUT_MOB_HOM_END_ID,
               Exp_Assemble_Rows_for_Insert_DW.OUT_TIE_DOWN,
               Exp_Assemble_Rows_for_Insert_DW.ISO_HOME_BUSI_CLASS_CD,
               Exp_Assemble_Rows_for_Insert_DW.ISO_ROOF_SURFACE_LOSS_CD,
               Exp_Assemble_Rows_for_Insert_DW.o_ISO_ROOF_INSTALL_YR_CD,
               Exp_Assemble_Rows_for_Insert_DW.o_ISO_RISK_IND_CD,
               Exp_Assemble_Rows_for_Insert_DW.o_ISO_RISK_IND_CD_II,
               Exp_Assemble_Rows_for_Insert_DW.TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_BRGLRY_MAPPING_VALUE AS BURGLAR_MAPPING_VALUE,
               Exp_Assemble_Rows_for_Insert_DW.TRANS_LKP_PT_MAPPING_CODES_CUR_TO_FUTURE_STATE_FIRE_MAPPING_VALUE AS FIRE_MAPPING_VALUE,
               Exp_Assemble_Rows_for_Insert_DW.OUT_FIRE_ALARM_TYPES,
               Exp_Assemble_Rows_for_Insert_DW.MAPPING_VALUE AS SPRINKLER_LEAK_VALUES,
               LTRIM(RTRIM(BURGLAR_MAPPING_VALUE)) AS OUT_BURGLAR_TRIMMED_VALUATION,
               LTRIM(RTRIM(FIRE_MAPPING_VALUE)) AS OUT_FIRE_TRIMMED_VALUATION,
               'BAFA' AS RECORD_TYPE_CD_BAFA,
               'WLSP' AS RECORD_TYPE_CD_WLSP,
               'NO WATER LEAK ALARM' AS WATER_LEAK_VALUES,
               TRANS_LKP_PT_DVCS_CDS_WATER_LEAKS_SYSTEMS.ISO_PROTECTION_DEVICE_CODE,
               TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS.ISO_PROTECTION_DEVICE_CODE AS TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS_ISO_PROTECTION_DEVICE_CODE
          FROM Exp_Assemble_Rows_for_Insert_DW
         INNER JOIN EXP_SUBMISSION_ID
            ON Exp_Assemble_Rows_for_Insert_DW.source_record_id = EXP_SUBMISSION_ID.source_record_id
          left join -- writting query for lookup function
 (
                SELECT ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.ISO_PROTECTION_DEVICE_CODE as ISO_PROTECTION_DEVICE_CODE,
                       ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.RECORD_TYPE_DESC as RECORD_TYPE_DESC,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.SPRINKLER_ALARM)) as SPRINKLER_ALARM,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.WATER_ALARM)) as WATER_ALARM,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.BURGLAR_ALARM)) as BURGLAR_ALARM,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.FIRE_ALARM)) as FIRE_ALARM,
                       ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.RECORD_TYPE_CD as RECORD_TYPE_CD,
                       row_number() over(partition by WATER_ALARM, SPRINKLER_ALARM, RECORD_TYPE_CD order by WATER_ALARM, SPRINKLER_ALARM, RECORD_TYPE_CD) as rn -- Please review the order by columns

                  FROM BURRPT.ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF qualify rn = 1
               ) TRANS_LKP_PT_DVCS_CDS_WATER_LEAKS_SYSTEMS
            on TRANS_LKP_PT_DVCS_CDS_WATER_LEAKS_SYSTEMS.WATER_ALARM='NO WATER LEAK ALARM'
           AND TRANS_LKP_PT_DVCS_CDS_WATER_LEAKS_SYSTEMS.SPRINKLER_ALARM=Exp_Assemble_Rows_for_Insert_DW.SPRINKLER_LEAK_VALUES
           AND TRANS_LKP_PT_DVCS_CDS_WATER_LEAKS_SYSTEMS.RECORD_TYPE_CD='WLSP'
          left join -- writting query for lookup function
 (
                SELECT ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.ISO_PROTECTION_DEVICE_CODE as ISO_PROTECTION_DEVICE_CODE,
                       ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.RECORD_TYPE_DESC as RECORD_TYPE_DESC,
                       ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.SPRINKLER_ALARM as SPRINKLER_ALARM,
                       ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.WATER_ALARM as WATER_ALARM,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.BURGLAR_ALARM)) as BURGLAR_ALARM,
                       LTRIM(RTRIM(ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.FIRE_ALARM)) as FIRE_ALARM,
                       ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF.RECORD_TYPE_CD as RECORD_TYPE_CD,
                       row_number() over(partition by BURGLAR_ALARM, FIRE_ALARM, RECORD_TYPE_CD order by BURGLAR_ALARM, FIRE_ALARM, RECORD_TYPE_CD) as rn -- Please review the order by columns

                  FROM BURRPT.ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF ISO_BURRPT_PROPERTY_PREM_PROT_DEV_XREF qualify rn = 1
               ) TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS
            on TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS.BURGLAR_ALARM=LTRIM(RTRIM(BURGLAR_MAPPING_VALUE))
           AND TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS.FIRE_ALARM=LTRIM(RTRIM(FIRE_MAPPING_VALUE))
           AND TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS.RECORD_TYPE_CD='BAFA'
       ) 
      -- select * from TRANS_EXP_POST_PT_DEVICES_FSV_LOOKUP limit 5
       
      ,
TRANS_EXP_POST_PT_DVCS_NEW_HIERARCHY as (
        -- writting query for expression function
SELECT source_record_id,
               S10_ISO_PLOTA_EXTRACT_ID,
               POL_STAT_PREM_PK,
               POL_STAT_UNIT_PK,
               POL_STAT_PK,
               POL_PK,
               CVG_PK,
               PCAT_UNIT_PK,
               LCTN_PK,
               ORIG_CVG_PK,
               ORIG_POL_PK,
               POL_STATE_VRSN,
               POL_STATE_EFF_DT,
               SRC_POL_ID,
               POL_NUM,
               POL_SEQ_NUM,
               SRC_RISK_UNIT_ID,
               SRC_STAT_PREMIUM_ID,
               SRC_STAT_UNIT_ID,
               SRC_STAT_HEADER_ID,
               SRC_CVG_ID,
               STATE_CODE,
               CUR_TERM_EFF_DT,
               CUR_TERM_XPTN_DT,
               PRI_ADDR_PSTL_CD,
               UNIT_TYPE,
               SRC_DATA_SET_NBR,
               ORIG_POL_STATE_VRSN,
               STAT_TRAN_CODE,
               OOS_TRANS_F,
               REAPPLY_TRANS_F,
               BACKOUT_TRANS_F,
               PREMIUM_SOURCE_C,
               PREMIUM_SOURCE_T,
               PREMIUM_SOURCE_SEQ,
               CLASS_CODE,
               TERRITORY_ID,
               PREM_COVERAGE_M,
               LIMIT_AMT1,
               LIMIT_AMT2,
               LIMIT_AMT3,
               DED_AMT1,
               DED_AMT2,
               DED_AMT3,
               PREM_WRIT_M,
               CNTRB_TO_PREMIUM_F,
               RCD_ACTN_TYP,
               DATA_DT,
               PRCSG_GRP_CD,
               POL_STATE_STAT,
               CO_CD,
               CO_ID,
               CO_NAM,
               SRC_CO_ID,
               CORP_CD,
               CORP_NAM,
               SRC_CORP_ID,
               PROD_CD,
               PROD_ID,
               PROD_NAM,
               SRC_PROD_ID,
               LOB_CD,
               LOB_NAM,
               RCD_TYP,
               SRC_CD,
               LMT_1_DESC,
               LMT_1_AMT,
               LMT_2_DESC,
               LMT_2_AMT,
               LMT_3_DESC,
               LMT_3_AMT,
               DDCTBL_1_DESC,
               DDCTBL_1_AMT,
               DDCTBL_2_DESC,
               DDCTBL_2_AMT,
               DDCTBL_3_DESC,
               DDCTBL_3_AMT,
               BUS_PPTY_INCRSD_LMT,
               LMT_BCL,
               LMT_BOAT,
               LMT_BOAT_EQPT,
               LMT_BOAT_MOTR,
               LMT_BOAT_TRLR,
               LMT_CAMERA,
               LMT_COINS,
               LMT_ELTRNCS,
               LMT_ELTRNCS_OFF_PRMSES,
               LMT_ELTRNCS_ON_PRMSES,
               LMT_ELTRNCS_IN_VEH,
               LMT_ELTRNCS_OUT_VEH,
               LMT_FINE_ART,
               LMT_FINE_ART_EXCLDG_BRKAGE,
               LMT_FINE_ART_INCLG_BRKAGE,
               LMT_FINE_ART_DRBL,
               LMT_FINE_ART_FRAGILE,
               LMT_FINE_ART_PPR,
               LMT_FURS,
               LMT_GOLF,
               LMT_GOLF_CART,
               LMT_GUNS,
               LMT_JEWELERY,
               LMT_JEWELERY_IN_VALT,
               LMT_JEWELERY_NO_VALT,
               LMT_MONEY,
               LMT_MUSICL_INSTMT,
               LMT_MUSICL_INSTMT_NON_PFSNL,
               LMT_MUSICL_INSTMT_PFSNL,
               LMT_OTHR_STRCT_1,
               LMT_OTHR_STRCT_2,
               LMT_OTHR_STRCT_3,
               LMT_OTHR_STRCT_4,
               LMT_BLDG_ADDNS,
               LMT_SCRTYS,
               LMT_SLVRW,
               LMT_STAMPS,
               ACCTG_DT,
               RISK_UNIT_VAL,
               RISK_UNIT_PSTL_CD,
               RISK_UNIT_CSTRN_TYP,
               RISK_UNIT_NUM_FMLYS,
               RISK_UNIT_CONDO_FLG,
               RISK_UNIT_HEAT_TYP,
               RISK_UNIT_YR_OF_CSTRN,
               RISK_UNIT_LEAD_XCLSN_FLG,
               RISK_UNIT_DELEADED_FLG,
               RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               PTCTV_DVC_BRGLR_ALM_TYP,
               PTCTV_DVC_FIRE_ALM_TYP,
               PTCTV_DVC_SPRNKLR_TYP,
               PTCTV_DVC_CERT_FLG,
               PTCTV_DVC_PCT_DSCNT,
               RISK_UNIT_BUS_USE_FLG,
               BUS_CLAS,
               DAYCARE_NUM_OF_PRSNS,
               INCDTL_OFC_PRMSES_CD,
               INCDTL_OFC_OTHR_THAN_INSD_CD,
               EARTHQK_ZONE,
               EARTHQK_MSNRY_FLG,
               NAMD_STORM_BUYDOWN_OPT,
               NAMD_STORM_DDCTBL_OPT,
               FUEL_LBLTY_PMRY_LCTN_NUM_A_TNK,
               FUEL_LBLTY_LCTN_1_NUM_A_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_A_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_A_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_A_TNKS,
               FUEL_LBLTY_PMRY_LCTN_NUM_B_TNK,
               FUEL_LBLTY_LCTN_1_NUM_B_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_B_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_B_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_B_TNKS,
               FUEL_LBLTY_PMRY_LCTN_NUM_C_TNK,
               FUEL_LBLTY_LCTN_1_NUM_C_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_C_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_C_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_C_TNKS,
               FUEL_LBLTY_PMRY_LCTN_NUM_D_TNK,
               FUEL_LBLTY_LCTN_1_NUM_D_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_D_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_D_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_D_TNKS,
               BOAT_LEN,
               BOAT_YR_BLT,
               BOAT_USG,
               BOAT_EQPT,
               BOAT_MOTR_HP,
               BOAT_MOTR_YR_BLT,
               BOAT_TRLR_YR_BLT,
               WTRCRFT_LEN,
               WTRCRFT_MOTR_HP,
               WTRCRFT_NAVGN_FRM,
               WTRCRFT_NAVGN_TO,
               WTRCRFT_SPD,
               WTRCRFT_TYP,
               MOTORIZED_LAND_CNVYC_TYP,
               MOTORIZED_LAND_CNVYC_SPD,
               MOTORIZED_LAND_CNVYC_RACING_US,
               SNOWMOBILE_YR,
               SNOWMOBILE_ENGN_CC,
               RISK_UNIT_CUSTM_EQPT_FLG,
               RISK_UNIT_OPER_ACDT_FLG,
               WRKRS_COMP_NUM_OF_INSVNTS,
               WRKRS_COMP_NUM_OF_OUTSVNTS,
               ADDL_RSDNC_CT,
               VEH_CT,
               INCDTL_OCPNY_CT,
               INEXP_OPER_CT,
               UNINSD_MTRST_CVG_FLG,
               ADDL_RSDNC_CVG_FLG,
               ADDL_RSDNC_HO2470_CVG_FLG,
               BUS_PURST_CT,
               RV_CT_UMB_COV,
               UNLIC_RV_CT,
               RNTL_CT,
               SAILBOAT_25_CT,
               SAILBOAT_35_CT,
               PWRBOAT_15_50_CT,
               PWRBOAT_15_100_CT,
               PWRBOAT_15_150_CT,
               PWRBOAT_26_50_CT,
               PWRBOAT_26_100_CT,
               PWRBOAT_26_150_CT,
               PWRBOAT_26_225_CT,
               BLNKT_CVG_FLG,
               EARTHQK_ZONE2,
               LOC_OIL_TANK,
               WTRCRFT_LEN_C,
               WTRCRFT_MOTR_HRSPWR,
               LOC_OIL_TANK2,
               LOC_OIL_TANK3,
               LOC_OIL_TANK4,
               LOC_OIL_TANK5,
               LOC_OIL_TANK6,
               BUS_PURST_PRMM,
               PSTL_CD,
               TERRTY_CD,
               BOSTON_DIST,
               FIRE_DIST,
               FIRE_DIST_EFF_DT,
               THOU_FT_FRM_HDRNT_FLG,
               FIVE_MILES_FRM_FIRE_DEPT_FLG,
               FIRE_PTCTN_CLAS,
               MILES_FRM_WTR,
               WTR_DSTNC_CD,
               WTR_DSTNC_FLG,
               STORM_SHUTTER_FLG,
               LEAD_PAINT_FLG,
               COML_ZONEG_FLG,
               STRCT_TYP,
               NUM_OF_STORIES,
               NUM_OF_STORIES_SRC,
               SQ_FT,
               SQ_FT_SRC,
               HSE_STYL,
               HSE_STYL_SRC,
               NUM_OF_ACRES,
               YR_BLT,
               YR_PRCHD,
               PRCHS_PRC,
               MKT_VAL,
               RPLMT_CST,
               NMD_STORM_AMT,
               DWLG_USE_OCPNY,
               OWNR_OCPYD_FLG,
               SALE_VCNT_RNTD_FLG,
               BUS_ACTVTYS_FLG,
               DAY_CARE_FLG,
               SCNDY_HME_FLG,
               PMRY_HME_INSD_FLG,
               CSTRN_TYP,
               SPCL_CSTRN_FLG,
               NUM_OF_FMLYS,
               NUM_IN_FIRE_DIV,
               NUM_OF_RSDNTS,
               ROOF_TYP,
               HEATG_SYS,
               HEATG_SYS_FUEL_TYP,
               HME_PSTL_CD,
               HME_NUM_UNITS,
               HME_PRI_PROP_FLG,
               HME_RNTL_PROP_FLG,
               HME_UNDLYG_LMT,
               UNDLYG_POL_CD,
               UNDLYG_AUTO_POL_CO,
               UNDLYG_AUTO_POL_NUM,
               ADDL_VEH_CT,
               AUTO_POL_CRDT,
               YTHFL_OPER_SRCHG_FLG,
               YTHFL_OPER_SRCHG,
               YTHFL_OPER_SRCHG_CT,
               UNDLYG_PPTY_POL_CO,
               UNDLYG_PPTY_POL_NUM,
               ADDL_PPTY_CT,
               PPTY_POL_CRDT,
               UNDLYG_WTRCRFT_POL_CO,
               WTRCRFT_CT,
               ATTACH_PT,
               INSD_INCORP_FLG,
               RV_CT_UMB_PRODUCT,
               QTED_PRMM_NE,
               ASSIST_LVNG_FLG,
               AT_FLT_FLG,
               CLERICAL_EMPLOYEE_FLG,
               INCDNTL_OCC_FLG,
               HM_OFFICE_FLG,
               POOL_FLG,
               HM_SRVCS_FLG,
               SPA_FLG,
               TCHR_FLG,
               TRUST_FLG,
               QTED_PRMM_PAL,
               UNDLYG_AUTO_POL_LMT,
               UNDLYG_PPTY_POL_LMT,
               PI_LIAB_CVG_FLG,
               UMB_OTHR_EFF_DT,
               UMB_OTHR_LMT,
               UMB_OTHR_LMT_2,
               UMB_PSTL_CD,
               UMB_NUM_OF_FMLYS,
               UMB_VEH_TYP_CD,
               UMB_OPER_DOB,
               UMB_VEH_OWNRSP_STAT,
               AUTO_UNDLYG_LMT,
               RV_TYP,
               WTRCRFT_BOAT_TYP,
               WTRCRFT_LNGTH,
               WTRCRFT_ENGINE_SIZE,
               SUPER_PREF_ROW_TRANS_EFF_DT,
               ISO_MODULE,
               ISO_COMPANY_NUMBER,
               out_ISO_TRANSACTION_TYPE_CD,
               ISO_TRANSACTION_TYPE_CODE,
               ISO_ACCOUNTING_DATE,
               ISO_INCEPTION_DATE,
               ISO_TRANS_EFFECTIVE_DATE,
               ISO_TRANS_EXPIRATION_DATE,
               ISO_STATE_CODE,
               ISO_TERRITORY_CODE,
               ISO_ANNUAL_STMT_LOB_CODE,
               ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               ISO_EXCEPTION_CODE,
               ISO_POLICY_FORM_CODE,
               ISO_NUMBER_OF_FAMILIES_CODE,
               ISO_ORD_OR_LAW_COV_CODE,
               ISO_STATUS_CODE,
               ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               ISO_CONSTRUCTION_CODE,
               ISO_PROTECTION_CODE,
               ISO_MOLD_COVERAGE_CODE,
               ISO_DEDUCTIBLE_SIZE_CODE,
               ISO_YEAR_OF_CONSTRUCTION_CODE,
               ISO_BUILDING_AND_CONTENTS_CODE,
               ISO_EXPOSURE,
               ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               ISO_STATE_EXCEP_INDIC_CODE_I,
               ISO_ZIP_CODE,
               ISO_STATE_EXCEP_INDIC_CODE_II,
               ISO_STATE_EXCEP_INDIC_CODE_III,
               ISO_WINDTORM_HAIL_COV_IND_CD,
               OUT_ISO_COMP_PROG_EXCEP_INDIC,
               ISO_STATIS_PLAN_INDIC_CODE,
               ISO_PREMIUM_AMOUNT,
               ISO_PREMIUM_RECORD_ID,
               ISO_POSITIONS_FOR_COMPANY_USE,
               ISO_LOSS_SETTLE_IND_CODE,
               ISO_CLASSIFICATION_CODE,
               ISO_TYPE_OF_EQUAKE_COV,
               ISO_EQ_ATTACH_INDIC_CODE,
               ISO_ADD_EQ_EXPOSURE,
               ISO_ENV_IMP_COV_CODE_I,
               ISO_ENV_IMP_COV_CODE_II,
               ISO_UMB_ATTACH_HO_PL,
               ISO_UMB_ATTACH_PERS_AUTO,
               ISO_UMB_UNDERLY_HO_PL_INDIC,
               ISO_UMB_UNDERLY_AUTO_INDIC,
               ISO_UMB_RISK_PROFILE,
               ISO_LIMIT_OF_LIAB_CODE,
               ISO_UMB_UNINS_UNDERINS_LLC,
               ISO_UMB_SELF_INS_RETENTION,
               CREATE_DT,
               CREATE_TS,
               CREATED_BY,
               BATCH_START_DT,
               BATCH_END_DT,
               RPRTG_PERIOD_START_DT,
               RPRTG_PERIOD_END_DT,
               EXISTS_PREF_SUPER_PREF_IND,
               EXISTS_OIL_SPILL_COV_IND,
               EXISTS_STATUS_COV_IND,
               EXISTS_COV_A_LMT_AMT,
               EXISTS_COV_B_LMT_AMT,
               EXISTS_COV_C_LMT_AMT,
               EXISTS_COV_D_LMT_AMT,
               EXISTS_COV_E_LMT_AMT,
               EXISTS_COV_F_LMT_AMT,
               EXISTS_COV_A_DED_AMT,
               EXISTS_COV_C_DED_AMT,
               EXISTS_POL_DED_AMT,
               EXISTS_MOLD_LMT_AMT,
               EXISTS_MOLD_II_LMT_AMT,
               EXISTS_BUILD_ORD_LMT_AMT,
               EXISTS_BUILD_ADD1_COV_IND,
               EXISTS_RNTL_OTHR_COV_IND,
               EXISTS_WIND_HAIL_DED_AMT,
               EXISTS_PERS_PROP_COV_IND,
               EXISTS_FRAUD_COV_IND,
               EXISTS_PP_RC_COV_IND,
               EXISTS_INC_LMT_C_COV_IND,
               EXISTS_BUILD_ADDC_COV_IND,
               EXISTS_BUS_PUR_C_COV_IND,
               EXISTS_COVA_SPCL_COV_IND,
               EXISTS_FARM_LIABC_COV_IND,
               EXISTS_INC_OCP_OC_COV_IND,
               EXISTS_INC_OCPNCY_COV_IND,
               EXISTS_LOSS_ASMTC_COV_IND,
               EXISTS_PI_COV_IND_COV_IND,
               EXISTS_RES_REN_C_COV_IND,
               EXISTS_RES_REN_TH_COV_IND,
               EXISTS_SINK_COV_IND,
               EXISTS_SPCL_CMPTR_COV_IND,
               EXISTS_STRUC_RENC_COV_IND,
               EXISTS_THREE_FAM_COV_IND,
               OUT_ISO_BURRPT_QTR_SUBM_ID,
               BCEG,
               ISO_PROTECTIVE_DEVICES,
               ISO_LOSS_HISTORY_CD,
               IMPACT_RESIST_GLASS_FLG,
               HURRICANE_SHUTTERS_FLG,
               ISO_TYPE_OF_DED_CODE,
               ISO_YEAR_OF_CONSTRUCTION_CODE1,
               ISO_POLICY_PROGRAM,
               ISO_COVERAGE_C_PERCENTAGE,
               OUT_COV_E_LIAB_CD,
               OUT_LIMIT_OF_LIAB_CD,
               OUT_THEFT_DED_SIZE_CD,
               OUT_MOB_HOM_END_ID,
               OUT_TIE_DOWN,
               ISO_HOME_BUSI_CLASS_CD,
               ISO_ROOF_SURFACE_LOSS_CD,
               o_ISO_ROOF_INSTALL_YR_CD,
               o_ISO_RISK_IND_CD,
               o_ISO_RISK_IND_CD_II,
               TRANS_LKP_PT_DVCS_CDS_SPRINKLERS_SYSTEMS_ISO_PROTECTION_DEVICE_CODE AS OUT_FIRE_ALRM_TYPES_CODE,
               ISO_PROTECTION_DEVICE_CODE AS OUT_SPRINKLER_TYPES  ,
               TO_DATE('{{EFF_DT}}', 'YYYY-MM-DD') AS V_EFF_DATE,         
               TRUNC(V_EFF_DATE,'DD') AS TRUNC_EFF_DT,        
               DECODE (TRUE, CUR_TERM_EFF_DT >=TRUNC_EFF_DT, (LTRIM(RTRIM(OUT_FIRE_ALRM_TYPES_CODE)) || LTRIM(RTRIM(OUT_SPRINKLER_TYPES))), ISO_PROTECTIVE_DEVICES) ,
               NULL AS NEW_PROTECTION_DEVICE_CODE
           FROM TRANS_EXP_POST_PT_DEVICES_FSV_LOOKUP
           
       ) 
       
     --  select * from TRANS_EXP_POST_PT_DVCS_NEW_HIERARCHY limit 5

       ,

         FILTRANS as (
        -- writing query for filter
 SELECT source_record_id,
               S10_ISO_PLOTA_EXTRACT_ID,
               POL_STAT_PREM_PK,
               POL_STAT_UNIT_PK,
               POL_STAT_PK,
               POL_PK,
               CVG_PK,
               PCAT_UNIT_PK,
               LCTN_PK,
               ORIG_CVG_PK,
               ORIG_POL_PK,
               POL_STATE_VRSN,
               POL_STATE_EFF_DT,
               SRC_POL_ID,
               POL_NUM,
               POL_SEQ_NUM,
               SRC_RISK_UNIT_ID,
               SRC_STAT_PREMIUM_ID,
               SRC_STAT_UNIT_ID,
               SRC_STAT_HEADER_ID,
               SRC_CVG_ID,
               STATE_CODE,
               CUR_TERM_EFF_DT,
               CUR_TERM_XPTN_DT,
               PRI_ADDR_PSTL_CD,
               UNIT_TYPE,
               SRC_DATA_SET_NBR,
               ORIG_POL_STATE_VRSN,
               STAT_TRAN_CODE,
               OOS_TRANS_F,
               REAPPLY_TRANS_F,
               BACKOUT_TRANS_F,
               PREMIUM_SOURCE_C,
               PREMIUM_SOURCE_T,
               PREMIUM_SOURCE_SEQ,
               CLASS_CODE,
               TERRITORY_ID,
               PREM_COVERAGE_M,
               LIMIT_AMT1,
               LIMIT_AMT2,
               LIMIT_AMT3,
               DED_AMT1,
               DED_AMT2,
               DED_AMT3,
               PREM_WRIT_M,
               CNTRB_TO_PREMIUM_F,
               RCD_ACTN_TYP,
               DATA_DT,
               PRCSG_GRP_CD,
               POL_STATE_STAT,
               CO_CD,
               CO_ID,
               CO_NAM,
               SRC_CO_ID,
               CORP_CD,
               CORP_NAM,
               SRC_CORP_ID,
               PROD_CD,
               PROD_ID,
               PROD_NAM,
               SRC_PROD_ID,
               LOB_CD,
               LOB_NAM,
               RCD_TYP,
               SRC_CD,
               LMT_1_DESC,
               LMT_1_AMT,
               LMT_2_DESC,
               LMT_2_AMT,
               LMT_3_DESC,
               LMT_3_AMT,
               DDCTBL_1_DESC,
               DDCTBL_1_AMT,
               DDCTBL_2_DESC,
               DDCTBL_2_AMT,
               DDCTBL_3_DESC,
               DDCTBL_3_AMT,
               BUS_PPTY_INCRSD_LMT,
               LMT_BCL,
               LMT_BOAT,
               LMT_BOAT_EQPT,
               LMT_BOAT_MOTR,
               LMT_BOAT_TRLR,
               LMT_CAMERA,
               LMT_COINS,
               LMT_ELTRNCS,
               LMT_ELTRNCS_OFF_PRMSES,
               LMT_ELTRNCS_ON_PRMSES,
               LMT_ELTRNCS_IN_VEH,
               LMT_ELTRNCS_OUT_VEH,
               LMT_FINE_ART,
               LMT_FINE_ART_EXCLDG_BRKAGE,
               LMT_FINE_ART_INCLG_BRKAGE,
               LMT_FINE_ART_DRBL,
               LMT_FINE_ART_FRAGILE,
               LMT_FINE_ART_PPR,
               LMT_FURS,
               LMT_GOLF,
               LMT_GOLF_CART,
               LMT_GUNS,
               LMT_JEWELERY,
               LMT_JEWELERY_IN_VALT,
               LMT_JEWELERY_NO_VALT,
               LMT_MONEY,
               LMT_MUSICL_INSTMT,
               LMT_MUSICL_INSTMT_NON_PFSNL,
               LMT_MUSICL_INSTMT_PFSNL,
               LMT_OTHR_STRCT_1,
               LMT_OTHR_STRCT_2,
               LMT_OTHR_STRCT_3,
               LMT_OTHR_STRCT_4,
               LMT_BLDG_ADDNS,
               LMT_SCRTYS,
               LMT_SLVRW,
               LMT_STAMPS,
               ACCTG_DT,
               RISK_UNIT_VAL,
               RISK_UNIT_PSTL_CD,
               RISK_UNIT_CSTRN_TYP,
               RISK_UNIT_NUM_FMLYS,
               RISK_UNIT_CONDO_FLG,
               RISK_UNIT_HEAT_TYP,
               RISK_UNIT_YR_OF_CSTRN,
               RISK_UNIT_LEAD_XCLSN_FLG,
               RISK_UNIT_DELEADED_FLG,
               RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               PTCTV_DVC_BRGLR_ALM_TYP,
               PTCTV_DVC_FIRE_ALM_TYP,
               PTCTV_DVC_SPRNKLR_TYP,
               PTCTV_DVC_CERT_FLG,
               PTCTV_DVC_PCT_DSCNT,
               RISK_UNIT_BUS_USE_FLG,
               BUS_CLAS,
               DAYCARE_NUM_OF_PRSNS,
               INCDTL_OFC_PRMSES_CD,
               INCDTL_OFC_OTHR_THAN_INSD_CD,
               EARTHQK_ZONE,
               EARTHQK_MSNRY_FLG,
               NAMD_STORM_BUYDOWN_OPT,
               NAMD_STORM_DDCTBL_OPT,
               FUEL_LBLTY_PMRY_LCTN_NUM_A_TNK,
               FUEL_LBLTY_LCTN_1_NUM_A_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_A_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_A_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_A_TNKS,
               FUEL_LBLTY_PMRY_LCTN_NUM_B_TNK,
               FUEL_LBLTY_LCTN_1_NUM_B_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_B_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_B_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_B_TNKS,
               FUEL_LBLTY_PMRY_LCTN_NUM_C_TNK,
               FUEL_LBLTY_LCTN_1_NUM_C_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_C_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_C_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_C_TNKS,
               FUEL_LBLTY_PMRY_LCTN_NUM_D_TNK,
               FUEL_LBLTY_LCTN_1_NUM_D_TNKS,
               FUEL_LBLTY_LCTN_2_NUM_D_TNKS,
               FUEL_LBLTY_LCTN_3_NUM_D_TNKS,
               FUEL_LBLTY_LCTN_4_NUM_D_TNKS,
               BOAT_LEN,
               BOAT_YR_BLT,
               BOAT_USG,
               BOAT_EQPT,
               BOAT_MOTR_HP,
               BOAT_MOTR_YR_BLT,
               BOAT_TRLR_YR_BLT,
               WTRCRFT_LEN,
               WTRCRFT_MOTR_HP,
               WTRCRFT_NAVGN_FRM,
               WTRCRFT_NAVGN_TO,
               WTRCRFT_SPD,
               WTRCRFT_TYP,
               MOTORIZED_LAND_CNVYC_TYP,
               MOTORIZED_LAND_CNVYC_SPD,
               MOTORIZED_LAND_CNVYC_RACING_US,
               SNOWMOBILE_YR,
               SNOWMOBILE_ENGN_CC,
               RISK_UNIT_CUSTM_EQPT_FLG,
               RISK_UNIT_OPER_ACDT_FLG,
               WRKRS_COMP_NUM_OF_INSVNTS,
               WRKRS_COMP_NUM_OF_OUTSVNTS,
               ADDL_RSDNC_CT,
               VEH_CT,
               INCDTL_OCPNY_CT,
               INEXP_OPER_CT,
               UNINSD_MTRST_CVG_FLG,
               ADDL_RSDNC_CVG_FLG,
               ADDL_RSDNC_HO2470_CVG_FLG,
               BUS_PURST_CT,
               RV_CT_UMB_COV,
               UNLIC_RV_CT,
               RNTL_CT,
               SAILBOAT_25_CT,
               SAILBOAT_35_CT,
               PWRBOAT_15_50_CT,
               PWRBOAT_15_100_CT,
               PWRBOAT_15_150_CT,
               PWRBOAT_26_50_CT,
               PWRBOAT_26_100_CT,
               PWRBOAT_26_150_CT,
               PWRBOAT_26_225_CT,
               BLNKT_CVG_FLG,
               EARTHQK_ZONE2,
               LOC_OIL_TANK,
               WTRCRFT_LEN_C,
               WTRCRFT_MOTR_HRSPWR,
               LOC_OIL_TANK2,
               LOC_OIL_TANK3,
               LOC_OIL_TANK4,
               LOC_OIL_TANK5,
               LOC_OIL_TANK6,
               BUS_PURST_PRMM,
               PSTL_CD,
               TERRTY_CD,
               BOSTON_DIST,
               FIRE_DIST,
               FIRE_DIST_EFF_DT,
               THOU_FT_FRM_HDRNT_FLG,
               FIVE_MILES_FRM_FIRE_DEPT_FLG,
               FIRE_PTCTN_CLAS,
               MILES_FRM_WTR,
               WTR_DSTNC_CD,
               WTR_DSTNC_FLG,
               STORM_SHUTTER_FLG,
               LEAD_PAINT_FLG,
               COML_ZONEG_FLG,
               STRCT_TYP,
               NUM_OF_STORIES,
               NUM_OF_STORIES_SRC,
               SQ_FT,
               SQ_FT_SRC,
               HSE_STYL,
               HSE_STYL_SRC,
               NUM_OF_ACRES,
               YR_BLT,
               YR_PRCHD,
               PRCHS_PRC,
               MKT_VAL,
               RPLMT_CST,
               NMD_STORM_AMT,
               DWLG_USE_OCPNY,
               OWNR_OCPYD_FLG,
               SALE_VCNT_RNTD_FLG,
               BUS_ACTVTYS_FLG,
               DAY_CARE_FLG,
               SCNDY_HME_FLG,
               PMRY_HME_INSD_FLG,
               CSTRN_TYP,
               SPCL_CSTRN_FLG,
               NUM_OF_FMLYS,
               NUM_IN_FIRE_DIV,
               NUM_OF_RSDNTS,
               ROOF_TYP,
               HEATG_SYS,
               HEATG_SYS_FUEL_TYP,
               HME_PSTL_CD,
               HME_NUM_UNITS,
               HME_PRI_PROP_FLG,
               HME_RNTL_PROP_FLG,
               HME_UNDLYG_LMT,
               UNDLYG_POL_CD,
               UNDLYG_AUTO_POL_CO,
               UNDLYG_AUTO_POL_NUM,
               ADDL_VEH_CT,
               AUTO_POL_CRDT,
               YTHFL_OPER_SRCHG_FLG,
               YTHFL_OPER_SRCHG,
               YTHFL_OPER_SRCHG_CT,
               UNDLYG_PPTY_POL_CO,
               UNDLYG_PPTY_POL_NUM,
               ADDL_PPTY_CT,
               PPTY_POL_CRDT,
               UNDLYG_WTRCRFT_POL_CO,
               WTRCRFT_CT,
               ATTACH_PT,
               INSD_INCORP_FLG,
               RV_CT_UMB_PRODUCT,
               QTED_PRMM_NE,
               ASSIST_LVNG_FLG,
               AT_FLT_FLG,
               CLERICAL_EMPLOYEE_FLG,
               INCDNTL_OCC_FLG,
               HM_OFFICE_FLG,
               POOL_FLG,
               HM_SRVCS_FLG,
               SPA_FLG,
               TCHR_FLG,
               TRUST_FLG,
               QTED_PRMM_PAL,
               UNDLYG_AUTO_POL_LMT,
               UNDLYG_PPTY_POL_LMT,
               PI_LIAB_CVG_FLG,
               UMB_OTHR_EFF_DT,
               UMB_OTHR_LMT,
               UMB_OTHR_LMT_2,
               UMB_PSTL_CD,
               UMB_NUM_OF_FMLYS,
               UMB_VEH_TYP_CD,
               UMB_OPER_DOB,
               UMB_VEH_OWNRSP_STAT,
               AUTO_UNDLYG_LMT,
               RV_TYP,
               WTRCRFT_BOAT_TYP,
               WTRCRFT_LNGTH,
               WTRCRFT_ENGINE_SIZE,
               SUPER_PREF_ROW_TRANS_EFF_DT,
               ISO_MODULE,
               ISO_COMPANY_NUMBER,
               out_ISO_TRANSACTION_TYPE_CD,
               ISO_TRANSACTION_TYPE_CODE,
               ISO_ACCOUNTING_DATE,
               ISO_INCEPTION_DATE,
               ISO_TRANS_EFFECTIVE_DATE,
               ISO_TRANS_EXPIRATION_DATE,
               ISO_STATE_CODE,
               ISO_TERRITORY_CODE,
               ISO_ANNUAL_STMT_LOB_CODE,
               ISO_PER_LIN_STA_PLN_SUBLIN_CD,
               ISO_EXCEPTION_CODE,
               ISO_POLICY_FORM_CODE,
               ISO_NUMBER_OF_FAMILIES_CODE,
               ISO_ORD_OR_LAW_COV_CODE,
               ISO_STATUS_CODE,
               ISO_WIND_DEDUCTIBLE_SIZE_CODE,
               ISO_CONSTRUCTION_CODE,
               ISO_PROTECTION_CODE,
               ISO_MOLD_COVERAGE_CODE,
               ISO_DEDUCTIBLE_SIZE_CODE,
               ISO_YEAR_OF_CONSTRUCTION_CODE,
               ISO_BUILDING_AND_CONTENTS_CODE,
               ISO_EXPOSURE,
               ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               ISO_STATE_EXCEP_INDIC_CODE_I,
               ISO_ZIP_CODE,
               ISO_STATE_EXCEP_INDIC_CODE_II,
               ISO_STATE_EXCEP_INDIC_CODE_III,
               ISO_WINDTORM_HAIL_COV_IND_CD,
               OUT_ISO_COMP_PROG_EXCEP_INDIC AS ISO_COMP_PROG_EXCEP_INDIC,
               ISO_STATIS_PLAN_INDIC_CODE,
               ISO_PREMIUM_AMOUNT,
               ISO_PREMIUM_RECORD_ID,
               ISO_POSITIONS_FOR_COMPANY_USE,
               ISO_LOSS_SETTLE_IND_CODE,
               ISO_CLASSIFICATION_CODE,
               ISO_TYPE_OF_EQUAKE_COV,
               ISO_EQ_ATTACH_INDIC_CODE,
               ISO_ADD_EQ_EXPOSURE,
               ISO_ENV_IMP_COV_CODE_I,
               ISO_ENV_IMP_COV_CODE_II,
               ISO_UMB_ATTACH_HO_PL,
               ISO_UMB_ATTACH_PERS_AUTO,
               ISO_UMB_UNDERLY_HO_PL_INDIC,
               ISO_UMB_UNDERLY_AUTO_INDIC,
               ISO_UMB_RISK_PROFILE,
               ISO_LIMIT_OF_LIAB_CODE,
               ISO_UMB_UNINS_UNDERINS_LLC,
               ISO_UMB_SELF_INS_RETENTION,
               CREATE_DT,
               CREATE_TS,
               CREATED_BY,
               BATCH_START_DT,
               BATCH_END_DT,
               RPRTG_PERIOD_START_DT,
               RPRTG_PERIOD_END_DT,
               EXISTS_PREF_SUPER_PREF_IND,
               EXISTS_OIL_SPILL_COV_IND,
               EXISTS_STATUS_COV_IND,
               EXISTS_COV_A_LMT_AMT,
               EXISTS_COV_B_LMT_AMT,
               EXISTS_COV_C_LMT_AMT,
               EXISTS_COV_D_LMT_AMT,
               EXISTS_COV_E_LMT_AMT,
               EXISTS_COV_F_LMT_AMT,
               EXISTS_COV_A_DED_AMT,
               EXISTS_COV_C_DED_AMT,
               EXISTS_POL_DED_AMT,
               EXISTS_MOLD_LMT_AMT,
               EXISTS_MOLD_II_LMT_AMT,
               EXISTS_BUILD_ORD_LMT_AMT,
               EXISTS_BUILD_ADD1_COV_IND,
               EXISTS_RNTL_OTHR_COV_IND,
               EXISTS_WIND_HAIL_DED_AMT,
               EXISTS_PERS_PROP_COV_IND,
               EXISTS_FRAUD_COV_IND,
               EXISTS_PP_RC_COV_IND,
               EXISTS_INC_LMT_C_COV_IND,
               EXISTS_BUILD_ADDC_COV_IND,
               EXISTS_BUS_PUR_C_COV_IND,
               EXISTS_COVA_SPCL_COV_IND,
               EXISTS_FARM_LIABC_COV_IND,
               EXISTS_INC_OCP_OC_COV_IND,
               EXISTS_INC_OCPNCY_COV_IND,
               EXISTS_LOSS_ASMTC_COV_IND,
               EXISTS_PI_COV_IND_COV_IND,
               EXISTS_RES_REN_C_COV_IND,
               EXISTS_RES_REN_TH_COV_IND,
               EXISTS_SINK_COV_IND,
               EXISTS_SPCL_CMPTR_COV_IND,
               EXISTS_STRUC_RENC_COV_IND,
               EXISTS_THREE_FAM_COV_IND,
               OUT_ISO_BURRPT_QTR_SUBM_ID,
               BCEG,
               NEW_PROTECTION_DEVICE_CODE AS ISO_PROTECTIVE_DEVICES,
               ISO_LOSS_HISTORY_CD,
               IMPACT_RESIST_GLASS_FLG,
               HURRICANE_SHUTTERS_FLG,
               ISO_TYPE_OF_DED_CODE,
               ISO_YEAR_OF_CONSTRUCTION_CODE1 AS ISO_YEAR_OF_CONSTRUCTION_CD,
               ISO_POLICY_PROGRAM,
               ISO_COVERAGE_C_PERCENTAGE,
               OUT_COV_E_LIAB_CD,
               OUT_LIMIT_OF_LIAB_CD,
               OUT_THEFT_DED_SIZE_CD,
               OUT_MOB_HOM_END_ID,
               OUT_TIE_DOWN,
               ISO_HOME_BUSI_CLASS_CD,
               ISO_ROOF_SURFACE_LOSS_CD,
               o_ISO_ROOF_INSTALL_YR_CD AS ISO_ROOF_INSTALL_YR_CD,
               o_ISO_RISK_IND_CD AS ISO_RISK_IND_CD,
               o_ISO_RISK_IND_CD_II AS ISO_RISK_IND_CD_II
          FROM TRANS_EXP_POST_PT_DVCS_NEW_HIERARCHY
         WHERE ISO_MODULE= 'HO' -- Note: Some Manual Workaround  Needed For This Type Of Conditions

       ) ,
UPD_HO_BUILD as (
        -- writting query for update strategy function
 SELECT FILTRANS.source_record_id,
              -- NEXTVAL --(Use the sequence created in snowflake)
1 AS ISO_BURRPT_QTR_BUILD_ID,
               BOAT_EQPT,
               BOAT_MOTR_HP,
               ISO_YEAR_OF_CONSTRUCTION_CODE AS ISO_YEAR_OF_CONSTRUCTION_CD,
               OUT_COV_E_LIAB_CD AS ISO_COVERAGE_E_LIM_LIAB_CD,
               ISO_WIND_DEDUCTIBLE_SIZE_CODE AS ISO_WIND_DEDUCTIBLE_SIZE_CD,
               ISO_CONSTRUCTION_CODE AS ISO_CONSTRUCTION_CD,
               EXISTS_FARM_LIABC_COV_IND,
               DAYCARE_NUM_OF_PRSNS,
               WTRCRFT_NAVGN_TO,
               LMT_MUSICL_INSTMT_NON_PFSNL,
               PWRBOAT_15_150_CT,
               PROD_CD,
               EXISTS_BUS_PUR_C_COV_IND,
               EXISTS_COVA_SPCL_COV_IND,
               LMT_2_DESC,
               POL_STAT_UNIT_PK,
               EXISTS_PP_RC_COV_IND,
               BATCH_START_DT,
               PWRBOAT_15_50_CT,
               PWRBOAT_15_100_CT,
               RNTL_CT,
               SAILBOAT_25_CT,
               SAILBOAT_35_CT,
               LMT_2_AMT,
               DDCTBL_1_DESC,
               DDCTBL_1_AMT,
               BUS_PPTY_INCRSD_LMT,
               LMT_BCL,
               LMT_BOAT,
               PWRBOAT_26_150_CT,
               PWRBOAT_26_225_CT,
               LMT_ELTRNCS_IN_VEH,
               EARTHQK_ZONE2,
               WTRCRFT_LEN_C,
               WTRCRFT_MOTR_HRSPWR,
               BUS_PURST_PRMM,
               PSTL_CD,
               TERRITORY_ID,
               LMT_SLVRW,
               INCDTL_OFC_PRMSES_CD,
               COML_ZONEG_FLG,
               HME_NUM_UNITS,
               EARTHQK_MSNRY_FLG,
               NAMD_STORM_BUYDOWN_OPT,
               NAMD_STORM_DDCTBL_OPT,
               BOAT_LEN,
               PWRBOAT_26_50_CT,
               PWRBOAT_26_100_CT,
               ISO_INCEPTION_DATE AS ISO_INCEPTION_DT,
               ISO_TRANS_EFFECTIVE_DATE AS ISO_TRANSACTION_EFFECTIVE_DT,
               ISO_TRANS_EXPIRATION_DATE AS ISO_TRANSACTION_EXPIRE_DT,
               SRC_STAT_UNIT_ID,
               SRC_STAT_HEADER_ID,
               SRC_CVG_ID,
               OOS_TRANS_F,
               REAPPLY_TRANS_F,
               BACKOUT_TRANS_F,
               ISO_STATE_EXCEP_INDIC_CODE_I AS ISO_STATE_EXCEP_INDIC_CD_I,
               PREMIUM_SOURCE_T,
               WTR_DSTNC_FLG,
               STORM_SHUTTER_FLG,
               LIMIT_AMT1,
               LIMIT_AMT2,
               ISO_ENV_IMP_COV_CODE_I AS ISO_ENV_IMPMT_COVG_CD_SEC_I,
               ISO_ENV_IMP_COV_CODE_II AS ISO_ENV_IMPMT_COVG_CD_SEC_II,
               ISO_HOME_BUSI_CLASS_CD,
               BATCH_END_DT,
               RPRTG_PERIOD_START_DT,
               EARTHQK_ZONE,
               ISO_TRANSACTION_TYPE_CODE AS ISO_TRANSACTION_TYPE_CD,
               EXISTS_BUILD_ORD_LMT_AMT,
               EXISTS_BUILD_ADD1_COV_IND,
               TERRTY_CD,
               BOSTON_DIST,
               FIRE_DIST,
               EXISTS_SINK_COV_IND,
               RCD_TYP,
               SRC_CD,
               LMT_1_DESC,
               LMT_1_AMT,
               EXISTS_LOSS_ASMTC_COV_IND,
               ISO_ZIP_CODE AS ISO_ZIP_CD,
               POL_SEQ_NUM,
               LMT_BOAT_EQPT,
               LMT_GOLF_CART,
               LMT_GUNS,
               LMT_JEWELERY,
               POL_STAT_PK,
               POL_PK,
               CVG_PK,
               PCAT_UNIT_PK,
               LCTN_PK,
               INCDTL_OCPNY_CT,
               INEXP_OPER_CT,
               EXISTS_MOLD_II_LMT_AMT,
               ISO_STATE_CODE AS ISO_STATE_CD,
               BUS_CLAS,
               ISO_PREMIUM_AMOUNT AS ISO_PREMIUM_AMT,
               EXISTS_COV_E_LMT_AMT,
               ISO_WINDTORM_HAIL_COV_IND_CD AS ISO_WISTORM_HAIL_COV_IND_CD,
               ROOF_TYP,
               ISO_STATE_EXCEP_INDIC_CODE_II AS ISO_STATE_EXCEP_INDIC_CD_II,
               ISO_STATE_EXCEP_INDIC_CODE_III AS ISO_STATE_EXCEP_INDIC_CD_III,
               DWLG_USE_OCPNY,
               OWNR_OCPYD_FLG,
               LMT_MUSICL_INSTMT_PFSNL,
               EXISTS_PERS_PROP_COV_IND,
               EXISTS_FRAUD_COV_IND,
               BOAT_YR_BLT,
               PREM_COVERAGE_M,
               PROD_ID,
               PROD_NAM,
               SRC_PROD_ID,
               PREM_WRIT_M,
               WTRCRFT_TYP,
               MOTORIZED_LAND_CNVYC_TYP,
               HME_PSTL_CD,
               ISO_ROOF_SURFACE_LOSS_CD,
               ISO_ROOF_INSTALL_YR_CD,
               ISO_RISK_IND_CD,
               ISO_RISK_IND_CD_II,
               SCNDY_HME_FLG,
               ISO_STATUS_CODE AS ISO_STATUS_CD,
               HME_PRI_PROP_FLG,
               HME_RNTL_PROP_FLG,
               RPRTG_PERIOD_END_DT,
               ISO_MODULE,
               ISO_COMPANY_NUMBER,
               ISO_ACCOUNTING_DATE AS ISO_ACCOUNTING_DT,
               BLNKT_CVG_FLG,
               INCDTL_OFC_OTHR_THAN_INSD_CD,
               ISO_PROTECTIVE_DEVICES,
               EXISTS_RES_REN_C_COV_IND,
               OUT_MOB_HOM_END_ID AS ISO_MOBHOME_ENDOR_IDENTIFIER,
               OUT_TIE_DOWN AS ISO_TIE_DOWN,
               BOAT_MOTR_YR_BLT,
               BOAT_TRLR_YR_BLT,
               WTRCRFT_LEN,
               WTRCRFT_MOTR_HP,
               WTRCRFT_NAVGN_FRM,
               ISO_TERRITORY_CODE AS ISO_TERRITORY_CD,
               ISO_ANNUAL_STMT_LOB_CODE AS ISO_ANNUAL_STMT_LOB_CD,
               ISO_PER_LIN_STA_PLN_SUBLIN_CD AS ISO_PERS_LIN_STAT_PLN_SUBLI_CD,
               ISO_EXCEPTION_CODE AS ISO_EXCEPTION_CD,
               ISO_POLICY_FORM_CODE AS ISO_POLICY_FORM_CD,
               EXISTS_RNTL_OTHR_COV_IND,
               EXISTS_WIND_HAIL_DED_AMT,
               ISO_LOSS_HISTORY_CD,
               IMPACT_RESIST_GLASS_FLG,
               HURRICANE_SHUTTERS_FLG,
               ISO_TYPE_OF_DED_CODE AS ISO_TYPE_OF_DEDUCT_CD,
               ISO_DEDUCTIBLE_SIZE_CODE AS ISO_FIRE_DEDUCTIBLE_SIZE_CD,
               SALE_VCNT_RNTD_FLG,
               BUS_ACTVTYS_FLG,
               DAY_CARE_FLG,
               DATA_DT,
               PRCSG_GRP_CD,
               POL_STATE_STAT,
               CO_CD,
               CO_ID,
               RISK_UNIT_NUM_FMLYS,
               RISK_UNIT_CONDO_FLG,
               RISK_UNIT_HEAT_TYP,
               RISK_UNIT_YR_OF_CSTRN,
               RISK_UNIT_LEAD_XCLSN_FLG,
               RISK_UNIT_DELEADED_FLG,
               RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               PTCTV_DVC_BRGLR_ALM_TYP,
               PTCTV_DVC_FIRE_ALM_TYP,
               PTCTV_DVC_SPRNKLR_TYP,
               PTCTV_DVC_CERT_FLG,
               PTCTV_DVC_PCT_DSCNT,
               EXISTS_PI_COV_IND_COV_IND,
               ORIG_CVG_PK,
               ORIG_POL_PK,
               POL_STATE_VRSN,
               POL_STATE_EFF_DT,
               PRI_ADDR_PSTL_CD,
               UNIT_TYPE,
               STRCT_TYP,
               NUM_OF_STORIES,
               NUM_OF_ACRES,
               SQ_FT,
               HSE_STYL,
               YR_BLT,
               RPLMT_CST,
               LMT_BOAT_TRLR,
               LMT_CAMERA,
               LMT_COINS,
               LMT_ELTRNCS,
               LMT_ELTRNCS_OFF_PRMSES,
               LMT_ELTRNCS_ON_PRMSES,
               EXISTS_COV_F_LMT_AMT,
               EXISTS_COV_A_DED_AMT,
               EXISTS_COV_C_DED_AMT,
               EXISTS_POL_DED_AMT,
               EXISTS_MOLD_LMT_AMT,
               PREMIUM_SOURCE_SEQ,
               LMT_STAMPS,
               EXISTS_RES_REN_TH_COV_IND,
               EXISTS_COV_A_LMT_AMT,
               EXISTS_COV_B_LMT_AMT,
               EXISTS_COV_C_LMT_AMT,
               EXISTS_COV_D_LMT_AMT,
               LMT_OTHR_STRCT_2,
               FIRE_DIST_EFF_DT,
               THOU_FT_FRM_HDRNT_FLG,
               FIVE_MILES_FRM_FIRE_DEPT_FLG,
               FIRE_PTCTN_CLAS,
               MILES_FRM_WTR,
               PREMIUM_SOURCE_C,
               LMT_MONEY,
               LMT_MUSICL_INSTMT,
               LMT_OTHR_STRCT_1,
               S10_ISO_PLOTA_EXTRACT_ID AS S10_ISO_PLOTA_EXTRACT_NE_ID,
               POL_STAT_PREM_PK,
               SRC_CORP_ID,
               LMT_OTHR_STRCT_4,
               LMT_BLDG_ADDNS,
               LMT_SCRTYS,
               LMT_ELTRNCS_OUT_VEH,
               LMT_FINE_ART,
               LMT_FINE_ART_EXCLDG_BRKAGE,
               LMT_FINE_ART_INCLG_BRKAGE,
               LMT_FURS,
               LMT_GOLF,
               HME_UNDLYG_LMT,
               EXISTS_PREF_SUPER_PREF_IND,
               EXISTS_OIL_SPILL_COV_IND,
               SNOWMOBILE_YR,
               SNOWMOBILE_ENGN_CC,
               RISK_UNIT_CUSTM_EQPT_FLG,
               RISK_UNIT_OPER_ACDT_FLG,
               WRKRS_COMP_NUM_OF_INSVNTS,
               WRKRS_COMP_NUM_OF_OUTSVNTS,
               ADDL_RSDNC_CT,
               VEH_CT,
               STATE_CODE,
               CUR_TERM_EFF_DT,
               CUR_TERM_XPTN_DT,
               ISO_NUMBER_OF_FAMILIES_CODE AS ISO_NUMBER_OF_FAMILIES_CD,
               ISO_ORD_OR_LAW_COV_CODE AS ISO_ORD_OR_LAW_COV_CD,
               SRC_DATA_SET_NBR,
               ISO_PREMIUM_RECORD_ID,
               ISO_POSITIONS_FOR_COMPANY_USE,
               ISO_EXPOSURE,
               SPCL_CSTRN_FLG,
               NUM_OF_FMLYS,
               NUM_IN_FIRE_DIV,
               NUM_OF_RSDNTS,
               MOTORIZED_LAND_CNVYC_SPD,
               MOTORIZED_LAND_CNVYC_RACING_US,
               EXISTS_INC_LMT_C_COV_IND,
               EXISTS_BUILD_ADDC_COV_IND,
               BOAT_USG,
               EXISTS_SPCL_CMPTR_COV_IND,
               EXISTS_STRUC_RENC_COV_IND,
               EXISTS_THREE_FAM_COV_IND,
               CREATE_DT,
               CREATE_TS,
               CREATED_BY,
               OUT_ISO_BURRPT_QTR_SUBM_ID AS ISO_BURRPT_QTR_SUBM_ID,
               DED_AMT1,
               WTRCRFT_SPD,
               PMRY_HME_INSD_FLG,
               CSTRN_TYP,
               RISK_UNIT_PSTL_CD,
               RISK_UNIT_CSTRN_TYP,
               ISO_POLICY_PROGRAM,
               OUT_LIMIT_OF_LIAB_CD AS ISO_LIMIT_OF_LIAB_UNIT_OWN,
               ISO_COVERAGE_C_PERCENTAGE,
               OUT_THEFT_DED_SIZE_CD AS ISO_THEFT_DEDUCT_SIZE_CD,
               BCEG,
               LMT_OTHR_STRCT_3,
               LEAD_PAINT_FLG,
               LMT_JEWELERY_IN_VALT,
               LMT_JEWELERY_NO_VALT,
               RISK_UNIT_BUS_USE_FLG,
               LMT_BOAT_MOTR,
               SRC_RISK_UNIT_ID,
               SRC_STAT_PREMIUM_ID,
               ORIG_POL_STATE_VRSN,
               STAT_TRAN_CODE,
               WTR_DSTNC_CD,
               EXISTS_INC_OCP_OC_COV_IND,
               EXISTS_INC_OCPNCY_COV_IND,
               ACCTG_DT,
               EXISTS_STATUS_COV_IND,
               ISO_PROTECTION_CODE AS ISO_PROTECTION_CD,
               ISO_MOLD_COVERAGE_CODE AS ISO_MOLD_COVERAGE_CD,
               ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               SRC_POL_ID,
               POL_NUM,
               NMD_STORM_AMT,
               ISO_COMP_PROG_EXCEP_INDIC,
               ISO_STATIS_PLAN_INDIC_CODE AS ISO_STATIS_PLAN_INDIC_CD,
               CNTRB_TO_PREMIUM_F,
               RCD_ACTN_TYP,
               CO_NAM,
               SRC_CO_ID,
               CORP_CD,
               CORP_NAM,
               UNINSD_MTRST_CVG_FLG,
               ADDL_RSDNC_CVG_FLG,
               ADDL_RSDNC_HO2470_CVG_FLG,
               BUS_PURST_CT,
               RV_CT_UMB_COV,
               UNLIC_RV_CT,
               LOB_CD,
               LOB_NAM,
               NULL AS CITY,
                NULL AS STATE,
               NULL AS CNTY     
                   
          FROM FILTRANS
       ) ,

FINAL_SELECT_ISO_BURRPT_PLOTA_PREM_HO_BUILD_NE AS(
        -- writing query for target definition
SELECT ISO_BURRPT_QTR_BUILD_ID :: INTEGER AS ISO_BURRPT_QTR_BUILD_ID,
               trim(ISO_BURRPT_QTR_SUBM_ID) :: varchar(20) AS ISO_BURRPT_QTR_SUBM_ID,
               S10_ISO_PLOTA_EXTRACT_NE_ID :: INTEGER AS S10_ISO_PLOTA_EXTRACT_NE_ID,
               POL_STAT_PREM_PK :: INTEGER AS POL_STAT_PREM_PK,
               POL_STAT_UNIT_PK :: INTEGER AS POL_STAT_UNIT_PK,
               POL_STAT_PK :: INTEGER AS POL_STAT_PK,
               POL_PK :: INTEGER AS POL_PK,
               CVG_PK :: INTEGER AS CVG_PK,
               PCAT_UNIT_PK :: INTEGER AS PCAT_UNIT_PK,
               LCTN_PK :: INTEGER AS LCTN_PK,
               ORIG_CVG_PK :: INTEGER AS ORIG_CVG_PK,
               ORIG_POL_PK :: INTEGER AS ORIG_POL_PK,
               POL_STATE_VRSN :: INTEGER AS POL_STATE_VRSN,
               POL_STATE_EFF_DT :: DATE AS POL_STATE_EFF_DT,
               SRC_POL_ID :: INTEGER AS SRC_POL_ID,
               trim(POL_NUM) :: varchar(25) AS POL_NUM,
               POL_SEQ_NUM :: INTEGER AS POL_SEQ_NUM,
               SRC_CVG_ID :: INTEGER AS SRC_CVG_ID,
               trim(STATE_CODE) :: varchar(2) AS STATE_CODE,
               CUR_TERM_EFF_DT :: DATE AS CUR_TERM_EFF_DT,
             CUR_TERM_XPTN_DT :: DATE AS CUR_TERM_XPTN_DT,
                trim(PRI_ADDR_PSTL_CD) :: varchar(11) AS PRI_ADDR_PSTL_CD,
               trim(UNIT_TYPE) :: varchar(20) AS UNIT_TYPE,
               SRC_DATA_SET_NBR :: INTEGER AS SRC_DATA_SET_NBR,
               ORIG_POL_STATE_VRSN :: INTEGER AS ORIG_POL_STATE_VRSN,
               trim(STAT_TRAN_CODE) :: varchar(10) AS STAT_TRAN_CODE,
               trim(OOS_TRANS_F) :: varchar(1) AS OOS_TRANS_F,
               trim(REAPPLY_TRANS_F) :: varchar(1) AS REAPPLY_TRANS_F,
               trim(BACKOUT_TRANS_F) :: varchar(1) AS BACKOUT_TRANS_F,
               trim(PREMIUM_SOURCE_C) :: varchar(20) AS PREMIUM_SOURCE_C,
               trim(PREMIUM_SOURCE_T) :: varchar(10) AS PREMIUM_SOURCE_T,
               PREMIUM_SOURCE_SEQ :: INTEGER AS PREMIUM_SOURCE_SEQ,
               TERRITORY_ID :: INTEGER AS TERRITORY_ID,
               trim(CNTRB_TO_PREMIUM_F) :: varchar(1) AS CNTRB_TO_PREMIUM_F,
               trim(RCD_ACTN_TYP) :: varchar(1) AS RCD_ACTN_TYP,
               DATA_DT :: DATE AS DATA_DT,
               trim(PRCSG_GRP_CD) :: varchar(10) AS PRCSG_GRP_CD,
               trim(POL_STATE_STAT) :: varchar(10) AS POL_STATE_STAT,
               trim(CO_CD) :: varchar(10) AS CO_CD,
               CO_ID :: INTEGER AS CO_ID,
               trim(CO_NAM) :: varchar(255) AS CO_NAM,
               SRC_CO_ID :: INTEGER AS SRC_CO_ID,
               trim(CORP_CD) :: varchar(10) AS CORP_CD,
               trim(CORP_NAM) :: varchar(255) AS CORP_NAM,
               SRC_CORP_ID :: INTEGER AS SRC_CORP_ID,
               trim(PROD_CD) :: varchar(10) AS PROD_CD,
               PROD_ID :: INTEGER AS PROD_ID,
               trim(PROD_NAM) :: varchar(50) AS PROD_NAM,
               SRC_PROD_ID :: INTEGER AS SRC_PROD_ID,
               trim(LOB_CD) :: varchar(10) AS LOB_CD,
               trim(LOB_NAM) :: varchar(50) AS LOB_NAM,
               trim(RCD_TYP) :: varchar(1) AS RCD_TYP,
               trim(SRC_CD) :: varchar(10) AS SRC_CD,
               trim(LMT_1_DESC) :: varchar(50) AS LMT_1_DESC,
               trim(LMT_2_DESC) :: varchar(50) AS LMT_2_DESC,
               trim(DDCTBL_1_DESC) :: varchar(50) AS DDCTBL_1_DESC,
               BUS_PPTY_INCRSD_LMT :: INTEGER AS BUS_PPTY_INCRSD_LMT,
               LMT_BCL :: INTEGER AS LMT_BCL,
               LMT_BOAT :: INTEGER AS LMT_BOAT,
               LMT_BOAT_EQPT :: INTEGER AS LMT_BOAT_EQPT,
               LMT_BOAT_MOTR :: INTEGER AS LMT_BOAT_MOTR,
               LMT_BOAT_TRLR :: INTEGER AS LMT_BOAT_TRLR,
               LMT_CAMERA :: INTEGER AS LMT_CAMERA,
               LMT_COINS :: INTEGER AS LMT_COINS,
               LMT_ELTRNCS :: INTEGER AS LMT_ELTRNCS,
               LMT_ELTRNCS_OFF_PRMSES :: INTEGER AS LMT_ELTRNCS_OFF_PRMSES,
               LMT_ELTRNCS_ON_PRMSES :: INTEGER AS LMT_ELTRNCS_ON_PRMSES,
               LMT_ELTRNCS_IN_VEH :: INTEGER AS LMT_ELTRNCS_IN_VEH,
               LMT_ELTRNCS_OUT_VEH :: INTEGER AS LMT_ELTRNCS_OUT_VEH,
               LMT_FINE_ART :: INTEGER AS LMT_FINE_ART,
               LMT_FINE_ART_EXCLDG_BRKAGE :: INTEGER AS LMT_FINE_ART_EXCLDG_BRKAGE,
               LMT_FINE_ART_INCLG_BRKAGE :: INTEGER AS LMT_FINE_ART_INCLG_BRKAGE,
               LMT_FURS :: INTEGER AS LMT_FURS,
               LMT_GOLF :: INTEGER AS LMT_GOLF,
               LMT_GOLF_CART :: INTEGER AS LMT_GOLF_CART,
               LMT_GUNS :: INTEGER AS LMT_GUNS,
               LMT_JEWELERY :: INTEGER AS LMT_JEWELERY,
               LMT_JEWELERY_IN_VALT :: INTEGER AS LMT_JEWELERY_IN_VALT,
               LMT_JEWELERY_NO_VALT :: INTEGER AS LMT_JEWELERY_NO_VALT,
               LMT_MONEY :: INTEGER AS LMT_MONEY,
               LMT_MUSICL_INSTMT :: INTEGER AS LMT_MUSICL_INSTMT,
               LMT_MUSICL_INSTMT_NON_PFSNL :: INTEGER AS LMT_MUSICL_INSTMT_NON_PFSNL,
               LMT_MUSICL_INSTMT_PFSNL :: INTEGER AS LMT_MUSICL_INSTMT_PFSNL,
               LMT_OTHR_STRCT_1 :: INTEGER AS LMT_OTHR_STRCT_1,
               LMT_OTHR_STRCT_2 :: INTEGER AS LMT_OTHR_STRCT_2,
               LMT_OTHR_STRCT_3 :: INTEGER AS LMT_OTHR_STRCT_3,
               LMT_OTHR_STRCT_4 :: INTEGER AS LMT_OTHR_STRCT_4,
               LMT_BLDG_ADDNS :: INTEGER AS LMT_BLDG_ADDNS,
               LMT_SCRTYS :: INTEGER AS LMT_SCRTYS,
               LMT_SLVRW :: INTEGER AS LMT_SLVRW,
               LMT_STAMPS :: INTEGER AS LMT_STAMPS,
              ACCTG_DT :: DATE AS ACCTG_DT,
               trim(RISK_UNIT_PSTL_CD) :: varchar(13) AS RISK_UNIT_PSTL_CD,
               trim(RISK_UNIT_CSTRN_TYP) :: varchar(50) AS RISK_UNIT_CSTRN_TYP,
               trim(RISK_UNIT_NUM_FMLYS) :: varchar(50) AS RISK_UNIT_NUM_FMLYS,
               trim(RISK_UNIT_CONDO_FLG) :: varchar(1) AS RISK_UNIT_CONDO_FLG,
               trim(RISK_UNIT_HEAT_TYP) :: varchar(50) AS RISK_UNIT_HEAT_TYP,
               RISK_UNIT_YR_OF_CSTRN :: INTEGER AS RISK_UNIT_YR_OF_CSTRN,
               trim(RISK_UNIT_LEAD_XCLSN_FLG) :: varchar(1) AS RISK_UNIT_LEAD_XCLSN_FLG,
               trim(RISK_UNIT_DELEADED_FLG) :: varchar(1) AS RISK_UNIT_DELEADED_FLG,
               trim(RISK_UNIT_CERTFD_LEAD_FREE_FLG) :: varchar(1) AS RISK_UNIT_CERTFD_LEAD_FREE_FLG,
               trim(PTCTV_DVC_BRGLR_ALM_TYP) :: varchar(50) AS PTCTV_DVC_BRGLR_ALM_TYP,
               trim(PTCTV_DVC_FIRE_ALM_TYP) :: varchar(50) AS PTCTV_DVC_FIRE_ALM_TYP,
               trim(PTCTV_DVC_SPRNKLR_TYP) :: varchar(50) AS PTCTV_DVC_SPRNKLR_TYP,
               trim(PTCTV_DVC_CERT_FLG) :: varchar(1) AS PTCTV_DVC_CERT_FLG,
               PTCTV_DVC_PCT_DSCNT :: INTEGER AS PTCTV_DVC_PCT_DSCNT,
               trim(RISK_UNIT_BUS_USE_FLG) :: varchar(1) AS RISK_UNIT_BUS_USE_FLG,
               trim(BUS_CLAS) :: varchar(50) AS BUS_CLAS,
               trim(DAYCARE_NUM_OF_PRSNS) :: varchar(50) AS DAYCARE_NUM_OF_PRSNS,
               trim(INCDTL_OFC_PRMSES_CD) :: varchar(1) AS INCDTL_OFC_PRMSES_CD,
               trim(INCDTL_OFC_OTHR_THAN_INSD_CD) :: varchar(1) AS INCDTL_OFC_OTHR_THAN_INSD_CD,
               EARTHQK_ZONE :: INTEGER AS EARTHQK_ZONE,
               trim(EARTHQK_MSNRY_FLG) :: varchar(1) AS EARTHQK_MSNRY_FLG,
               trim(NAMD_STORM_BUYDOWN_OPT) :: varchar(10) AS NAMD_STORM_BUYDOWN_OPT,
               trim(NAMD_STORM_DDCTBL_OPT) :: varchar(50) AS NAMD_STORM_DDCTBL_OPT,
               BOAT_LEN :: INTEGER AS BOAT_LEN,
               BOAT_YR_BLT :: INTEGER AS BOAT_YR_BLT,
               trim(BOAT_USG) :: varchar(10) AS BOAT_USG,
               trim(BOAT_EQPT) :: varchar(50) AS BOAT_EQPT,---e
               BOAT_MOTR_HP :: INTEGER AS BOAT_MOTR_HP,
               BOAT_MOTR_YR_BLT :: INTEGER AS BOAT_MOTR_YR_BLT,
               BOAT_TRLR_YR_BLT :: INTEGER AS BOAT_TRLR_YR_BLT,
               WTRCRFT_LEN :: INTEGER AS WTRCRFT_LEN,
               WTRCRFT_MOTR_HP :: INTEGER AS WTRCRFT_MOTR_HP,
              WTRCRFT_NAVGN_FRM :: DATE AS WTRCRFT_NAVGN_FRM,
              WTRCRFT_NAVGN_TO :: DATE AS WTRCRFT_NAVGN_TO,
              WTRCRFT_SPD :: INTEGER AS WTRCRFT_SPD,
              trim(WTRCRFT_TYP) :: varchar(50) AS WTRCRFT_TYP,
              trim(MOTORIZED_LAND_CNVYC_TYP) :: varchar(50) AS MOTORIZED_LAND_CNVYC_TYP,
             MOTORIZED_LAND_CNVYC_SPD :: INTEGER AS MOTORIZED_LAND_CNVYC_SPD,
               trim(MOTORIZED_LAND_CNVYC_RACING_US) :: varchar(1) AS MOTORIZED_LAND_CNVYC_RACING_US,
               SNOWMOBILE_YR :: INTEGER AS SNOWMOBILE_YR,
               SNOWMOBILE_ENGN_CC :: INTEGER AS SNOWMOBILE_ENGN_CC,
               trim(RISK_UNIT_CUSTM_EQPT_FLG) :: varchar(1) AS RISK_UNIT_CUSTM_EQPT_FLG,
               trim(RISK_UNIT_OPER_ACDT_FLG) :: varchar(1) AS RISK_UNIT_OPER_ACDT_FLG,
               WRKRS_COMP_NUM_OF_INSVNTS :: INTEGER AS WRKRS_COMP_NUM_OF_INSVNTS,
               WRKRS_COMP_NUM_OF_OUTSVNTS :: INTEGER AS WRKRS_COMP_NUM_OF_OUTSVNTS,
               ADDL_RSDNC_CT :: INTEGER AS ADDL_RSDNC_CT,
               VEH_CT :: INTEGER AS VEH_CT,
               INCDTL_OCPNY_CT :: INTEGER AS INCDTL_OCPNY_CT,
               INEXP_OPER_CT :: INTEGER AS INEXP_OPER_CT,
               trim(UNINSD_MTRST_CVG_FLG) :: varchar(1) AS UNINSD_MTRST_CVG_FLG,
               trim(ADDL_RSDNC_CVG_FLG) :: varchar(1) AS ADDL_RSDNC_CVG_FLG,
               trim(ADDL_RSDNC_HO2470_CVG_FLG) :: varchar(1) AS ADDL_RSDNC_HO2470_CVG_FLG,
               BUS_PURST_CT :: INTEGER AS BUS_PURST_CT,
               RV_CT_UMB_COV :: INTEGER AS RV_CT_UMB_COV,
               UNLIC_RV_CT :: INTEGER AS UNLIC_RV_CT,
               RNTL_CT :: INTEGER AS RNTL_CT,
               SAILBOAT_25_CT :: INTEGER AS SAILBOAT_25_CT,
               SAILBOAT_35_CT :: INTEGER AS SAILBOAT_35_CT,
               PWRBOAT_15_50_CT :: INTEGER AS PWRBOAT_15_50_CT,
               PWRBOAT_15_100_CT :: INTEGER AS PWRBOAT_15_100_CT,
               PWRBOAT_15_150_CT :: INTEGER AS PWRBOAT_15_150_CT,
               PWRBOAT_26_50_CT :: INTEGER AS PWRBOAT_26_50_CT,
               PWRBOAT_26_100_CT :: INTEGER AS PWRBOAT_26_100_CT,
               PWRBOAT_26_150_CT :: INTEGER AS PWRBOAT_26_150_CT,
               PWRBOAT_26_225_CT :: INTEGER AS PWRBOAT_26_225_CT,
               trim(BLNKT_CVG_FLG) :: varchar(1) AS BLNKT_CVG_FLG,
               trim(EARTHQK_ZONE2) :: varchar(10) AS EARTHQK_ZONE2,
               trim(WTRCRFT_LEN_C) :: varchar(100) AS WTRCRFT_LEN_C,
               trim(WTRCRFT_MOTR_HRSPWR) :: varchar(100) AS WTRCRFT_MOTR_HRSPWR,
               trim(PSTL_CD) :: varchar(13) AS PSTL_CD,
               trim(TERRTY_CD) :: varchar(50) AS TERRTY_CD,
               trim(BOSTON_DIST) :: varchar(1) AS BOSTON_DIST,
               trim(FIRE_DIST) :: varchar(50) AS FIRE_DIST,
               FIRE_DIST_EFF_DT :: DATE AS FIRE_DIST_EFF_DT,
               trim(THOU_FT_FRM_HDRNT_FLG) :: varchar(50) AS THOU_FT_FRM_HDRNT_FLG,
               trim(FIVE_MILES_FRM_FIRE_DEPT_FLG) :: varchar(50) AS FIVE_MILES_FRM_FIRE_DEPT_FLG,
               trim(FIRE_PTCTN_CLAS) :: varchar(10) AS FIRE_PTCTN_CLAS,
               trim(WTR_DSTNC_CD) :: varchar(10) AS WTR_DSTNC_CD,
               trim(WTR_DSTNC_FLG) :: varchar(1) AS WTR_DSTNC_FLG,
               trim(STORM_SHUTTER_FLG) :: varchar(1) AS STORM_SHUTTER_FLG,
               trim(IMPACT_RESIST_GLASS_FLG) :: varchar(1) AS IMPACT_RESIST_GLASS_FLG,
               trim(HURRICANE_SHUTTERS_FLG) :: varchar(1) AS HURRICANE_SHUTTERS_FLG,
               trim(LEAD_PAINT_FLG) :: varchar(1) AS LEAD_PAINT_FLG,
               trim(COML_ZONEG_FLG) :: varchar(1) AS COML_ZONEG_FLG,
               trim(STRCT_TYP) :: varchar(50) AS STRCT_TYP,
               trim(NUM_OF_STORIES) :: varchar(50) AS NUM_OF_STORIES,
               SQ_FT :: INTEGER AS SQ_FT,
              trim(HSE_STYL) :: varchar(50) AS HSE_STYL,
               YR_BLT :: INTEGER AS YR_BLT,
               RPLMT_CST :: INTEGER AS RPLMT_CST,
               trim(DWLG_USE_OCPNY) :: varchar(100) AS DWLG_USE_OCPNY,
               trim(OWNR_OCPYD_FLG) :: varchar(1) AS OWNR_OCPYD_FLG,
               trim(SALE_VCNT_RNTD_FLG) :: varchar(1) AS SALE_VCNT_RNTD_FLG,
               trim(BUS_ACTVTYS_FLG) :: varchar(1) AS BUS_ACTVTYS_FLG,
               trim(DAY_CARE_FLG) :: varchar(1) AS DAY_CARE_FLG,
               trim(SCNDY_HME_FLG) :: varchar(1) AS SCNDY_HME_FLG,
               trim(PMRY_HME_INSD_FLG) :: varchar(1) AS PMRY_HME_INSD_FLG,
               trim(CSTRN_TYP) :: varchar(50) AS CSTRN_TYP,
               trim(SPCL_CSTRN_FLG) :: varchar(1) AS SPCL_CSTRN_FLG,
               trim(NUM_OF_FMLYS) :: varchar(50) AS NUM_OF_FMLYS,
                 NUM_IN_FIRE_DIV :: INTEGER AS NUM_IN_FIRE_DIV,
                 NUM_OF_RSDNTS :: INTEGER AS NUM_OF_RSDNTS,
                trim(ROOF_TYP) :: varchar(50) AS ROOF_TYP,
                trim(HME_PSTL_CD) :: varchar(5) AS HME_PSTL_CD,
               HME_NUM_UNITS :: INTEGER AS HME_NUM_UNITS,
               trim(HME_PRI_PROP_FLG) :: varchar(1) AS HME_PRI_PROP_FLG,
               trim(HME_RNTL_PROP_FLG) :: varchar(1) AS HME_RNTL_PROP_FLG,
               trim(HME_UNDLYG_LMT) :: varchar(10) AS HME_UNDLYG_LMT,
               trim(EXISTS_PREF_SUPER_PREF_IND) :: varchar(1) AS EXISTS_PREF_SUPER_PREF_IND,
               trim(EXISTS_OIL_SPILL_COV_IND) :: varchar(1) AS EXISTS_OIL_SPILL_COV_IND,
               trim(EXISTS_STATUS_COV_IND) :: varchar(1) AS EXISTS_STATUS_COV_IND,
               trim(EXISTS_BUILD_ADD1_COV_IND) :: varchar(1) AS EXISTS_BUILD_ADD1_COV_IND,
               trim(EXISTS_RNTL_OTHR_COV_IND) :: varchar(1) AS EXISTS_RNTL_OTHR_COV_IND,
               trim(EXISTS_PERS_PROP_COV_IND) :: varchar(1) AS EXISTS_PERS_PROP_COV_IND,
               trim(EXISTS_FRAUD_COV_IND) :: varchar(1) AS EXISTS_FRAUD_COV_IND,
               trim(EXISTS_PP_RC_COV_IND) :: varchar(1) AS EXISTS_PP_RC_COV_IND,
               trim(EXISTS_INC_LMT_C_COV_IND) :: varchar(1) AS EXISTS_INC_LMT_C_COV_IND,
               trim(EXISTS_BUILD_ADDC_COV_IND) :: varchar(1) AS EXISTS_BUILD_ADDC_COV_IND,
               trim(EXISTS_BUS_PUR_C_COV_IND) :: varchar(1) AS EXISTS_BUS_PUR_C_COV_IND,
               trim(EXISTS_COVA_SPCL_COV_IND) :: varchar(1) AS EXISTS_COVA_SPCL_COV_IND,
               trim(EXISTS_FARM_LIABC_COV_IND) :: varchar(1) AS EXISTS_FARM_LIABC_COV_IND,
               trim(EXISTS_INC_OCP_OC_COV_IND) :: varchar(1) AS EXISTS_INC_OCP_OC_COV_IND,
               trim(EXISTS_INC_OCPNCY_COV_IND) :: varchar(1) AS EXISTS_INC_OCPNCY_COV_IND,
               trim(EXISTS_LOSS_ASMTC_COV_IND) :: varchar(1) AS EXISTS_LOSS_ASMTC_COV_IND,
               trim(EXISTS_PI_COV_IND_COV_IND) :: varchar(1) AS EXISTS_PI_COV_IND_COV_IND,
               trim(EXISTS_RES_REN_C_COV_IND) :: varchar(1) AS EXISTS_RES_REN_C_COV_IND,
               trim(EXISTS_RES_REN_TH_COV_IND) :: varchar(1) AS EXISTS_RES_REN_TH_COV_IND,
               trim(EXISTS_SINK_COV_IND) :: varchar(1) AS EXISTS_SINK_COV_IND,
               trim(EXISTS_SPCL_CMPTR_COV_IND) :: varchar(1) AS EXISTS_SPCL_CMPTR_COV_IND,
               trim(EXISTS_STRUC_RENC_COV_IND) :: varchar(1) AS EXISTS_STRUC_RENC_COV_IND,
               trim(EXISTS_THREE_FAM_COV_IND) :: varchar(1) AS EXISTS_THREE_FAM_COV_IND,
               CREATE_DT :: DATE AS CREATE_DT,
               CREATE_TS :: TIMESTAMP AS CREATE_TS,
               trim(CREATED_BY) :: varchar(55) AS CREATED_BY,
              BATCH_START_DT :: DATE AS BATCH_START_DT,
               BATCH_END_DT :: DATE AS BATCH_END_DT,
               RPRTG_PERIOD_START_DT :: DATE AS RPRTG_PERIOD_START_DT,
               RPRTG_PERIOD_END_DT :: DATE AS RPRTG_PERIOD_END_DT,
               trim(ISO_MODULE) :: varchar(2) AS ISO_MODULE,
               trim(ISO_COMPANY_NUMBER) :: varchar(4) AS ISO_COMPANY_NUMBER,
               trim(ISO_TRANSACTION_TYPE_CD) :: varchar(1) AS ISO_TRANSACTION_TYPE_CD,
               trim(ISO_ACCOUNTING_DT) :: varchar(2) AS ISO_ACCOUNTING_DT,
               trim(ISO_INCEPTION_DT) :: varchar(3) AS ISO_INCEPTION_DT,
               trim(ISO_TRANSACTION_EFFECTIVE_DT) :: varchar(3) AS ISO_TRANSACTION_EFFECTIVE_DT,
               trim(ISO_TRANSACTION_EXPIRE_DT) :: varchar(3) AS ISO_TRANSACTION_EXPIRE_DT,
               trim(ISO_STATE_CD) :: varchar(2) AS ISO_STATE_CD,
               trim(ISO_TERRITORY_CD) :: varchar(2) AS ISO_TERRITORY_CD,
               trim(ISO_HOME_BUSI_CLASS_CD) :: varchar(2) AS ISO_HOME_BUSI_CLASS_CD,
               trim(ISO_ANNUAL_STMT_LOB_CD) :: varchar(3) AS ISO_ANNUAL_STMT_LOB_CD,
               trim(ISO_PERS_LIN_STAT_PLN_SUBLI_CD) :: varchar(3) AS ISO_PERS_LIN_STAT_PLN_SUBLI_CD,
               trim(ISO_EXCEPTION_CD) :: varchar(1) AS ISO_EXCEPTION_CD,
                trim(ISO_POLICY_FORM_CD) :: varchar(1) AS ISO_POLICY_FORM_CD,
                trim(ISO_NUMBER_OF_FAMILIES_CD) :: varchar(1) AS ISO_NUMBER_OF_FAMILIES_CD,
                trim(ISO_ORD_OR_LAW_COV_CD) :: varchar(1) AS ISO_ORD_OR_LAW_COV_CD,
               trim(ISO_STATUS_CD) :: varchar(1) AS ISO_STATUS_CD,
               trim(ISO_WIND_DEDUCTIBLE_SIZE_CD) :: varchar(2) AS ISO_WIND_DEDUCTIBLE_SIZE_CD,
                trim(ISO_CONSTRUCTION_CD) :: varchar(1) AS ISO_CONSTRUCTION_CD,
               trim(ISO_PROTECTION_CD) :: varchar(2) AS ISO_PROTECTION_CD,
               trim(ISO_MOLD_COVERAGE_CD) :: varchar(1) AS ISO_MOLD_COVERAGE_CD,
               trim(ISO_THEFT_DEDUCT_SIZE_CD) :: varchar(1) AS ISO_THEFT_DEDUCT_SIZE_CD,
               trim(ISO_TYPE_OF_DEDUCT_CD) :: varchar(1) AS ISO_TYPE_OF_DEDUCT_CD,
               trim(ISO_FIRE_DEDUCTIBLE_SIZE_CD) :: varchar(2) AS ISO_FIRE_DEDUCTIBLE_SIZE_CD,
               trim(ISO_YEAR_OF_CONSTRUCTION_CD) :: varchar(2) AS ISO_YEAR_OF_CONSTRUCTION_CD,
               trim(ISO_ENV_IMPMT_COVG_CD_SEC_I) :: varchar(1) AS ISO_ENV_IMPMT_COVG_CD_SEC_I,
               trim(ISO_ENV_IMPMT_COVG_CD_SEC_II) :: varchar(1) AS ISO_ENV_IMPMT_COVG_CD_SEC_II,
               trim(ISO_LIMIT_OF_LIAB_UNIT_OWN) :: varchar(1) AS ISO_LIMIT_OF_LIAB_UNIT_OWN,
               trim(ISO_POLICY_PROGRAM) :: varchar(1) AS ISO_POLICY_PROGRAM,
               trim(ISO_COVERAGE_C_PERCENTAGE) :: varchar(1) AS ISO_COVERAGE_C_PERCENTAGE,
               trim(ISO_COVERAGE_E_LIM_LIAB_CD) :: varchar(1) AS ISO_COVERAGE_E_LIM_LIAB_CD,
               trim(ISO_EXPOSURE) :: varchar(4) AS ISO_EXPOSURE,
               trim(ISO_BLDG_CD_EFF_GRAD_CLASS_CD) :: varchar(2) AS ISO_BLDG_CD_EFF_GRAD_CLASS_CD,
               trim(ISO_PROTECTIVE_DEVICES) :: varchar(2) AS ISO_PROTECTIVE_DEVICES,
               trim(ISO_MOBHOME_ENDOR_IDENTIFIER) :: varchar(1) AS ISO_MOBHOME_ENDOR_IDENTIFIER,
               trim(ISO_TIE_DOWN) :: varchar(1) AS ISO_TIE_DOWN,
               trim(ISO_STATE_EXCEP_INDIC_CD_I) :: varchar(1) AS ISO_STATE_EXCEP_INDIC_CD_I,
               trim(ISO_ZIP_CD) :: varchar(5) AS ISO_ZIP_CD,
               trim(ISO_STATE_EXCEP_INDIC_CD_II) :: varchar(1) AS ISO_STATE_EXCEP_INDIC_CD_II,
               trim(ISO_STATE_EXCEP_INDIC_CD_III) :: varchar(1) AS ISO_STATE_EXCEP_INDIC_CD_III,
               trim(ISO_WISTORM_HAIL_COV_IND_CD) :: varchar(1) AS ISO_WISTORM_HAIL_COV_IND_CD,
               trim(ISO_LOSS_HISTORY_CD) :: varchar(1) AS ISO_LOSS_HISTORY_CD,
               trim(ISO_COMP_PROG_EXCEP_INDIC) :: varchar(2) AS ISO_COMP_PROG_EXCEP_INDIC,
               trim(ISO_STATIS_PLAN_INDIC_CD) :: varchar(1) AS ISO_STATIS_PLAN_INDIC_CD,
               trim(ISO_PREMIUM_RECORD_ID) :: varchar(13) AS ISO_PREMIUM_RECORD_ID,
               trim(ISO_POSITIONS_FOR_COMPANY_USE) :: varchar(20) AS ISO_POSITIONS_FOR_COMPANY_USE,
               trim(ISO_ROOF_SURFACE_LOSS_CD) :: varchar(1) AS ISO_ROOF_SURFACE_LOSS_CD,
               trim(ISO_ROOF_INSTALL_YR_CD) :: varchar(2) AS ISO_ROOF_INSTALL_YR_CD,
                trim(ISO_RISK_IND_CD) :: varchar(1) AS ISO_RISK_IND_CD,
                trim(ISO_RISK_IND_CD_II) :: varchar(1) AS ISO_RISK_IND_CD_II,
               SRC_RISK_UNIT_ID :: DECIMAL AS SRC_RISK_UNIT_ID,
               SRC_STAT_PREMIUM_ID :: DECIMAL AS SRC_STAT_PREMIUM_ID,
               SRC_STAT_UNIT_ID :: DECIMAL AS SRC_STAT_UNIT_ID,
               SRC_STAT_HEADER_ID :: DECIMAL AS SRC_STAT_HEADER_ID,
               PREM_COVERAGE_M :: DECIMAL AS PREM_COVERAGE_M,
               LIMIT_AMT1 :: DECIMAL AS LIMIT_AMT1,
               LIMIT_AMT2 :: DECIMAL AS LIMIT_AMT2,
               DED_AMT1 :: DECIMAL AS DED_AMT1,
               PREM_WRIT_M :: DECIMAL AS PREM_WRIT_M,
               LMT_1_AMT :: DECIMAL AS LMT_1_AMT,
               LMT_2_AMT :: DECIMAL AS LMT_2_AMT,
               DDCTBL_1_AMT :: DECIMAL AS DDCTBL_1_AMT,
               BUS_PURST_PRMM :: DECIMAL AS BUS_PURST_PRMM,
               MILES_FRM_WTR :: DECIMAL AS MILES_FRM_WTR,
               NUM_OF_ACRES :: DECIMAL AS NUM_OF_ACRES,
               NMD_STORM_AMT :: DECIMAL AS NMD_STORM_AMT,
               BCEG :: DECIMAL AS BCEG,
               EXISTS_COV_A_LMT_AMT :: DECIMAL AS EXISTS_COV_A_LMT_AMT,
               EXISTS_COV_B_LMT_AMT :: DECIMAL AS EXISTS_COV_B_LMT_AMT,
               EXISTS_COV_C_LMT_AMT :: DECIMAL AS EXISTS_COV_C_LMT_AMT,
               EXISTS_COV_D_LMT_AMT :: DECIMAL AS EXISTS_COV_D_LMT_AMT,
               EXISTS_COV_E_LMT_AMT :: DECIMAL AS EXISTS_COV_E_LMT_AMT,
               EXISTS_COV_F_LMT_AMT :: DECIMAL AS EXISTS_COV_F_LMT_AMT,
               EXISTS_COV_A_DED_AMT :: DECIMAL AS EXISTS_COV_A_DED_AMT,
               EXISTS_COV_C_DED_AMT :: DECIMAL AS EXISTS_COV_C_DED_AMT,
               EXISTS_POL_DED_AMT :: DECIMAL AS EXISTS_POL_DED_AMT,
               EXISTS_MOLD_LMT_AMT :: DECIMAL AS EXISTS_MOLD_LMT_AMT,
               EXISTS_MOLD_II_LMT_AMT :: DECIMAL AS EXISTS_MOLD_II_LMT_AMT,
               EXISTS_BUILD_ORD_LMT_AMT :: DECIMAL AS EXISTS_BUILD_ORD_LMT_AMT,
               EXISTS_WIND_HAIL_DED_AMT :: DECIMAL AS EXISTS_WIND_HAIL_DED_AMT,
               ISO_PREMIUM_AMT :: DECIMAL AS ISO_PREMIUM_AMT,
               trim(CITY) :: varchar(120) AS CITY,
               trim(STATE) :: varchar(2) AS STATE,
                trim(CNTY) :: varchar(60) AS CNTY              
               
               
          FROM UPD_HO_BUILD
       ) SELECT *
  FROM  FINAL_SELECT_ISO_BURRPT_PLOTA_PREM_HO_BUILD_NE
