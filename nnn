WITH EXPTRANS1 AS (
    SELECT 
        A.*,
        COALESCE(B.POL_PK, 0) AS POL_PK_REINSTATED_WITH_LAPSE, -- Ensures no NULL issues in joins
        COALESCE(C.POL_PK, 0) AS POL_PK_ADD_VEH,               -- Ensures no NULL issues in joins
        CASE
            WHEN A.DMV_TRANS_TYPE = 'NB' AND SUBSTR(A.POL_VRSN_TXN_TYP, 1, 2) != 'EN' THEN 'N'
            WHEN A.DMV_TRANS_TYPE = 'RS' AND A.REINST_TYP = 'WITH LAPSE' THEN 'N'
            WHEN A.DMV_TRANS_TYPE = 'CN' AND A.ROW_STAT = 'C' THEN 'N'
            WHEN A.DMV_TRANS_TYPE = 'CN' AND A.ROW_STAT != 'C' 
                 AND COALESCE(B.POL_PK, 0) > 0 
                 AND COALESCE(B.POL_PK, 0) > A.POL_PK THEN 'N'
            WHEN A.DMV_TRANS_TYPE = 'RS' AND A.REINST_TYP = 'REINSTATE' 
                 AND A.ROW_STAT = 'C' 
                 AND COALESCE(A.POL_PK_CANCEL, 0) = 0 
                 AND NOT EXISTS (SELECT 1 FROM LKP_REINSTATE_WITH_LAPSE1_last WHERE POL_PK = A.POL_PK) THEN 'N'
            WHEN A.DMV_TRANS_TYPE = 'AV' AND A.POL_PK = C.POL_PK THEN 'N'
            ELSE 'Y'
        END AS FILTER_OUT_IND
    FROM EXP_PRE_FILTER A
    LEFT JOIN LKP_REINSTATE_WITH_LAPSE1_last B
        ON A.POL_PK = B.POL_PK
    LEFT JOIN LKP_ADD_VEH_DUPLICATES C
        ON A.POL_PK = C.POL_PK
),
FILTRANS AS (
    SELECT *
    FROM EXPTRANS1
    WHERE FILTER_OUT_IND = 'N'
)
SELECT *
FROM FILTRANS;
